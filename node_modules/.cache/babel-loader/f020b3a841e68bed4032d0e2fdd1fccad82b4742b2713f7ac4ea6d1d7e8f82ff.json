{"ast":null,"code":"var _jsxFileName = \"C:\\\\final_year_project\\\\app\\\\frontend\\\\src\\\\pages\\\\JobsPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { fetchJobs, checkApiHealth, testCors } from \"../services/api\";\nimport JobCard from \"../components/JobCard\";\nimport '../styles/JobsPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst JobsPage = () => {\n  _s();\n  const [jobs, setJobs] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [healthStatus, setHealthStatus] = useState(null);\n  const [corsStatus, setCorsStatus] = useState(null);\n  const [debugInfo, setDebugInfo] = useState({});\n  useEffect(() => {\n    const initializeData = async () => {\n      // Collect debug info first\n      const debug = {\n        url: process.env.REACT_APP_API_BASE_URL || \"Not set in environment\",\n        browser: navigator.userAgent,\n        timestamp: new Date().toISOString(),\n        origin: window.location.origin\n      };\n      setDebugInfo(debug);\n      console.log(\"Debug info:\", debug);\n\n      // Test steps in sequence to better isolate issues\n      try {\n        // Step 1: Test CORS configuration\n        console.log(\"Step 1: Testing CORS configuration...\");\n        const cors = await testCors();\n        setCorsStatus(cors);\n        if (!cors.ok) {\n          console.warn(\"CORS test failed:\", cors);\n          // Continue to health check even if CORS test fails\n        } else {\n          console.log(\"CORS test passed:\", cors);\n        }\n\n        // Step 2: Check API health\n        console.log(\"Step 2: Checking API health...\");\n        const health = await checkApiHealth();\n        setHealthStatus(health);\n        if (!health.ok) {\n          console.warn(\"API health check failed:\", health);\n          setError(`API health check failed: ${health.error || 'Unknown error'}`);\n          // Continue to fetch jobs even if health check fails\n        } else {\n          console.log(\"API health check passed:\", health);\n        }\n\n        // Step 3: Fetch jobs regardless of previous steps\n        console.log(\"Step 3: Fetching jobs...\");\n        await getJobs();\n      } catch (error) {\n        console.error(\"Initialization error:\", error);\n        setError(`Initialization error: ${error.message}`);\n        setLoading(false);\n      }\n    };\n    initializeData();\n  }, []);\n  const getJobs = async () => {\n    try {\n      setLoading(true);\n      console.log(\"Fetching jobs with debug info:\", debugInfo);\n\n      // Try to fetch jobs using the multi-method approach from our updated API client\n      const jobsData = await fetchJobs();\n      if (Array.isArray(jobsData) && jobsData.length > 0) {\n        console.log(`Successfully fetched ${jobsData.length} jobs:`, jobsData[0]);\n        setJobs(jobsData);\n        setError(null); // Clear any previous errors\n      } else if (Array.isArray(jobsData) && jobsData.length === 0) {\n        console.log(\"Successfully connected to API but no jobs were found\");\n        setJobs([]);\n        setError(null); // Clear any previous errors\n      } else {\n        console.error(\"Unexpected response format:\", jobsData);\n        setError(`Received invalid data format from API: ${JSON.stringify(jobsData).slice(0, 100)}...`);\n      }\n    } catch (error) {\n      var _error$response, _error$response2, _error$response3;\n      console.error(\"Error fetching jobs:\", error);\n\n      // More detailed error message based on the error type\n      if (error.message.includes(\"Network Error\") || error.message.includes(\"Failed to fetch\")) {\n        setError(\"Network error: Could not connect to server. Please check if the API server is running and accessible.\");\n      } else if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n        setError(\"Authentication error: You must be logged in to view jobs.\");\n      } else if (((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.status) === 403) {\n        setError(\"Permission error: You don't have access to view these jobs.\");\n      } else if (((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.status) === 500) {\n        setError(\"Server error: The server encountered an internal error. Please try again later.\");\n      } else {\n        setError(`Error: ${error.message}`);\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleTryAgain = () => {\n    getJobs();\n  };\n  const handleTestCors = async () => {\n    try {\n      const result = await testCors();\n      setCorsStatus(result);\n      if (result.ok) {\n        alert(`CORS test successful! Response: ${JSON.stringify(result.data)}`);\n      } else {\n        alert(`CORS test failed: ${result.error}`);\n      }\n    } catch (err) {\n      alert(`CORS test error: ${err.message}`);\n    }\n  };\n\n  // Loading state\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"jobs-container loading\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Loading available jobs...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loader\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Checking connection to: \", debugInfo.url]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Error state with debugging info\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"jobs-container error\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Oops! Something went wrong\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"debug-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Debug Information\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"API URL:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 17\n            }, this), \" \", debugInfo.url]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Your Origin:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 17\n            }, this), \" \", debugInfo.origin]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"CORS Test:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 17\n            }, this), \" \", corsStatus ? corsStatus.ok ? \"Passed\" : `Failed: ${corsStatus.error || 'Unknown error'}` : \"Not run\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Health Check:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 17\n            }, this), \" \", healthStatus ? healthStatus.ok ? \"Passed\" : `Failed: ${healthStatus.error || 'Unknown error'}` : \"Not run\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Browser:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 17\n            }, this), \" \", debugInfo.browser]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Time:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 17\n            }, this), \" \", debugInfo.timestamp]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"troubleshooting\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"CORS Issues?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"If you're experiencing CORS errors, try these steps:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"Verify that your backend CORS configuration includes \", /*#__PURE__*/_jsxDEV(\"code\", {\n              children: debugInfo.origin\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 70\n            }, this), \" as an allowed origin\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"Check that your API is running and accessible at \", /*#__PURE__*/_jsxDEV(\"code\", {\n              children: debugInfo.url\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 66\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"Try accessing the API directly by visiting \", /*#__PURE__*/_jsxDEV(\"a\", {\n              href: `${debugInfo.url}/health`,\n              target: \"_blank\",\n              rel: \"noopener noreferrer\",\n              children: \"Health Check Endpoint\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 60\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"debug-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleTestCors,\n          className: \"debug-button\",\n          children: \"Test CORS Configuration\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleTryAgain,\n          className: \"retry-button\",\n          children: \"Try Again\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Success state\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"jobs-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Available Jobs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }, this), jobs.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"no-jobs\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No jobs are currently available. Please check back later.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"debug-info small\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"API URL:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 16\n          }, this), \" \", debugInfo.url]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"CORS Status:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 16\n          }, this), \" \", corsStatus !== null && corsStatus !== void 0 && corsStatus.ok ? \"Passed\" : \"Failed\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Health Status:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 16\n          }, this), \" \", healthStatus !== null && healthStatus !== void 0 && healthStatus.ok ? \"Passed\" : \"Failed\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleTryAgain,\n        className: \"retry-button\",\n        children: \"Refresh Jobs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"jobs-list\",\n      children: jobs.map(job => /*#__PURE__*/_jsxDEV(JobCard, {\n        job: job\n      }, job.job_id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 191,\n    columnNumber: 5\n  }, this);\n};\n_s(JobsPage, \"x5vpUPH6ucoFyHJBgqHPg2aDdGo=\");\n_c = JobsPage;\nexport default JobsPage;\nvar _c;\n$RefreshReg$(_c, \"JobsPage\");","map":{"version":3,"names":["React","useEffect","useState","fetchJobs","checkApiHealth","testCors","JobCard","jsxDEV","_jsxDEV","JobsPage","_s","jobs","setJobs","loading","setLoading","error","setError","healthStatus","setHealthStatus","corsStatus","setCorsStatus","debugInfo","setDebugInfo","initializeData","debug","url","process","env","REACT_APP_API_BASE_URL","browser","navigator","userAgent","timestamp","Date","toISOString","origin","window","location","console","log","cors","ok","warn","health","getJobs","message","jobsData","Array","isArray","length","JSON","stringify","slice","_error$response","_error$response2","_error$response3","includes","response","status","handleTryAgain","handleTestCors","result","alert","data","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","href","target","rel","onClick","map","job","job_id","_c","$RefreshReg$"],"sources":["C:/final_year_project/app/frontend/src/pages/JobsPage.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { fetchJobs, checkApiHealth, testCors } from \"../services/api\";\r\nimport JobCard from \"../components/JobCard\";\r\nimport '../styles/JobsPage.css';\r\n\r\nconst JobsPage = () => {\r\n  const [jobs, setJobs] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [healthStatus, setHealthStatus] = useState(null);\r\n  const [corsStatus, setCorsStatus] = useState(null);\r\n  const [debugInfo, setDebugInfo] = useState({});\r\n  \r\n  useEffect(() => {\r\n    const initializeData = async () => {\r\n      // Collect debug info first\r\n      const debug = {\r\n        url: process.env.REACT_APP_API_BASE_URL || \"Not set in environment\",\r\n        browser: navigator.userAgent,\r\n        timestamp: new Date().toISOString(),\r\n        origin: window.location.origin\r\n      };\r\n      setDebugInfo(debug);\r\n      console.log(\"Debug info:\", debug);\r\n      \r\n      // Test steps in sequence to better isolate issues\r\n      try {\r\n        // Step 1: Test CORS configuration\r\n        console.log(\"Step 1: Testing CORS configuration...\");\r\n        const cors = await testCors();\r\n        setCorsStatus(cors);\r\n        \r\n        if (!cors.ok) {\r\n          console.warn(\"CORS test failed:\", cors);\r\n          // Continue to health check even if CORS test fails\r\n        } else {\r\n          console.log(\"CORS test passed:\", cors);\r\n        }\r\n        \r\n        // Step 2: Check API health\r\n        console.log(\"Step 2: Checking API health...\");\r\n        const health = await checkApiHealth();\r\n        setHealthStatus(health);\r\n        \r\n        if (!health.ok) {\r\n          console.warn(\"API health check failed:\", health);\r\n          setError(`API health check failed: ${health.error || 'Unknown error'}`);\r\n          // Continue to fetch jobs even if health check fails\r\n        } else {\r\n          console.log(\"API health check passed:\", health);\r\n        }\r\n        \r\n        // Step 3: Fetch jobs regardless of previous steps\r\n        console.log(\"Step 3: Fetching jobs...\");\r\n        await getJobs();\r\n        \r\n      } catch (error) {\r\n        console.error(\"Initialization error:\", error);\r\n        setError(`Initialization error: ${error.message}`);\r\n        setLoading(false);\r\n      }\r\n    };\r\n    \r\n    initializeData();\r\n  }, []);\r\n  \r\n  const getJobs = async () => {\r\n    try {\r\n      setLoading(true);\r\n      \r\n      console.log(\"Fetching jobs with debug info:\", debugInfo);\r\n      \r\n      // Try to fetch jobs using the multi-method approach from our updated API client\r\n      const jobsData = await fetchJobs();\r\n      \r\n      if (Array.isArray(jobsData) && jobsData.length > 0) {\r\n        console.log(`Successfully fetched ${jobsData.length} jobs:`, jobsData[0]);\r\n        setJobs(jobsData);\r\n        setError(null); // Clear any previous errors\r\n      } else if (Array.isArray(jobsData) && jobsData.length === 0) {\r\n        console.log(\"Successfully connected to API but no jobs were found\");\r\n        setJobs([]);\r\n        setError(null); // Clear any previous errors\r\n      } else {\r\n        console.error(\"Unexpected response format:\", jobsData);\r\n        setError(`Received invalid data format from API: ${JSON.stringify(jobsData).slice(0, 100)}...`);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching jobs:\", error);\r\n      \r\n      // More detailed error message based on the error type\r\n      if (error.message.includes(\"Network Error\") || error.message.includes(\"Failed to fetch\")) {\r\n        setError(\"Network error: Could not connect to server. Please check if the API server is running and accessible.\");\r\n      } else if (error.response?.status === 401) {\r\n        setError(\"Authentication error: You must be logged in to view jobs.\");\r\n      } else if (error.response?.status === 403) {\r\n        setError(\"Permission error: You don't have access to view these jobs.\");\r\n      } else if (error.response?.status === 500) {\r\n        setError(\"Server error: The server encountered an internal error. Please try again later.\");\r\n      } else {\r\n        setError(`Error: ${error.message}`);\r\n      }\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleTryAgain = () => {\r\n    getJobs();\r\n  };\r\n\r\n  const handleTestCors = async () => {\r\n    try {\r\n      const result = await testCors();\r\n      setCorsStatus(result);\r\n      \r\n      if (result.ok) {\r\n        alert(`CORS test successful! Response: ${JSON.stringify(result.data)}`);\r\n      } else {\r\n        alert(`CORS test failed: ${result.error}`);\r\n      }\r\n    } catch (err) {\r\n      alert(`CORS test error: ${err.message}`);\r\n    }\r\n  };\r\n\r\n  // Loading state\r\n  if (loading) {\r\n    return (\r\n      <div className=\"jobs-container loading\">\r\n        <h2>Loading available jobs...</h2>\r\n        <div className=\"loader\"></div>\r\n        <p>Checking connection to: {debugInfo.url}</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Error state with debugging info\r\n  if (error) {\r\n    return (\r\n      <div className=\"jobs-container error\">\r\n        <h2>Oops! Something went wrong</h2>\r\n        <p>{error}</p>\r\n        \r\n        {/* Debugging information */}\r\n        <div className=\"debug-info\">\r\n          <h3>Debug Information</h3>\r\n          <ul>\r\n            <li><strong>API URL:</strong> {debugInfo.url}</li>\r\n            <li><strong>Your Origin:</strong> {debugInfo.origin}</li>\r\n            <li><strong>CORS Test:</strong> {corsStatus ? \r\n              (corsStatus.ok ? \"Passed\" : `Failed: ${corsStatus.error || 'Unknown error'}`) : \r\n              \"Not run\"}\r\n            </li>\r\n            <li><strong>Health Check:</strong> {healthStatus ? \r\n              (healthStatus.ok ? \"Passed\" : `Failed: ${healthStatus.error || 'Unknown error'}`) : \r\n              \"Not run\"}\r\n            </li>\r\n            <li><strong>Browser:</strong> {debugInfo.browser}</li>\r\n            <li><strong>Time:</strong> {debugInfo.timestamp}</li>\r\n          </ul>\r\n        </div>\r\n        \r\n        {/* CORS Troubleshooting Guide */}\r\n        <div className=\"troubleshooting\">\r\n          <h3>CORS Issues?</h3>\r\n          <p>If you're experiencing CORS errors, try these steps:</p>\r\n          <ol>\r\n            <li>Verify that your backend CORS configuration includes <code>{debugInfo.origin}</code> as an allowed origin</li>\r\n            <li>Check that your API is running and accessible at <code>{debugInfo.url}</code></li>\r\n            <li>Try accessing the API directly by visiting <a href={`${debugInfo.url}/health`} target=\"_blank\" rel=\"noopener noreferrer\">Health Check Endpoint</a></li>\r\n          </ol>\r\n        </div>\r\n        \r\n        {/* Testing buttons */}\r\n        <div className=\"debug-actions\">\r\n          <button onClick={handleTestCors} className=\"debug-button\">\r\n            Test CORS Configuration\r\n          </button>\r\n          \r\n          <button onClick={handleTryAgain} className=\"retry-button\">\r\n            Try Again\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Success state\r\n  return (\r\n    <div className=\"jobs-container\">\r\n      <h2>Available Jobs</h2>\r\n      {jobs.length === 0 ? (\r\n        <div className=\"no-jobs\">\r\n          <p>No jobs are currently available. Please check back later.</p>\r\n          <div className=\"debug-info small\">\r\n            <p><strong>API URL:</strong> {debugInfo.url}</p>\r\n            <p><strong>CORS Status:</strong> {corsStatus?.ok ? \"Passed\" : \"Failed\"}</p>\r\n            <p><strong>Health Status:</strong> {healthStatus?.ok ? \"Passed\" : \"Failed\"}</p>\r\n          </div>\r\n          <button onClick={handleTryAgain} className=\"retry-button\">\r\n            Refresh Jobs\r\n          </button>\r\n        </div>\r\n      ) : (\r\n        <div className=\"jobs-list\">\r\n          {jobs.map((job) => (\r\n            <JobCard key={job.job_id} job={job} />\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default JobsPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}