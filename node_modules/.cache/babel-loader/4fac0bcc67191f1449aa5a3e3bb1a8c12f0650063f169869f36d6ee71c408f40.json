{"ast":null,"code":"var _jsxFileName = \"C:\\\\final_year_project\\\\app\\\\frontend\\\\src\\\\pages\\\\RecommendationsPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { fetchRecommendations } from \"../services/api\";\nimport JobCard from \"../components/JobCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RecommendationsPage = () => {\n  _s();\n  const [recommendedJobs, setRecommendedJobs] = useState([]);\n  const userId = 1; // Replace with actual logged-in user ID\n\n  useEffect(() => {\n    const getRecommendations = async () => {\n      try {\n        const recommendations = await fetchRecommendations(userId);\n        setRecommendedJobs(recommendations);\n      } catch (error) {\n        console.error(\"Error fetching recommendations:\", error);\n      }\n    };\n    getRecommendations();\n  }, [userId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Your Job Recommendations\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), recommendedJobs.map(job => /*#__PURE__*/_jsxDEV(JobCard, {\n      job: job\n    }, job.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(RecommendationsPage, \"BqNkhj0Diyq0GA1E6Mt7GmbyQlw=\");\n_c = RecommendationsPage;\nexport default RecommendationsPage;\nvar _c;\n$RefreshReg$(_c, \"RecommendationsPage\");","map":{"version":3,"names":["React","useEffect","useState","fetchRecommendations","JobCard","jsxDEV","_jsxDEV","RecommendationsPage","_s","recommendedJobs","setRecommendedJobs","userId","getRecommendations","recommendations","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","map","job","id","_c","$RefreshReg$"],"sources":["C:/final_year_project/app/frontend/src/pages/RecommendationsPage.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { fetchRecommendations } from \"../services/api\";\r\nimport JobCard from \"../components/JobCard\";\r\n\r\nconst RecommendationsPage = () => {\r\n  const [recommendedJobs, setRecommendedJobs] = useState([]);\r\n  const userId = 1; // Replace with actual logged-in user ID\r\n\r\n  useEffect(() => {\r\n    const getRecommendations = async () => {\r\n      try {\r\n        const recommendations = await fetchRecommendations(userId);\r\n        setRecommendedJobs(recommendations);\r\n      } catch (error) {\r\n        console.error(\"Error fetching recommendations:\", error);\r\n      }\r\n    };\r\n\r\n    getRecommendations();\r\n  }, [userId]);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Your Job Recommendations</h2>\r\n      {recommendedJobs.map((job) => (\r\n        <JobCard key={job.id} job={job} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RecommendationsPage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,oBAAoB,QAAQ,iBAAiB;AACtD,OAAOC,OAAO,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,mBAAmB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChC,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAMS,MAAM,GAAG,CAAC,CAAC,CAAC;;EAElBV,SAAS,CAAC,MAAM;IACd,MAAMW,kBAAkB,GAAG,MAAAA,CAAA,KAAY;MACrC,IAAI;QACF,MAAMC,eAAe,GAAG,MAAMV,oBAAoB,CAACQ,MAAM,CAAC;QAC1DD,kBAAkB,CAACG,eAAe,CAAC;MACrC,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;MACzD;IACF,CAAC;IAEDF,kBAAkB,CAAC,CAAC;EACtB,CAAC,EAAE,CAACD,MAAM,CAAC,CAAC;EAEZ,oBACEL,OAAA;IAAAU,QAAA,gBACEV,OAAA;MAAAU,QAAA,EAAI;IAAwB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAChCX,eAAe,CAACY,GAAG,CAAEC,GAAG,iBACvBhB,OAAA,CAACF,OAAO;MAAckB,GAAG,EAAEA;IAAI,GAAjBA,GAAG,CAACC,EAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAa,CAClC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACZ,EAAA,CAzBID,mBAAmB;AAAAiB,EAAA,GAAnBjB,mBAAmB;AA2BzB,eAAeA,mBAAmB;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}