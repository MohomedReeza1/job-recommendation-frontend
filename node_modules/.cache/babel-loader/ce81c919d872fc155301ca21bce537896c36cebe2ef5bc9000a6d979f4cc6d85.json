{"ast":null,"code":"import axios from \"axios\";\n\n// Get API base URL from environment or use production URL as fallback\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL || \"https://job-recommender-system-production.up.railway.app/api\";\nconsole.log(\"API client initializing with base URL:\", API_BASE_URL);\nexport const api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    \"Content-Type\": \"application/json\"\n  },\n  // Add timeout to prevent hanging requests\n  timeout: 20000\n});\n\n// Add request interceptor with detailed logging\napi.interceptors.request.use(config => {\n  var _config$method;\n  console.log(`API Request: ${(_config$method = config.method) === null || _config$method === void 0 ? void 0 : _config$method.toUpperCase()} ${config.url}`, {\n    headers: config.headers,\n    params: config.params\n  });\n  const token = localStorage.getItem(\"token\");\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  console.error(\"Request error:\", error);\n  return Promise.reject(error);\n});\n\n// Add response interceptor with detailed logging\napi.interceptors.response.use(response => {\n  console.log(`API Response (${response.status}):`, {\n    data: Array.isArray(response.data) ? `Array with ${response.data.length} items` : response.data\n  });\n  return response;\n}, error => {\n  var _error$config, _error$config2, _error$response, _error$response2, _error$response3;\n  console.error(\"API Error:\", {\n    endpoint: (_error$config = error.config) === null || _error$config === void 0 ? void 0 : _error$config.url,\n    method: (_error$config2 = error.config) === null || _error$config2 === void 0 ? void 0 : _error$config2.method,\n    status: (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status,\n    statusText: (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.statusText,\n    data: (_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data,\n    message: error.message\n  });\n  return Promise.reject(error);\n});\n\n// Basic health check function\nexport const checkApiHealth = async () => {\n  try {\n    console.log(\"Checking API health...\");\n    const response = await fetch(`${API_BASE_URL}/health`);\n    if (!response.ok) {\n      console.error(`Health check failed with status: ${response.status}`);\n      return {\n        status: response.status,\n        ok: false,\n        error: `HTTP error! status: ${response.status}`\n      };\n    }\n    const data = await response.json();\n    console.log(\"API Health Check:\", data);\n    return {\n      status: response.status,\n      ok: true,\n      data\n    };\n  } catch (error) {\n    console.error(\"Health check failed:\", error);\n    return {\n      status: 0,\n      ok: false,\n      error: error.message\n    };\n  }\n};\n\n// Test CORS specifically\nexport const testCors = async () => {\n  try {\n    console.log(\"Testing CORS...\");\n    const response = await fetch(`${API_BASE_URL}/cors-test`);\n    if (!response.ok) {\n      console.error(`CORS test failed with status: ${response.status}`);\n      return {\n        status: response.status,\n        ok: false,\n        error: `HTTP error! status: ${response.status}`\n      };\n    }\n    const data = await response.json();\n    console.log(\"CORS Test:\", data);\n    return {\n      status: response.status,\n      ok: true,\n      data\n    };\n  } catch (error) {\n    console.error(\"CORS test failed:\", error);\n    return {\n      status: 0,\n      ok: false,\n      error: error.message\n    };\n  }\n};\n\n// Use Promise.any to try multiple fetch methods\nexport const fetchJobs = async () => {\n  try {\n    console.log(\"Fetching jobs...\");\n\n    // Try multiple methods in parallel and use the first successful one\n    return await Promise.any([\n    // Method 1: Direct fetch with no-cors mode\n    (async () => {\n      try {\n        console.log(\"Trying fetch with no-cors mode...\");\n        const response = await fetch(`${API_BASE_URL}/jobs/`, {\n          method: 'GET',\n          headers: {\n            'Accept': 'application/json'\n          },\n          mode: 'no-cors' // Try no-cors mode\n        });\n        if (!response.ok && response.type === 'opaque') {\n          console.log(\"Got opaque response from no-cors mode fetch\");\n          throw new Error(\"Opaque response from no-cors mode\");\n        }\n        const data = await response.json();\n        console.log(\"Direct fetch with no-cors successful\");\n        return data;\n      } catch (error) {\n        console.warn(\"Direct fetch with no-cors failed:\", error);\n        throw error;\n      }\n    })(),\n    // Method 2: Standard Axios request\n    (async () => {\n      try {\n        console.log(\"Trying Axios...\");\n        const response = await api.get(\"/jobs/\");\n        console.log(\"Axios successful\");\n        return response.data;\n      } catch (error) {\n        console.warn(\"Axios failed:\", error);\n        throw error;\n      }\n    })(),\n    // Method 3: Standard fetch with cors mode\n    (async () => {\n      try {\n        console.log(\"Trying standard fetch...\");\n        const response = await fetch(`${API_BASE_URL}/jobs/`, {\n          method: 'GET',\n          headers: {\n            'Accept': 'application/json'\n          },\n          mode: 'cors' // Explicit cors mode\n        });\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const data = await response.json();\n        console.log(\"Standard fetch successful\");\n        return data;\n      } catch (error) {\n        console.warn(\"Standard fetch failed:\", error);\n        throw error;\n      }\n    })()]);\n  } catch (error) {\n    console.error(\"All fetch methods failed:\", error);\n\n    // Return empty array instead of throwing to avoid UI errors\n    return [];\n  }\n};\n\n// Keep your other API functions below...\n\nexport const fetchRecommendations = async () => {\n  const specific_id = localStorage.getItem(\"specific_id\");\n  if (!specific_id) {\n    console.error(\"fetchRecommendations: No specific ID found\");\n    throw new Error(\"User profile information missing\");\n  }\n  try {\n    const response = await api.get(`/recommendations/${specific_id}`);\n    return response.data;\n  } catch (error) {\n    console.error(\"Error fetching recommendations:\", error);\n    throw error;\n  }\n};\nexport const fetchRecommendationsWithForm = async formData => {\n  try {\n    const response = await api.post(\"/recommendations/\", formData);\n    return response.data;\n  } catch (error) {\n    console.error(\"Error fetching recommendations:\", error);\n    throw error;\n  }\n};\nexport const fetchAppliedJobs = async () => {\n  const token = localStorage.getItem(\"token\");\n  const specific_id = localStorage.getItem(\"specific_id\");\n  if (!token) {\n    console.error(\"fetchAppliedJobs: No auth token found\");\n    return [];\n  }\n  if (!specific_id || specific_id === \"pending\" || specific_id === \"undefined\" || specific_id === \"null\") {\n    console.error(\"fetchAppliedJobs: No specific ID found\");\n    return [];\n  }\n  try {\n    const response = await api.get(`/applied-jobs/${specific_id}`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error(\"Error fetching applied jobs:\", error);\n    return [];\n  }\n};\nexport const loginJobSeeker = async (email, password) => {\n  try {\n    const response = await api.post(\"/auth/login\", new URLSearchParams({\n      username: email,\n      password,\n      scope: \"job_seeker\"\n    }), {\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded\"\n      }\n    });\n    console.log(\"Login response:\", response.data);\n\n    // Ensure specific_id is present\n    if (response.data.specific_id === undefined || response.data.specific_id === null) {\n      console.warn(\"No specific_id in login API response, setting a placeholder value\");\n      response.data.specific_id = \"pending\";\n    }\n    return response.data;\n  } catch (error) {\n    var _error$response4;\n    console.error(\"Login error:\", ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.data) || error.message);\n    throw error;\n  }\n};\nexport const loginEmployer = async (email, password) => {\n  try {\n    // First, make the login request\n    const response = await api.post(\"/auth/login\", new URLSearchParams({\n      username: email,\n      password,\n      scope: \"recruiter\"\n    }), {\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded\"\n      }\n    });\n\n    // Debug the raw response\n    console.log(\"Raw login response data:\", JSON.stringify(response.data));\n    if (!response.data || !response.data.access_token) {\n      throw new Error(\"Invalid response from server: Missing access token\");\n    }\n\n    // Extract the specific_id from the response and ensure it's properly typed\n    const specificId = response.data.specific_id !== undefined ? response.data.specific_id : null;\n\n    // Create a clean response object with properly typed values\n    const cleanResponse = {\n      access_token: response.data.access_token,\n      token: response.data.access_token,\n      // Add token property for compatibility\n      token_type: response.data.token_type,\n      role: response.data.role,\n      user_id: Number(response.data.user_id),\n      specific_id: specificId !== null ? Number(specificId) : null,\n      email: email // Add email for reference\n    };\n    console.log(\"Found existing agency profile with ID:\", cleanResponse.specific_id);\n    console.log(\"Cleaned login response data:\", cleanResponse);\n    return cleanResponse;\n  } catch (error) {\n    var _error$response5;\n    console.error(\"Login error:\", ((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : _error$response5.data) || error.message);\n    throw error;\n  }\n};\n\n// ✅ Fetch Job Seeker Profile\nexport const fetchJobSeekerProfile = async () => {\n  const token = localStorage.getItem(\"token\");\n  const specific_id = localStorage.getItem(\"specific_id\");\n  const user_id = localStorage.getItem(\"user_id\");\n  if (!token) {\n    throw new Error(\"Authentication required\");\n  }\n  if (!specific_id || specific_id === \"pending\" || specific_id === \"undefined\" || specific_id === \"null\") {\n    console.error(\"Missing specific_id for job seeker profile fetch\");\n\n    // Attempt to get specific_id by requesting a new empty profile creation\n    try {\n      // Try to create a profile using the user_id\n      if (user_id) {\n        const response = await api.post(\"/seekers/\", {\n          user_id: parseInt(user_id)\n        }, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n\n        // Get the specific_id from the response and store it\n        if (response.data && response.data.seeker_id) {\n          localStorage.setItem(\"specific_id\", String(response.data.seeker_id));\n          console.log(\"Created new profile and got specific_id:\", response.data.seeker_id);\n\n          // Return the newly created profile\n          return response.data;\n        }\n      }\n    } catch (profileError) {\n      console.error(\"Failed to create profile:\", profileError);\n    }\n\n    // Return a default empty profile\n    return {\n      name: \"\",\n      age: null,\n      gender: \"\",\n      height: null,\n      weight: null,\n      marital_status: \"\",\n      num_of_children: null,\n      education: \"\",\n      skills: \"\",\n      interests: \"\",\n      previous_jobs: \"\",\n      looking_jobs: \"\",\n      description: \"\",\n      passport_status: \"\"\n    };\n  }\n  try {\n    const response = await api.get(`/seekers/${specific_id}`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error(\"Error fetching profile:\", error);\n    // Return empty profile on error\n    return {\n      name: \"\",\n      age: null,\n      gender: \"\",\n      height: null,\n      weight: null,\n      marital_status: \"\",\n      num_of_children: null,\n      education: \"\",\n      skills: \"\",\n      interests: \"\",\n      previous_jobs: \"\",\n      looking_jobs: \"\",\n      description: \"\",\n      passport_status: \"\"\n    };\n  }\n};\nexport const createJobSeekerProfile = async profileData => {\n  const token = localStorage.getItem(\"token\");\n  const user_id = localStorage.getItem(\"user_id\");\n  if (!token || !user_id) {\n    throw new Error(\"Authentication required\");\n  }\n\n  // Add user_id to the profile data\n  const completeProfileData = {\n    ...profileData,\n    user_id: parseInt(user_id)\n  };\n  try {\n    const response = await api.post(\"/seekers/\", completeProfileData, {\n      headers: {\n        Authorization: `Bearer ${token}`,\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error(\"Error creating profile:\", error);\n    throw error;\n  }\n};\nexport const updateJobSeekerProfile = async profileData => {\n  const token = localStorage.getItem(\"token\");\n  const specific_id = localStorage.getItem(\"specific_id\");\n  if (!token || !specific_id) {\n    throw new Error(\"Authentication required\");\n  }\n  try {\n    const response = await api.put(`/seekers/${specific_id}`, profileData, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error(\"Error updating profile:\", error);\n    throw error;\n  }\n};\n\n// Function to handle applying for a job\nexport const applyForJob = async (jobId, cvFile, coverLetterFile) => {\n  const token = localStorage.getItem(\"token\");\n  if (!token) {\n    throw new Error(\"Authentication required\");\n  }\n\n  // Create form data\n  const formData = new FormData();\n  formData.append(\"job_id\", jobId);\n  formData.append(\"cv\", cvFile);\n  if (coverLetterFile) {\n    formData.append(\"cover_letter\", coverLetterFile);\n  }\n  try {\n    const response = await axios.post(`${API_BASE_URL}/apply-job/`, formData, {\n      headers: {\n        Authorization: `Bearer ${token}`,\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error(\"Error applying for job:\", error);\n    throw error;\n  }\n};\n\n//////////////////////////////////////////////\n\n// ✨ NEW: Fetch recruiter (agency) profile\nexport const fetchRecruiterProfile = async () => {\n  const token = localStorage.getItem(\"token\");\n  if (!token) {\n    throw new Error(\"Authentication required\");\n  }\n  try {\n    const response = await api.get(\"/recruiters/profile/me\", {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error(\"Error fetching recruiter profile:\", error);\n    throw error;\n  }\n};\n\n// ✨ NEW: Fetch agency ID for the current user\nexport const fetchAgencyIdForUser = async () => {\n  const token = localStorage.getItem(\"token\");\n  if (!token) {\n    throw new Error(\"Authentication required\");\n  }\n  try {\n    const response = await api.get(\"/recruiters/agency-id\", {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return response.data.agency_id;\n  } catch (error) {\n    console.error(\"Error fetching agency ID:\", error);\n    return null;\n  }\n};\n\n// ✨ NEW: Fetch jobs posted by the current recruiter\nexport const fetchMyPostedJobs = async () => {\n  const token = localStorage.getItem(\"token\");\n  if (!token) {\n    throw new Error(\"Authentication required\");\n  }\n  try {\n    const response = await api.get(\"/recruiters/my-posted-jobs\", {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error(\"Error fetching posted jobs:\", error);\n    throw error;\n  }\n};\nexport const postJob = async jobData => {\n  const token = localStorage.getItem(\"token\");\n  if (!token) {\n    throw new Error(\"Authentication required\");\n  }\n  try {\n    // We don't need to set the recruiter_id/agency_id here\n    // The backend will handle setting the correct agency_id based on the authenticated user\n\n    const response = await api.post(\"/post-job/\", jobData, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return response.data;\n  } catch (error) {\n    var _error$response6;\n    console.error(\"Error posting job:\", ((_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : _error$response6.data) || error.message);\n    throw error;\n  }\n};\nexport const deleteJob = async jobId => {\n  const token = localStorage.getItem(\"token\");\n  if (!token) {\n    throw new Error(\"Authentication required\");\n  }\n  try {\n    const response = await api.delete(`/jobs/${jobId}`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return response.data;\n  } catch (error) {\n    var _error$response7;\n    console.error(\"Error deleting job:\", ((_error$response7 = error.response) === null || _error$response7 === void 0 ? void 0 : _error$response7.data) || error.message);\n    throw error;\n  }\n};\nexport const fetchJobDetails = async jobId => {\n  const token = localStorage.getItem(\"token\");\n  try {\n    const response = await api.get(`/jobs/${jobId}`, {\n      headers: token ? {\n        Authorization: `Bearer ${token}`\n      } : {}\n    });\n    return response.data;\n  } catch (error) {\n    var _error$response8;\n    console.error(\"Error fetching job details:\", ((_error$response8 = error.response) === null || _error$response8 === void 0 ? void 0 : _error$response8.data) || error.message);\n    throw error;\n  }\n};\nexport const fetchJobApplicants = async jobId => {\n  const token = localStorage.getItem(\"token\");\n  if (!token) {\n    throw new Error(\"Authentication required\");\n  }\n  try {\n    const response = await api.get(`/job-applicants/${jobId}/`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return response.data;\n  } catch (error) {\n    var _error$response9;\n    console.error(\"Error fetching job applicants:\", ((_error$response9 = error.response) === null || _error$response9 === void 0 ? void 0 : _error$response9.data) || error.message);\n    throw error;\n  }\n};\nexport const updateJob = async (jobId, jobData) => {\n  const token = localStorage.getItem(\"token\");\n  if (!token) {\n    throw new Error(\"Authentication required\");\n  }\n  try {\n    const response = await api.put(`/jobs/${jobId}`, jobData, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return response.data;\n  } catch (error) {\n    var _error$response10;\n    console.error(\"Error updating job:\", ((_error$response10 = error.response) === null || _error$response10 === void 0 ? void 0 : _error$response10.data) || error.message);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_BASE_URL","console","log","api","create","baseURL","headers","timeout","interceptors","request","use","config","_config$method","method","toUpperCase","url","params","token","localStorage","getItem","Authorization","error","Promise","reject","response","status","data","Array","isArray","length","_error$config","_error$config2","_error$response","_error$response2","_error$response3","endpoint","statusText","message","checkApiHealth","fetch","ok","json","testCors","fetchJobs","any","mode","type","Error","warn","get","fetchRecommendations","specific_id","fetchRecommendationsWithForm","formData","post","fetchAppliedJobs","loginJobSeeker","email","password","URLSearchParams","username","scope","undefined","_error$response4","loginEmployer","JSON","stringify","access_token","specificId","cleanResponse","token_type","role","user_id","Number","_error$response5","fetchJobSeekerProfile","parseInt","seeker_id","setItem","String","profileError","name","age","gender","height","weight","marital_status","num_of_children","education","skills","interests","previous_jobs","looking_jobs","description","passport_status","createJobSeekerProfile","profileData","completeProfileData","updateJobSeekerProfile","put","applyForJob","jobId","cvFile","coverLetterFile","FormData","append","fetchRecruiterProfile","fetchAgencyIdForUser","agency_id","fetchMyPostedJobs","postJob","jobData","_error$response6","deleteJob","delete","_error$response7","fetchJobDetails","_error$response8","fetchJobApplicants","_error$response9","updateJob","_error$response10"],"sources":["C:/final_year_project/app/frontend/src/services/api.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\n// Get API base URL from environment or use production URL as fallback\r\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL || \"https://job-recommender-system-production.up.railway.app/api\";\r\n\r\nconsole.log(\"API client initializing with base URL:\", API_BASE_URL);\r\n\r\nexport const api = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  headers: {\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n  // Add timeout to prevent hanging requests\r\n  timeout: 20000,\r\n});\r\n\r\n// Add request interceptor with detailed logging\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    console.log(`API Request: ${config.method?.toUpperCase()} ${config.url}`, {\r\n      headers: config.headers,\r\n      params: config.params\r\n    });\r\n    \r\n    const token = localStorage.getItem(\"token\");\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    \r\n    return config;\r\n  },\r\n  (error) => {\r\n    console.error(\"Request error:\", error);\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Add response interceptor with detailed logging\r\napi.interceptors.response.use(\r\n  (response) => {\r\n    console.log(`API Response (${response.status}):`, {\r\n      data: Array.isArray(response.data) ? \r\n        `Array with ${response.data.length} items` : \r\n        response.data,\r\n    });\r\n    return response;\r\n  },\r\n  (error) => {\r\n    console.error(\"API Error:\", {\r\n      endpoint: error.config?.url,\r\n      method: error.config?.method,\r\n      status: error.response?.status,\r\n      statusText: error.response?.statusText,\r\n      data: error.response?.data,\r\n      message: error.message\r\n    });\r\n    \r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Basic health check function\r\nexport const checkApiHealth = async () => {\r\n  try {\r\n    console.log(\"Checking API health...\");\r\n    const response = await fetch(`${API_BASE_URL}/health`);\r\n    \r\n    if (!response.ok) {\r\n      console.error(`Health check failed with status: ${response.status}`);\r\n      return { \r\n        status: response.status, \r\n        ok: false, \r\n        error: `HTTP error! status: ${response.status}` \r\n      };\r\n    }\r\n    \r\n    const data = await response.json();\r\n    console.log(\"API Health Check:\", data);\r\n    return {\r\n      status: response.status,\r\n      ok: true,\r\n      data\r\n    };\r\n  } catch (error) {\r\n    console.error(\"Health check failed:\", error);\r\n    return {\r\n      status: 0,\r\n      ok: false,\r\n      error: error.message\r\n    };\r\n  }\r\n};\r\n\r\n// Test CORS specifically\r\nexport const testCors = async () => {\r\n  try {\r\n    console.log(\"Testing CORS...\");\r\n    const response = await fetch(`${API_BASE_URL}/cors-test`);\r\n    \r\n    if (!response.ok) {\r\n      console.error(`CORS test failed with status: ${response.status}`);\r\n      return { \r\n        status: response.status, \r\n        ok: false, \r\n        error: `HTTP error! status: ${response.status}` \r\n      };\r\n    }\r\n    \r\n    const data = await response.json();\r\n    console.log(\"CORS Test:\", data);\r\n    return {\r\n      status: response.status,\r\n      ok: true,\r\n      data\r\n    };\r\n  } catch (error) {\r\n    console.error(\"CORS test failed:\", error);\r\n    return {\r\n      status: 0,\r\n      ok: false,\r\n      error: error.message\r\n    };\r\n  }\r\n};\r\n\r\n// Use Promise.any to try multiple fetch methods\r\nexport const fetchJobs = async () => {\r\n  try {\r\n    console.log(\"Fetching jobs...\");\r\n    \r\n    // Try multiple methods in parallel and use the first successful one\r\n    return await Promise.any([\r\n      // Method 1: Direct fetch with no-cors mode\r\n      (async () => {\r\n        try {\r\n          console.log(\"Trying fetch with no-cors mode...\");\r\n          const response = await fetch(`${API_BASE_URL}/jobs/`, {\r\n            method: 'GET',\r\n            headers: {\r\n              'Accept': 'application/json'\r\n            },\r\n            mode: 'no-cors'  // Try no-cors mode\r\n          });\r\n          \r\n          if (!response.ok && response.type === 'opaque') {\r\n            console.log(\"Got opaque response from no-cors mode fetch\");\r\n            throw new Error(\"Opaque response from no-cors mode\");\r\n          }\r\n          \r\n          const data = await response.json();\r\n          console.log(\"Direct fetch with no-cors successful\");\r\n          return data;\r\n        } catch (error) {\r\n          console.warn(\"Direct fetch with no-cors failed:\", error);\r\n          throw error;\r\n        }\r\n      })(),\r\n      \r\n      // Method 2: Standard Axios request\r\n      (async () => {\r\n        try {\r\n          console.log(\"Trying Axios...\");\r\n          const response = await api.get(\"/jobs/\");\r\n          console.log(\"Axios successful\");\r\n          return response.data;\r\n        } catch (error) {\r\n          console.warn(\"Axios failed:\", error);\r\n          throw error;\r\n        }\r\n      })(),\r\n      \r\n      // Method 3: Standard fetch with cors mode\r\n      (async () => {\r\n        try {\r\n          console.log(\"Trying standard fetch...\");\r\n          const response = await fetch(`${API_BASE_URL}/jobs/`, {\r\n            method: 'GET',\r\n            headers: {\r\n              'Accept': 'application/json'\r\n            },\r\n            mode: 'cors'  // Explicit cors mode\r\n          });\r\n          \r\n          if (!response.ok) {\r\n            throw new Error(`HTTP error! status: ${response.status}`);\r\n          }\r\n          \r\n          const data = await response.json();\r\n          console.log(\"Standard fetch successful\");\r\n          return data;\r\n        } catch (error) {\r\n          console.warn(\"Standard fetch failed:\", error);\r\n          throw error;\r\n        }\r\n      })()\r\n    ]);\r\n  } catch (error) {\r\n    console.error(\"All fetch methods failed:\", error);\r\n    \r\n    // Return empty array instead of throwing to avoid UI errors\r\n    return [];\r\n  }\r\n};\r\n\r\n// Keep your other API functions below...\r\n\r\nexport const fetchRecommendations = async () => {\r\n  const specific_id = localStorage.getItem(\"specific_id\");\r\n  \r\n  if (!specific_id) {\r\n    console.error(\"fetchRecommendations: No specific ID found\");\r\n    throw new Error(\"User profile information missing\");\r\n  }\r\n  \r\n  try {\r\n    const response = await api.get(`/recommendations/${specific_id}`);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Error fetching recommendations:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const fetchRecommendationsWithForm = async (formData) => {\r\n  try {\r\n    const response = await api.post(\"/recommendations/\", formData);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Error fetching recommendations:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const fetchAppliedJobs = async () => {\r\n  const token = localStorage.getItem(\"token\");\r\n  const specific_id = localStorage.getItem(\"specific_id\");\r\n  \r\n  if (!token) {\r\n      console.error(\"fetchAppliedJobs: No auth token found\");\r\n      return [];\r\n  }\r\n  \r\n  if (!specific_id || specific_id === \"pending\" || specific_id === \"undefined\" || specific_id === \"null\") {\r\n      console.error(\"fetchAppliedJobs: No specific ID found\");\r\n      return [];\r\n  }\r\n  \r\n  try {\r\n      const response = await api.get(`/applied-jobs/${specific_id}`, {\r\n          headers: { Authorization: `Bearer ${token}` }\r\n      });\r\n      \r\n      return response.data;\r\n  } catch (error) {\r\n      console.error(\"Error fetching applied jobs:\", error);\r\n      return [];\r\n  }\r\n};\r\n\r\nexport const loginJobSeeker = async (email, password) => {\r\n  try {\r\n    const response = await api.post(\"/auth/login\", new URLSearchParams({ \r\n      username: email, \r\n      password, \r\n      scope: \"job_seeker\" \r\n    }),\r\n    { headers: { \"Content-Type\": \"application/x-www-form-urlencoded\" } }\r\n    );\r\n    \r\n    console.log(\"Login response:\", response.data);\r\n    \r\n    // Ensure specific_id is present\r\n    if (response.data.specific_id === undefined || response.data.specific_id === null) {\r\n      console.warn(\"No specific_id in login API response, setting a placeholder value\");\r\n      response.data.specific_id = \"pending\";\r\n    }\r\n    \r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Login error:\", error.response?.data || error.message);\r\n    throw error;\r\n  }\r\n};\r\n\r\n\r\nexport const loginEmployer = async (email, password) => {\r\n  try {\r\n    // First, make the login request\r\n    const response = await api.post(\"/auth/login\", new URLSearchParams({\r\n      username: email, \r\n      password, \r\n      scope: \"recruiter\" \r\n    }),\r\n    { headers: { \"Content-Type\": \"application/x-www-form-urlencoded\" } }\r\n    );\r\n    \r\n    // Debug the raw response\r\n    console.log(\"Raw login response data:\", JSON.stringify(response.data));\r\n    \r\n    if (!response.data || !response.data.access_token) {\r\n      throw new Error(\"Invalid response from server: Missing access token\");\r\n    }\r\n    \r\n    // Extract the specific_id from the response and ensure it's properly typed\r\n    const specificId = response.data.specific_id !== undefined ? response.data.specific_id : null;\r\n    \r\n    // Create a clean response object with properly typed values\r\n    const cleanResponse = {\r\n      access_token: response.data.access_token,\r\n      token: response.data.access_token, // Add token property for compatibility\r\n      token_type: response.data.token_type,\r\n      role: response.data.role,\r\n      user_id: Number(response.data.user_id),\r\n      specific_id: specificId !== null ? Number(specificId) : null,\r\n      email: email // Add email for reference\r\n    };\r\n    \r\n    console.log(\"Found existing agency profile with ID:\", cleanResponse.specific_id);\r\n    console.log(\"Cleaned login response data:\", cleanResponse);\r\n    \r\n    return cleanResponse;\r\n  } catch (error) {\r\n    console.error(\"Login error:\", error.response?.data || error.message);\r\n    throw error;\r\n  }\r\n};\r\n\r\n\r\n\r\n// ✅ Fetch Job Seeker Profile\r\nexport const fetchJobSeekerProfile = async () => {\r\n  const token = localStorage.getItem(\"token\");\r\n  const specific_id = localStorage.getItem(\"specific_id\");\r\n  const user_id = localStorage.getItem(\"user_id\");\r\n  \r\n  if (!token) {\r\n      throw new Error(\"Authentication required\");\r\n  }\r\n  \r\n  if (!specific_id || specific_id === \"pending\" || specific_id === \"undefined\" || specific_id === \"null\") {\r\n      console.error(\"Missing specific_id for job seeker profile fetch\");\r\n      \r\n      // Attempt to get specific_id by requesting a new empty profile creation\r\n      try {\r\n          // Try to create a profile using the user_id\r\n          if (user_id) {\r\n              const response = await api.post(\"/seekers/\", \r\n                  { user_id: parseInt(user_id) },\r\n                  { headers: { Authorization: `Bearer ${token}` }}\r\n              );\r\n              \r\n              // Get the specific_id from the response and store it\r\n              if (response.data && response.data.seeker_id) {\r\n                  localStorage.setItem(\"specific_id\", String(response.data.seeker_id));\r\n                  console.log(\"Created new profile and got specific_id:\", response.data.seeker_id);\r\n                  \r\n                  // Return the newly created profile\r\n                  return response.data;\r\n              }\r\n          }\r\n      } catch (profileError) {\r\n          console.error(\"Failed to create profile:\", profileError);\r\n      }\r\n      \r\n      // Return a default empty profile\r\n      return {\r\n          name: \"\",\r\n          age: null,\r\n          gender: \"\",\r\n          height: null,\r\n          weight: null,\r\n          marital_status: \"\",\r\n          num_of_children: null,\r\n          education: \"\",\r\n          skills: \"\",\r\n          interests: \"\",\r\n          previous_jobs: \"\",\r\n          looking_jobs: \"\",\r\n          description: \"\",\r\n          passport_status: \"\"\r\n      };\r\n  }\r\n  \r\n  try {\r\n      const response = await api.get(`/seekers/${specific_id}`, {\r\n          headers: { Authorization: `Bearer ${token}` }\r\n      });\r\n      return response.data;\r\n  } catch (error) {\r\n      console.error(\"Error fetching profile:\", error);\r\n      // Return empty profile on error\r\n      return {\r\n          name: \"\",\r\n          age: null,\r\n          gender: \"\",\r\n          height: null,\r\n          weight: null,\r\n          marital_status: \"\",\r\n          num_of_children: null,\r\n          education: \"\",\r\n          skills: \"\",\r\n          interests: \"\",\r\n          previous_jobs: \"\",\r\n          looking_jobs: \"\",\r\n          description: \"\",\r\n          passport_status: \"\"\r\n      };\r\n  }\r\n};\r\n\r\nexport const createJobSeekerProfile = async (profileData) => {\r\n  const token = localStorage.getItem(\"token\");\r\n  const user_id = localStorage.getItem(\"user_id\");\r\n  \r\n  if (!token || !user_id) {\r\n    throw new Error(\"Authentication required\");\r\n  }\r\n  \r\n  // Add user_id to the profile data\r\n  const completeProfileData = {\r\n    ...profileData,\r\n    user_id: parseInt(user_id)\r\n  };\r\n  \r\n  try {\r\n    const response = await api.post(\"/seekers/\", completeProfileData, {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Error creating profile:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const updateJobSeekerProfile = async (profileData) => {\r\n  const token = localStorage.getItem(\"token\");\r\n  const specific_id = localStorage.getItem(\"specific_id\");\r\n  \r\n  if (!token || !specific_id) {\r\n      throw new Error(\"Authentication required\");\r\n  }\r\n  \r\n  try {\r\n      const response = await api.put(`/seekers/${specific_id}`, profileData, {\r\n          headers: { Authorization: `Bearer ${token}` }\r\n      });\r\n      return response.data;\r\n  } catch (error) {\r\n      console.error(\"Error updating profile:\", error);\r\n      throw error;\r\n  }\r\n};\r\n\r\n// Function to handle applying for a job\r\nexport const applyForJob = async (jobId, cvFile, coverLetterFile) => {\r\n  const token = localStorage.getItem(\"token\");\r\n  \r\n  if (!token) {\r\n    throw new Error(\"Authentication required\");\r\n  }\r\n  \r\n  // Create form data\r\n  const formData = new FormData();\r\n  formData.append(\"job_id\", jobId);\r\n  formData.append(\"cv\", cvFile);\r\n  \r\n  if (coverLetterFile) {\r\n    formData.append(\"cover_letter\", coverLetterFile);\r\n  }\r\n  \r\n  try {\r\n    const response = await axios.post(\r\n      `${API_BASE_URL}/apply-job/`,\r\n      formData,\r\n      {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          'Content-Type': 'multipart/form-data'\r\n        }\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Error applying for job:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n//////////////////////////////////////////////\r\n\r\n// ✨ NEW: Fetch recruiter (agency) profile\r\nexport const fetchRecruiterProfile = async () => {\r\n  const token = localStorage.getItem(\"token\");\r\n  if (!token) {\r\n    throw new Error(\"Authentication required\");\r\n  }\r\n  \r\n  try {\r\n    const response = await api.get(\"/recruiters/profile/me\", {\r\n      headers: { Authorization: `Bearer ${token}` }\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Error fetching recruiter profile:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// ✨ NEW: Fetch agency ID for the current user\r\nexport const fetchAgencyIdForUser = async () => {\r\n  const token = localStorage.getItem(\"token\");\r\n  if (!token) {\r\n    throw new Error(\"Authentication required\");\r\n  }\r\n  \r\n  try {\r\n    const response = await api.get(\"/recruiters/agency-id\", {\r\n      headers: { Authorization: `Bearer ${token}` }\r\n    });\r\n    return response.data.agency_id;\r\n  } catch (error) {\r\n    console.error(\"Error fetching agency ID:\", error);\r\n    return null;\r\n  }\r\n};\r\n\r\n// ✨ NEW: Fetch jobs posted by the current recruiter\r\nexport const fetchMyPostedJobs = async () => {\r\n  const token = localStorage.getItem(\"token\");\r\n  if (!token) {\r\n    throw new Error(\"Authentication required\");\r\n  }\r\n  \r\n  try {\r\n    const response = await api.get(\"/recruiters/my-posted-jobs\", {\r\n      headers: { Authorization: `Bearer ${token}` }\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Error fetching posted jobs:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const postJob = async (jobData) => {\r\n  const token = localStorage.getItem(\"token\");\r\n  \r\n  if (!token) {\r\n    throw new Error(\"Authentication required\");\r\n  }\r\n  \r\n  try {\r\n    // We don't need to set the recruiter_id/agency_id here\r\n    // The backend will handle setting the correct agency_id based on the authenticated user\r\n    \r\n    const response = await api.post(\"/post-job/\", jobData, {\r\n      headers: { Authorization: `Bearer ${token}` }\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Error posting job:\", error.response?.data || error.message);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const deleteJob = async (jobId) => {\r\n  const token = localStorage.getItem(\"token\");\r\n  if (!token) {\r\n    throw new Error(\"Authentication required\");\r\n  }\r\n  try {\r\n    const response = await api.delete(`/jobs/${jobId}`, {\r\n      headers: { Authorization: `Bearer ${token}` }\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Error deleting job:\", error.response?.data || error.message);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const fetchJobDetails = async (jobId) => {\r\n  const token = localStorage.getItem(\"token\");\r\n  try {\r\n    const response = await api.get(`/jobs/${jobId}`, {\r\n      headers: token ? { Authorization: `Bearer ${token}` } : {}\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Error fetching job details:\", error.response?.data || error.message);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const fetchJobApplicants = async (jobId) => {\r\n  const token = localStorage.getItem(\"token\");\r\n  if (!token) {\r\n    throw new Error(\"Authentication required\");\r\n  }\r\n  try {\r\n    const response = await api.get(`/job-applicants/${jobId}/`, {\r\n      headers: { Authorization: `Bearer ${token}` }\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Error fetching job applicants:\", error.response?.data || error.message);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const updateJob = async (jobId, jobData) => {\r\n  const token = localStorage.getItem(\"token\");\r\n  \r\n  if (!token) {\r\n    throw new Error(\"Authentication required\");\r\n  }\r\n  \r\n  try {\r\n    const response = await api.put(`/jobs/${jobId}`, jobData, {\r\n      headers: { Authorization: `Bearer ${token}` }\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Error updating job:\", error.response?.data || error.message);\r\n    throw error;\r\n  }\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}