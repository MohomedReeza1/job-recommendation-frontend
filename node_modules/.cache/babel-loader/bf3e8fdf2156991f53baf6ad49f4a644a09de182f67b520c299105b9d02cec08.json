{"ast":null,"code":"var _jsxFileName = \"C:\\\\final_year_project\\\\app\\\\frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$();\n// import React, { createContext, useContext, useState, useEffect } from \"react\";\n// import { loginJobSeeker, loginEmployer } from \"../services/api\";\n\n// const AuthContext = createContext();\n\n// export const AuthProvider = ({ children }) => {\n//     const [user, setUser] = useState(() => {\n//         const storedUser = localStorage.getItem(\"user\");\n//         return storedUser ? JSON.parse(storedUser) : null;\n//     });\n\n//     const login = async (email, password, role) => {\n//         try {\n//             const data = role === \"job_seeker\"\n//                 ? await loginJobSeeker(email, password)\n//                 : await loginEmployer(email, password);\n\n//             const newUser = {\n//                 email,\n//                 role: data.role,\n//                 user_id: data.user_id,  // Ensure this is correctly retrieved\n//                 token: data.access_token\n//             };\n\n//             setUser(newUser);\n//             localStorage.setItem(\"user\", JSON.stringify(newUser));\n//             localStorage.setItem(\"token\", data.access_token);\n//         } catch (error) {\n//             throw new Error(\"Invalid credentials.\");\n//         }\n//     };\n\n//     const logout = () => {\n//         setUser(null);\n//         localStorage.removeItem(\"user\");\n//         localStorage.removeItem(\"token\");\n//     };\n\n//     useEffect(() => {\n//       console.log(\"Logged in user data:\", user); // Debugging line\n//     }, [user]);\n\n//     return (\n//         <AuthContext.Provider value={{ user, login, logout }}>\n//             {children}\n//         </AuthContext.Provider>\n//     );\n// };\n\n// export const useAuth = () => useContext(AuthContext);\n\nimport { createContext, useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\"; // ✅ Import useNavigate\nimport { loginJobSeeker, loginEmployer } from \"../services/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const navigate = useNavigate(); // ✅ Use navigate inside the function\n\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n    const role = localStorage.getItem(\"role\");\n    const user_id = localStorage.getItem(\"user_id\");\n    if (token && role) {\n      setUser({\n        token,\n        role,\n        user_id\n      });\n    }\n  }, []);\n  const login = async (email, password, role) => {\n    try {\n      let response;\n      if (role === \"job_seeker\") {\n        response = await loginJobSeeker(email, password);\n      } else if (role === \"recruiter\") {\n        response = await loginEmployer(email, password);\n      }\n      const {\n        access_token,\n        role: userRole,\n        user_id\n      } = response.data;\n      localStorage.setItem(\"token\", access_token);\n      localStorage.setItem(\"role\", userRole);\n      localStorage.setItem(\"user_id\", user_id);\n      setUser({\n        email,\n        role: userRole,\n        token: access_token,\n        user_id\n      });\n      if (userRole === \"job_seeker\") {\n        navigate(\"/jobs\"); // ✅ Use navigate correctly\n      } else {\n        navigate(\"/my-posted-jobs\"); // ✅ Use navigate correctly\n      }\n    } catch (error) {\n      console.error(\"Login failed:\", error);\n      alert(\"Invalid credentials.\");\n    }\n  };\n  const logout = () => {\n    localStorage.clear();\n    setUser(null);\n    navigate(\"/login\"); // ✅ Use navigate on logout\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthProvider, \"/48TlfV0adSMEvsbW2gk5sMeopI=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useState","useEffect","useNavigate","loginJobSeeker","loginEmployer","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","navigate","token","localStorage","getItem","role","user_id","login","email","password","response","access_token","userRole","data","setItem","error","console","alert","logout","clear","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/final_year_project/app/frontend/src/context/AuthContext.js"],"sourcesContent":["// import React, { createContext, useContext, useState, useEffect } from \"react\";\r\n// import { loginJobSeeker, loginEmployer } from \"../services/api\";\r\n\r\n// const AuthContext = createContext();\r\n\r\n// export const AuthProvider = ({ children }) => {\r\n//     const [user, setUser] = useState(() => {\r\n//         const storedUser = localStorage.getItem(\"user\");\r\n//         return storedUser ? JSON.parse(storedUser) : null;\r\n//     });\r\n\r\n//     const login = async (email, password, role) => {\r\n//         try {\r\n//             const data = role === \"job_seeker\"\r\n//                 ? await loginJobSeeker(email, password)\r\n//                 : await loginEmployer(email, password);\r\n            \r\n//             const newUser = {\r\n//                 email,\r\n//                 role: data.role,\r\n//                 user_id: data.user_id,  // Ensure this is correctly retrieved\r\n//                 token: data.access_token\r\n//             };\r\n\r\n//             setUser(newUser);\r\n//             localStorage.setItem(\"user\", JSON.stringify(newUser));\r\n//             localStorage.setItem(\"token\", data.access_token);\r\n//         } catch (error) {\r\n//             throw new Error(\"Invalid credentials.\");\r\n//         }\r\n//     };\r\n\r\n//     const logout = () => {\r\n//         setUser(null);\r\n//         localStorage.removeItem(\"user\");\r\n//         localStorage.removeItem(\"token\");\r\n//     };\r\n\r\n//     useEffect(() => {\r\n//       console.log(\"Logged in user data:\", user); // Debugging line\r\n//     }, [user]);\r\n\r\n//     return (\r\n//         <AuthContext.Provider value={{ user, login, logout }}>\r\n//             {children}\r\n//         </AuthContext.Provider>\r\n//     );\r\n// };\r\n\r\n// export const useAuth = () => useContext(AuthContext);\r\n\r\n\r\nimport { createContext, useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\"; // ✅ Import useNavigate\r\nimport { loginJobSeeker, loginEmployer } from \"../services/api\";\r\n\r\nexport const AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n    const [user, setUser] = useState(null);\r\n    const navigate = useNavigate(); // ✅ Use navigate inside the function\r\n\r\n    useEffect(() => {\r\n        const token = localStorage.getItem(\"token\");\r\n        const role = localStorage.getItem(\"role\");\r\n        const user_id = localStorage.getItem(\"user_id\");\r\n\r\n        if (token && role) {\r\n            setUser({ token, role, user_id });\r\n        }\r\n    }, []);\r\n\r\n    const login = async (email, password, role) => {\r\n        try {\r\n            let response;\r\n            if (role === \"job_seeker\") {\r\n                response = await loginJobSeeker(email, password);\r\n            } else if (role === \"recruiter\") {\r\n                response = await loginEmployer(email, password);\r\n            }\r\n\r\n            const { access_token, role: userRole, user_id } = response.data;\r\n\r\n            localStorage.setItem(\"token\", access_token);\r\n            localStorage.setItem(\"role\", userRole);\r\n            localStorage.setItem(\"user_id\", user_id);\r\n\r\n            setUser({ email, role: userRole, token: access_token, user_id });\r\n\r\n            if (userRole === \"job_seeker\") {\r\n                navigate(\"/jobs\"); // ✅ Use navigate correctly\r\n            } else {\r\n                navigate(\"/my-posted-jobs\"); // ✅ Use navigate correctly\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Login failed:\", error);\r\n            alert(\"Invalid credentials.\");\r\n        }\r\n    };\r\n\r\n    const logout = () => {\r\n        localStorage.clear();\r\n        setUser(null);\r\n        navigate(\"/login\"); // ✅ Use navigate on logout\r\n    };\r\n\r\n    return (\r\n        <AuthContext.Provider value={{ user, login, logout }}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}