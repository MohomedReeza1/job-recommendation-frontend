{"ast":null,"code":"var _jsxFileName = \"C:\\\\final_year_project\\\\app\\\\frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from \"react\";\nimport { loginJobSeeker, loginEmployer } from \"../services/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(() => {\n    const storedUser = localStorage.getItem(\"user\");\n    return storedUser ? JSON.parse(storedUser) : null;\n  });\n  const login = async (email, password, role) => {\n    try {\n      const data = role === \"job_seeker\" ? await loginJobSeeker(email, password) : await loginEmployer(email, password);\n      const newUser = {\n        email,\n        role: data.role,\n        user_id: data.user_id,\n        // Ensure this is correctly retrieved\n        token: data.access_token\n      };\n      setUser(newUser);\n      localStorage.setItem(\"user\", JSON.stringify(newUser));\n      localStorage.setItem(\"token\", data.access_token);\n    } catch (error) {\n      throw new Error(\"Invalid credentials.\");\n    }\n  };\n  const logout = () => {\n    setUser(null);\n    localStorage.removeItem(\"user\");\n    localStorage.removeItem(\"token\");\n  };\n  useEffect(() => {\n    console.log(\"Logged in user data:\", user); // Debugging line\n  }, [user]);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthProvider, \"pL6nsOpwBUvYms/YFIs803647S8=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","loginJobSeeker","loginEmployer","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","storedUser","localStorage","getItem","JSON","parse","login","email","password","role","data","newUser","user_id","token","access_token","setItem","stringify","error","Error","logout","removeItem","console","log","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["C:/final_year_project/app/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from \"react\";\r\nimport { loginJobSeeker, loginEmployer } from \"../services/api\";\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n    const [user, setUser] = useState(() => {\r\n        const storedUser = localStorage.getItem(\"user\");\r\n        return storedUser ? JSON.parse(storedUser) : null;\r\n    });\r\n\r\n    const login = async (email, password, role) => {\r\n        try {\r\n            const data = role === \"job_seeker\"\r\n                ? await loginJobSeeker(email, password)\r\n                : await loginEmployer(email, password);\r\n            \r\n            const newUser = {\r\n                email,\r\n                role: data.role,\r\n                user_id: data.user_id,  // Ensure this is correctly retrieved\r\n                token: data.access_token\r\n            };\r\n\r\n            setUser(newUser);\r\n            localStorage.setItem(\"user\", JSON.stringify(newUser));\r\n            localStorage.setItem(\"token\", data.access_token);\r\n        } catch (error) {\r\n            throw new Error(\"Invalid credentials.\");\r\n        }\r\n    };\r\n\r\n    const logout = () => {\r\n        setUser(null);\r\n        localStorage.removeItem(\"user\");\r\n        localStorage.removeItem(\"token\");\r\n    };\r\n\r\n    useEffect(() => {\r\n      console.log(\"Logged in user data:\", user); // Debugging line\r\n    }, [user]);\r\n\r\n    return (\r\n        <AuthContext.Provider value={{ user, login, logout }}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    );\r\n};\r\n\r\nexport const useAuth = () => useContext(AuthContext);\r\n\r\n\r\n\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC7E,SAASC,cAAc,EAAEC,aAAa,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhE,MAAMC,WAAW,gBAAGR,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMS,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC1C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,MAAM;IACnC,MAAMY,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IAC/C,OAAOF,UAAU,GAAGG,IAAI,CAACC,KAAK,CAACJ,UAAU,CAAC,GAAG,IAAI;EACrD,CAAC,CAAC;EAEF,MAAMK,KAAK,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,EAAEC,IAAI,KAAK;IAC3C,IAAI;MACA,MAAMC,IAAI,GAAGD,IAAI,KAAK,YAAY,GAC5B,MAAMlB,cAAc,CAACgB,KAAK,EAAEC,QAAQ,CAAC,GACrC,MAAMhB,aAAa,CAACe,KAAK,EAAEC,QAAQ,CAAC;MAE1C,MAAMG,OAAO,GAAG;QACZJ,KAAK;QACLE,IAAI,EAAEC,IAAI,CAACD,IAAI;QACfG,OAAO,EAAEF,IAAI,CAACE,OAAO;QAAG;QACxBC,KAAK,EAAEH,IAAI,CAACI;MAChB,CAAC;MAEDd,OAAO,CAACW,OAAO,CAAC;MAChBT,YAAY,CAACa,OAAO,CAAC,MAAM,EAAEX,IAAI,CAACY,SAAS,CAACL,OAAO,CAAC,CAAC;MACrDT,YAAY,CAACa,OAAO,CAAC,OAAO,EAAEL,IAAI,CAACI,YAAY,CAAC;IACpD,CAAC,CAAC,OAAOG,KAAK,EAAE;MACZ,MAAM,IAAIC,KAAK,CAAC,sBAAsB,CAAC;IAC3C;EACJ,CAAC;EAED,MAAMC,MAAM,GAAGA,CAAA,KAAM;IACjBnB,OAAO,CAAC,IAAI,CAAC;IACbE,YAAY,CAACkB,UAAU,CAAC,MAAM,CAAC;IAC/BlB,YAAY,CAACkB,UAAU,CAAC,OAAO,CAAC;EACpC,CAAC;EAED9B,SAAS,CAAC,MAAM;IACd+B,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEvB,IAAI,CAAC,CAAC,CAAC;EAC7C,CAAC,EAAE,CAACA,IAAI,CAAC,CAAC;EAEV,oBACIL,OAAA,CAACC,WAAW,CAAC4B,QAAQ;IAACC,KAAK,EAAE;MAAEzB,IAAI;MAAEO,KAAK;MAAEa;IAAO,CAAE;IAAAtB,QAAA,EAChDA;EAAQ;IAAA4B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAE/B,CAAC;AAAC9B,EAAA,CA1CWF,YAAY;AAAAiC,EAAA,GAAZjC,YAAY;AA4CzB,OAAO,MAAMkC,OAAO,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAM3C,UAAU,CAACO,WAAW,CAAC;AAAA;AAACoC,GAAA,CAAxCD,OAAO;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}