{"ast":null,"code":"import React,{useEffect,useState}from\"react\";import{fetchJobs}from\"../services/api\";import JobCard from\"../components/JobCard\";import'../styles/JobsPage.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const JobsPage=()=>{const[jobs,setJobs]=useState([]);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);useEffect(()=>{const getJobs=async()=>{try{setLoading(true);const jobsData=await fetchJobs();setJobs(jobsData);setError(null);}catch(error){console.error(\"Error fetching jobs:\",error);setError(\"Failed to load jobs. Please try again later.\");}finally{setLoading(false);}};getJobs();},[]);if(loading){return/*#__PURE__*/_jsx(\"div\",{className:\"jobs-container loading\",children:\"Loading available jobs...\"});}if(error){return/*#__PURE__*/_jsx(\"div\",{className:\"jobs-container error\",children:error});}return/*#__PURE__*/_jsxs(\"div\",{className:\"jobs-container\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Available Jobs\"}),/*#__PURE__*/_jsx(\"div\",{className:\"jobs-list\",children:jobs.map(job=>/*#__PURE__*/_jsx(JobCard,{job:job},job.job_id))})]});};export default JobsPage;","map":{"version":3,"names":["React","useEffect","useState","fetchJobs","JobCard","jsx","_jsx","jsxs","_jsxs","JobsPage","jobs","setJobs","loading","setLoading","error","setError","getJobs","jobsData","console","className","children","map","job","job_id"],"sources":["C:/final_year_project/app/frontend/src/pages/JobsPage.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { fetchJobs } from \"../services/api\";\r\nimport JobCard from \"../components/JobCard\";\r\nimport '../styles/JobsPage.css';\r\n\r\nconst JobsPage = () => {\r\n  const [jobs, setJobs] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const getJobs = async () => {\r\n      try {\r\n        setLoading(true);\r\n        const jobsData = await fetchJobs();\r\n        setJobs(jobsData);\r\n        setError(null);\r\n      } catch (error) {\r\n        console.error(\"Error fetching jobs:\", error);\r\n        setError(\"Failed to load jobs. Please try again later.\");\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n  \r\n    getJobs();\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return <div className=\"jobs-container loading\">Loading available jobs...</div>;\r\n  }\r\n\r\n  if (error) {\r\n    return <div className=\"jobs-container error\">{error}</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"jobs-container\">\r\n      <h2>Available Jobs</h2>\r\n      <div className=\"jobs-list\">\r\n        {jobs.map((job) => (\r\n          <JobCard key={job.job_id} job={job} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default JobsPage;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAClD,OAASC,SAAS,KAAQ,iBAAiB,CAC3C,MAAO,CAAAC,OAAO,KAAM,uBAAuB,CAC3C,MAAO,wBAAwB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEhC,KAAM,CAAAC,QAAQ,CAAGA,CAAA,GAAM,CACrB,KAAM,CAACC,IAAI,CAAEC,OAAO,CAAC,CAAGT,QAAQ,CAAC,EAAE,CAAC,CACpC,KAAM,CAACU,OAAO,CAAEC,UAAU,CAAC,CAAGX,QAAQ,CAAC,IAAI,CAAC,CAC5C,KAAM,CAACY,KAAK,CAAEC,QAAQ,CAAC,CAAGb,QAAQ,CAAC,IAAI,CAAC,CAExCD,SAAS,CAAC,IAAM,CACd,KAAM,CAAAe,OAAO,CAAG,KAAAA,CAAA,GAAY,CAC1B,GAAI,CACFH,UAAU,CAAC,IAAI,CAAC,CAChB,KAAM,CAAAI,QAAQ,CAAG,KAAM,CAAAd,SAAS,CAAC,CAAC,CAClCQ,OAAO,CAACM,QAAQ,CAAC,CACjBF,QAAQ,CAAC,IAAI,CAAC,CAChB,CAAE,MAAOD,KAAK,CAAE,CACdI,OAAO,CAACJ,KAAK,CAAC,sBAAsB,CAAEA,KAAK,CAAC,CAC5CC,QAAQ,CAAC,8CAA8C,CAAC,CAC1D,CAAC,OAAS,CACRF,UAAU,CAAC,KAAK,CAAC,CACnB,CACF,CAAC,CAEDG,OAAO,CAAC,CAAC,CACX,CAAC,CAAE,EAAE,CAAC,CAEN,GAAIJ,OAAO,CAAE,CACX,mBAAON,IAAA,QAAKa,SAAS,CAAC,wBAAwB,CAAAC,QAAA,CAAC,2BAAyB,CAAK,CAAC,CAChF,CAEA,GAAIN,KAAK,CAAE,CACT,mBAAOR,IAAA,QAAKa,SAAS,CAAC,sBAAsB,CAAAC,QAAA,CAAEN,KAAK,CAAM,CAAC,CAC5D,CAEA,mBACEN,KAAA,QAAKW,SAAS,CAAC,gBAAgB,CAAAC,QAAA,eAC7Bd,IAAA,OAAAc,QAAA,CAAI,gBAAc,CAAI,CAAC,cACvBd,IAAA,QAAKa,SAAS,CAAC,WAAW,CAAAC,QAAA,CACvBV,IAAI,CAACW,GAAG,CAAEC,GAAG,eACZhB,IAAA,CAACF,OAAO,EAAkBkB,GAAG,CAAEA,GAAI,EAArBA,GAAG,CAACC,MAAmB,CACtC,CAAC,CACC,CAAC,EACH,CAAC,CAEV,CAAC,CAED,cAAe,CAAAd,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}