{"ast":null,"code":"var _jsxFileName = \"C:\\\\final_year_project\\\\app\\\\frontend\\\\src\\\\pages\\\\ApplyJobPage.js\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from \"react\";\n// import { useParams, useNavigate } from \"react-router-dom\";\n// import { jwtDecode } from \"jwt-decode\";\n// import axios from \"axios\";\n// import '../styles/ApplyJobPage.css';\n\n// const ApplyJobPage = () => {\n//   const { jobId } = useParams();\n//   const navigate = useNavigate();\n//   const [jobDetails, setJobDetails] = useState(null);\n//   const [cvFile, setCvFile] = useState(null);\n//   const [coverLetterFile, setCoverLetterFile] = useState(null);\n//   const [loading, setLoading] = useState(false);\n//   const [error, setError] = useState(null);\n\n//   useEffect(() => {\n//     // Fetch job details when component mounts\n//     const fetchJobDetails = async () => {\n//       try {\n//         const response = await axios.get(`http://127.0.0.1:8000/api/jobs/${jobId}`, {\n//           headers: {\n//             Authorization: `Bearer ${localStorage.getItem('token')}`\n//           }\n//         });\n//         setJobDetails(response.data);\n//       } catch (err) {\n//         setError(\"Failed to load job details. Please try again later.\");\n//       }\n//     };\n\n//     fetchJobDetails();\n//   }, [jobId]);\n\n//   // Handle file selection for CV\n//   const handleCvChange = (e) => {\n//     if (e.target.files && e.target.files[0]) {\n//       setCvFile(e.target.files[0]);\n//     }\n//   };\n\n//   // Handle file selection for Cover Letter\n//   const handleCoverLetterChange = (e) => {\n//     if (e.target.files && e.target.files[0]) {\n//       setCoverLetterFile(e.target.files[0]);\n//     }\n//   };\n\n//   // Handle form submission\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n\n//     if (!cvFile) {\n//       alert(\"Please upload your CV before applying.\");\n//       return;\n//     }\n\n//     setLoading(true);\n//     setError(null);\n\n//     try {\n//       // Get token and decode user info\n//       const token = localStorage.getItem('token');\n//       if (!token) {\n//         throw new Error(\"You must be logged in to apply for jobs\");\n//       }\n\n//       const decoded = jwtDecode(token);\n//       const userId = decoded.user_id;\n\n//       // Create a FormData object\n//       const formData = new FormData();\n//       formData.append(\"user_id\", userId);\n//       formData.append(\"job_id\", jobId);\n//       formData.append(\"cv\", cvFile);\n\n//       if (coverLetterFile) {\n//         formData.append(\"cover_letter\", coverLetterFile);\n//       }\n\n//       // Make the API request\n//       await axios.post(\n//         \"http://127.0.0.1:8000/api/apply-job/\", \n//         formData,\n//         {\n//           headers: {\n//             Authorization: `Bearer ${token}`\n//           }\n//         }\n//       );\n\n//       alert(\"Application submitted successfully!\");\n//       navigate(\"/applied-jobs\");\n\n//     } catch (err) {\n//       const errorMessage = err.response?.data?.detail || \n//                           err.message || \n//                           \"Failed to submit application. Please try again.\";\n\n//       setError(errorMessage);\n//       alert(`Error: ${errorMessage}`);\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   if (error) {\n//     return (\n//       <div className=\"apply-job-page error\">\n//         <h2>Error</h2>\n//         <p>{error}</p>\n//         <button onClick={() => navigate(\"/jobs\")}>Back to Jobs</button>\n//       </div>\n//     );\n//   }\n\n//   if (!jobDetails) {\n//     return <div className=\"apply-job-page loading\">Loading job details...</div>;\n//   }\n\n//   return (\n//     <div className=\"apply-job-page\">\n//       <h2>{jobDetails.job_title}</h2>\n\n//       <div className=\"job-details\">\n//         <p><strong>Description:</strong> {jobDetails.job_description}</p>\n//         <p><strong>Country:</strong> {jobDetails.country}</p>\n//         <p><strong>Skills Required:</strong> {jobDetails.skills_required}</p>\n//         {jobDetails.salary && <p><strong>Salary:</strong> {jobDetails.salary}</p>}\n//       </div>\n\n//       <form onSubmit={handleSubmit}>\n//         <div className=\"file-upload\">\n//           <label htmlFor=\"cv-upload\">Upload CV (Required):</label>\n//           <input \n//             id=\"cv-upload\"\n//             type=\"file\" \n//             accept=\".pdf,.docx,.doc\" \n//             onChange={handleCvChange}\n//             required\n//           />\n//           {cvFile && <p className=\"file-name\">Selected: {cvFile.name}</p>}\n//         </div>\n\n//         <div className=\"file-upload\">\n//           <label htmlFor=\"cover-letter-upload\">Upload Cover Letter (Optional):</label>\n//           <input \n//             id=\"cover-letter-upload\"\n//             type=\"file\" \n//             accept=\".pdf,.docx,.doc\" \n//             onChange={handleCoverLetterChange}\n//           />\n//           {coverLetterFile && <p className=\"file-name\">Selected: {coverLetterFile.name}</p>}\n//         </div>\n\n//         <button \n//           type=\"submit\" \n//           disabled={loading}\n//           className={loading ? \"loading\" : \"\"}\n//         >\n//           {loading ? \"Submitting...\" : \"Apply Now\"}\n//         </button>\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default ApplyJobPage;\n\nimport React, { useEffect, useState } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport { useAuth } from \"../context/AuthContext\";\nimport { api } from \"../services/api\";\nimport '../styles/ApplyJobPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ApplyJobPage = () => {\n  _s();\n  const {\n    jobId\n  } = useParams();\n  const navigate = useNavigate();\n  const {\n    user\n  } = useAuth();\n  const [jobDetails, setJobDetails] = useState(null);\n  const [cvFile, setCvFile] = useState(null);\n  const [coverLetterFile, setCoverLetterFile] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [submitting, setSubmitting] = useState(false);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    // Check authentication\n    if (!user) {\n      navigate(\"/login\");\n      return;\n    }\n\n    // Fetch job details when component mounts\n    const fetchJobDetails = async () => {\n      try {\n        setLoading(true);\n        const response = await api.get(`/jobs/${jobId}`);\n        setJobDetails(response.data);\n        setError(null);\n      } catch (err) {\n        console.error(\"Error fetching job details:\", err);\n        setError(\"Failed to load job details. Please try again later.\");\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchJobDetails();\n  }, [jobId, navigate, user]);\n\n  // Handle file selection for CV\n  const handleCvChange = e => {\n    if (e.target.files && e.target.files[0]) {\n      setCvFile(e.target.files[0]);\n    }\n  };\n\n  // Handle file selection for Cover Letter\n  const handleCoverLetterChange = e => {\n    if (e.target.files && e.target.files[0]) {\n      setCoverLetterFile(e.target.files[0]);\n    }\n  };\n\n  // Handle form submission\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!cvFile) {\n      alert(\"Please upload your CV before applying.\");\n      return;\n    }\n    setSubmitting(true);\n    setError(null);\n    try {\n      // Get user ID from auth context\n      const userId = user.user_id;\n\n      // Create a FormData object\n      const formData = new FormData();\n      formData.append(\"user_id\", userId);\n      formData.append(\"job_id\", jobId);\n      formData.append(\"cv\", cvFile);\n      if (coverLetterFile) {\n        formData.append(\"cover_letter\", coverLetterFile);\n      }\n\n      // Make the API request\n      const token = localStorage.getItem(\"token\");\n      await api.post(\"/apply-job/\", formData, {\n        headers: {\n          Authorization: `Bearer ${token}`\n          // Don't set Content-Type here, let the browser set it with the boundary\n        }\n      });\n      alert(\"Application submitted successfully!\");\n      navigate(\"/applied-jobs\");\n    } catch (err) {\n      var _err$response, _err$response$data;\n      console.error(\"Error submitting application:\", err);\n      const errorMessage = ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.detail) || err.message || \"Failed to submit application. Please try again.\";\n      setError(errorMessage);\n    } finally {\n      setSubmitting(false);\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"apply-job-page loading\",\n      children: \"Loading job details...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 12\n    }, this);\n  }\n  if (error && !jobDetails) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"apply-job-page error\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigate(\"/jobs\"),\n        children: \"Back to Jobs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"apply-job-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: jobDetails.job_title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"job-details\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Description:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 12\n        }, this), \" \", jobDetails.job_description]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Country:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 12\n        }, this), \" \", jobDetails.country]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Skills Required:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 12\n        }, this), \" \", jobDetails.skills_required]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 9\n      }, this), jobDetails.salary && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Salary:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 34\n        }, this), \" \", jobDetails.salary]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 31\n      }, this), jobDetails.working_hours && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Working Hours:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 41\n        }, this), \" \", jobDetails.working_hours]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 38\n      }, this), jobDetails.facilities && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Facilities:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 38\n        }, this), \" \", jobDetails.facilities]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 35\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"file-upload\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"cv-upload\",\n          children: \"Upload CV (Required)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"cv-upload\",\n          type: \"file\",\n          accept: \".pdf,.docx,.doc\",\n          onChange: handleCvChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 11\n        }, this), cvFile && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"file-name\",\n          children: [\"Selected: \", cvFile.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 22\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"file-upload\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"cover-letter-upload\",\n          children: \"Upload Cover Letter (Optional)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"cover-letter-upload\",\n          type: \"file\",\n          accept: \".pdf,.docx,.doc\",\n          onChange: handleCoverLetterChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 11\n        }, this), coverLetterFile && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"file-name\",\n          children: [\"Selected: \", coverLetterFile.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 31\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: submitting,\n        className: submitting ? \"loading\" : \"\",\n        children: submitting ? \"Submitting...\" : \"Apply Now\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 290,\n    columnNumber: 5\n  }, this);\n};\n_s(ApplyJobPage, \"6UZugyqHb9nFAuqmo4dNVlCZuL8=\", false, function () {\n  return [useParams, useNavigate, useAuth];\n});\n_c = ApplyJobPage;\nexport default ApplyJobPage;\nvar _c;\n$RefreshReg$(_c, \"ApplyJobPage\");","map":{"version":3,"names":["React","useEffect","useState","useParams","useNavigate","useAuth","api","jsxDEV","_jsxDEV","ApplyJobPage","_s","jobId","navigate","user","jobDetails","setJobDetails","cvFile","setCvFile","coverLetterFile","setCoverLetterFile","loading","setLoading","submitting","setSubmitting","error","setError","fetchJobDetails","response","get","data","err","console","handleCvChange","e","target","files","handleCoverLetterChange","handleSubmit","preventDefault","alert","userId","user_id","formData","FormData","append","token","localStorage","getItem","post","headers","Authorization","_err$response","_err$response$data","errorMessage","detail","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","job_title","job_description","country","skills_required","salary","working_hours","facilities","onSubmit","htmlFor","id","type","accept","onChange","required","name","disabled","_c","$RefreshReg$"],"sources":["C:/final_year_project/app/frontend/src/pages/ApplyJobPage.js"],"sourcesContent":["// import React, { useEffect, useState } from \"react\";\r\n// import { useParams, useNavigate } from \"react-router-dom\";\r\n// import { jwtDecode } from \"jwt-decode\";\r\n// import axios from \"axios\";\r\n// import '../styles/ApplyJobPage.css';\r\n\r\n// const ApplyJobPage = () => {\r\n//   const { jobId } = useParams();\r\n//   const navigate = useNavigate();\r\n//   const [jobDetails, setJobDetails] = useState(null);\r\n//   const [cvFile, setCvFile] = useState(null);\r\n//   const [coverLetterFile, setCoverLetterFile] = useState(null);\r\n//   const [loading, setLoading] = useState(false);\r\n//   const [error, setError] = useState(null);\r\n\r\n//   useEffect(() => {\r\n//     // Fetch job details when component mounts\r\n//     const fetchJobDetails = async () => {\r\n//       try {\r\n//         const response = await axios.get(`http://127.0.0.1:8000/api/jobs/${jobId}`, {\r\n//           headers: {\r\n//             Authorization: `Bearer ${localStorage.getItem('token')}`\r\n//           }\r\n//         });\r\n//         setJobDetails(response.data);\r\n//       } catch (err) {\r\n//         setError(\"Failed to load job details. Please try again later.\");\r\n//       }\r\n//     };\r\n\r\n//     fetchJobDetails();\r\n//   }, [jobId]);\r\n\r\n//   // Handle file selection for CV\r\n//   const handleCvChange = (e) => {\r\n//     if (e.target.files && e.target.files[0]) {\r\n//       setCvFile(e.target.files[0]);\r\n//     }\r\n//   };\r\n\r\n//   // Handle file selection for Cover Letter\r\n//   const handleCoverLetterChange = (e) => {\r\n//     if (e.target.files && e.target.files[0]) {\r\n//       setCoverLetterFile(e.target.files[0]);\r\n//     }\r\n//   };\r\n\r\n//   // Handle form submission\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n    \r\n//     if (!cvFile) {\r\n//       alert(\"Please upload your CV before applying.\");\r\n//       return;\r\n//     }\r\n\r\n//     setLoading(true);\r\n//     setError(null);\r\n\r\n//     try {\r\n//       // Get token and decode user info\r\n//       const token = localStorage.getItem('token');\r\n//       if (!token) {\r\n//         throw new Error(\"You must be logged in to apply for jobs\");\r\n//       }\r\n      \r\n//       const decoded = jwtDecode(token);\r\n//       const userId = decoded.user_id;\r\n      \r\n//       // Create a FormData object\r\n//       const formData = new FormData();\r\n//       formData.append(\"user_id\", userId);\r\n//       formData.append(\"job_id\", jobId);\r\n//       formData.append(\"cv\", cvFile);\r\n      \r\n//       if (coverLetterFile) {\r\n//         formData.append(\"cover_letter\", coverLetterFile);\r\n//       }\r\n      \r\n//       // Make the API request\r\n//       await axios.post(\r\n//         \"http://127.0.0.1:8000/api/apply-job/\", \r\n//         formData,\r\n//         {\r\n//           headers: {\r\n//             Authorization: `Bearer ${token}`\r\n//           }\r\n//         }\r\n//       );\r\n      \r\n//       alert(\"Application submitted successfully!\");\r\n//       navigate(\"/applied-jobs\");\r\n      \r\n//     } catch (err) {\r\n//       const errorMessage = err.response?.data?.detail || \r\n//                           err.message || \r\n//                           \"Failed to submit application. Please try again.\";\r\n      \r\n//       setError(errorMessage);\r\n//       alert(`Error: ${errorMessage}`);\r\n//     } finally {\r\n//       setLoading(false);\r\n//     }\r\n//   };\r\n\r\n//   if (error) {\r\n//     return (\r\n//       <div className=\"apply-job-page error\">\r\n//         <h2>Error</h2>\r\n//         <p>{error}</p>\r\n//         <button onClick={() => navigate(\"/jobs\")}>Back to Jobs</button>\r\n//       </div>\r\n//     );\r\n//   }\r\n\r\n//   if (!jobDetails) {\r\n//     return <div className=\"apply-job-page loading\">Loading job details...</div>;\r\n//   }\r\n\r\n//   return (\r\n//     <div className=\"apply-job-page\">\r\n//       <h2>{jobDetails.job_title}</h2>\r\n      \r\n//       <div className=\"job-details\">\r\n//         <p><strong>Description:</strong> {jobDetails.job_description}</p>\r\n//         <p><strong>Country:</strong> {jobDetails.country}</p>\r\n//         <p><strong>Skills Required:</strong> {jobDetails.skills_required}</p>\r\n//         {jobDetails.salary && <p><strong>Salary:</strong> {jobDetails.salary}</p>}\r\n//       </div>\r\n\r\n//       <form onSubmit={handleSubmit}>\r\n//         <div className=\"file-upload\">\r\n//           <label htmlFor=\"cv-upload\">Upload CV (Required):</label>\r\n//           <input \r\n//             id=\"cv-upload\"\r\n//             type=\"file\" \r\n//             accept=\".pdf,.docx,.doc\" \r\n//             onChange={handleCvChange}\r\n//             required\r\n//           />\r\n//           {cvFile && <p className=\"file-name\">Selected: {cvFile.name}</p>}\r\n//         </div>\r\n\r\n//         <div className=\"file-upload\">\r\n//           <label htmlFor=\"cover-letter-upload\">Upload Cover Letter (Optional):</label>\r\n//           <input \r\n//             id=\"cover-letter-upload\"\r\n//             type=\"file\" \r\n//             accept=\".pdf,.docx,.doc\" \r\n//             onChange={handleCoverLetterChange}\r\n//           />\r\n//           {coverLetterFile && <p className=\"file-name\">Selected: {coverLetterFile.name}</p>}\r\n//         </div>\r\n\r\n//         <button \r\n//           type=\"submit\" \r\n//           disabled={loading}\r\n//           className={loading ? \"loading\" : \"\"}\r\n//         >\r\n//           {loading ? \"Submitting...\" : \"Apply Now\"}\r\n//         </button>\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default ApplyJobPage;\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport { useAuth } from \"../context/AuthContext\";\r\nimport { api } from \"../services/api\";\r\nimport '../styles/ApplyJobPage.css';\r\n\r\nconst ApplyJobPage = () => {\r\n  const { jobId } = useParams();\r\n  const navigate = useNavigate();\r\n  const { user } = useAuth();\r\n  const [jobDetails, setJobDetails] = useState(null);\r\n  const [cvFile, setCvFile] = useState(null);\r\n  const [coverLetterFile, setCoverLetterFile] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [submitting, setSubmitting] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Check authentication\r\n    if (!user) {\r\n      navigate(\"/login\");\r\n      return;\r\n    }\r\n\r\n    // Fetch job details when component mounts\r\n    const fetchJobDetails = async () => {\r\n      try {\r\n        setLoading(true);\r\n        const response = await api.get(`/jobs/${jobId}`);\r\n        setJobDetails(response.data);\r\n        setError(null);\r\n      } catch (err) {\r\n        console.error(\"Error fetching job details:\", err);\r\n        setError(\"Failed to load job details. Please try again later.\");\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchJobDetails();\r\n  }, [jobId, navigate, user]);\r\n\r\n  // Handle file selection for CV\r\n  const handleCvChange = (e) => {\r\n    if (e.target.files && e.target.files[0]) {\r\n      setCvFile(e.target.files[0]);\r\n    }\r\n  };\r\n\r\n  // Handle file selection for Cover Letter\r\n  const handleCoverLetterChange = (e) => {\r\n    if (e.target.files && e.target.files[0]) {\r\n      setCoverLetterFile(e.target.files[0]);\r\n    }\r\n  };\r\n\r\n  // Handle form submission\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    if (!cvFile) {\r\n      alert(\"Please upload your CV before applying.\");\r\n      return;\r\n    }\r\n\r\n    setSubmitting(true);\r\n    setError(null);\r\n\r\n    try {\r\n      // Get user ID from auth context\r\n      const userId = user.user_id;\r\n      \r\n      // Create a FormData object\r\n      const formData = new FormData();\r\n      formData.append(\"user_id\", userId);\r\n      formData.append(\"job_id\", jobId);\r\n      formData.append(\"cv\", cvFile);\r\n      \r\n      if (coverLetterFile) {\r\n        formData.append(\"cover_letter\", coverLetterFile);\r\n      }\r\n      \r\n      // Make the API request\r\n      const token = localStorage.getItem(\"token\");\r\n      await api.post(\"/apply-job/\", formData, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          // Don't set Content-Type here, let the browser set it with the boundary\r\n        }\r\n      });\r\n      \r\n      alert(\"Application submitted successfully!\");\r\n      navigate(\"/applied-jobs\");\r\n      \r\n    } catch (err) {\r\n      console.error(\"Error submitting application:\", err);\r\n      const errorMessage = err.response?.data?.detail || \r\n                          err.message || \r\n                          \"Failed to submit application. Please try again.\";\r\n      \r\n      setError(errorMessage);\r\n    } finally {\r\n      setSubmitting(false);\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return <div className=\"apply-job-page loading\">Loading job details...</div>;\r\n  }\r\n\r\n  if (error && !jobDetails) {\r\n    return (\r\n      <div className=\"apply-job-page error\">\r\n        <h2>Error</h2>\r\n        <p>{error}</p>\r\n        <button onClick={() => navigate(\"/jobs\")}>Back to Jobs</button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"apply-job-page\">\r\n      <h2>{jobDetails.job_title}</h2>\r\n      \r\n      <div className=\"job-details\">\r\n        <p><strong>Description:</strong> {jobDetails.job_description}</p>\r\n        <p><strong>Country:</strong> {jobDetails.country}</p>\r\n        <p><strong>Skills Required:</strong> {jobDetails.skills_required}</p>\r\n        {jobDetails.salary && <p><strong>Salary:</strong> {jobDetails.salary}</p>}\r\n        {jobDetails.working_hours && <p><strong>Working Hours:</strong> {jobDetails.working_hours}</p>}\r\n        {jobDetails.facilities && <p><strong>Facilities:</strong> {jobDetails.facilities}</p>}\r\n      </div>\r\n\r\n      {error && (\r\n        <div className=\"error-message\">\r\n          <p>{error}</p>\r\n        </div>\r\n      )}\r\n\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"file-upload\">\r\n          <label htmlFor=\"cv-upload\">Upload CV (Required)</label>\r\n          <input \r\n            id=\"cv-upload\"\r\n            type=\"file\" \r\n            accept=\".pdf,.docx,.doc\" \r\n            onChange={handleCvChange}\r\n            required\r\n          />\r\n          {cvFile && <p className=\"file-name\">Selected: {cvFile.name}</p>}\r\n        </div>\r\n\r\n        <div className=\"file-upload\">\r\n          <label htmlFor=\"cover-letter-upload\">Upload Cover Letter (Optional)</label>\r\n          <input \r\n            id=\"cover-letter-upload\"\r\n            type=\"file\" \r\n            accept=\".pdf,.docx,.doc\" \r\n            onChange={handleCoverLetterChange}\r\n          />\r\n          {coverLetterFile && <p className=\"file-name\">Selected: {coverLetterFile.name}</p>}\r\n        </div>\r\n\r\n        <button \r\n          type=\"submit\" \r\n          disabled={submitting}\r\n          className={submitting ? \"loading\" : \"\"}\r\n        >\r\n          {submitting ? \"Submitting...\" : \"Apply Now\"}\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ApplyJobPage;"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,EAAEC,WAAW,QAAQ,kBAAkB;AACzD,SAASC,OAAO,QAAQ,wBAAwB;AAChD,SAASC,GAAG,QAAQ,iBAAiB;AACrC,OAAO,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM;IAAEC;EAAM,CAAC,GAAGR,SAAS,CAAC,CAAC;EAC7B,MAAMS,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAES;EAAK,CAAC,GAAGR,OAAO,CAAC,CAAC;EAC1B,MAAM,CAACS,UAAU,EAAEC,aAAa,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAM,CAACc,MAAM,EAA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}