{"ast":null,"code":"var _jsxFileName = \"C:\\\\final_year_project\\\\app\\\\frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// import React, { createContext, useContext, useState, useEffect } from \"react\";\n// import { loginJobSeeker, loginEmployer } from \"../services/api\";\n\n// const AuthContext = createContext();\n\n// export const AuthProvider = ({ children }) => {\n//     const [user, setUser] = useState(() => {\n//         const storedUser = localStorage.getItem(\"user\");\n//         return storedUser ? JSON.parse(storedUser) : null;\n//     });\n\n//     const login = async (email, password, role) => {\n//         try {\n//             const data = role === \"job_seeker\"\n//                 ? await loginJobSeeker(email, password)\n//                 : await loginEmployer(email, password);\n\n//             const newUser = {\n//                 email,\n//                 role: data.role,\n//                 user_id: data.user_id,  // Ensure this is correctly retrieved\n//                 token: data.access_token\n//             };\n\n//             setUser(newUser);\n//             localStorage.setItem(\"user\", JSON.stringify(newUser));\n//             localStorage.setItem(\"token\", data.access_token);\n//         } catch (error) {\n//             throw new Error(\"Invalid credentials.\");\n//         }\n//     };\n\n//     const logout = () => {\n//         setUser(null);\n//         localStorage.removeItem(\"user\");\n//         localStorage.removeItem(\"token\");\n//     };\n\n//     useEffect(() => {\n//       console.log(\"Logged in user data:\", user); // Debugging line\n//     }, [user]);\n\n//     return (\n//         <AuthContext.Provider value={{ user, login, logout }}>\n//             {children}\n//         </AuthContext.Provider>\n//     );\n// };\n\n// export const useAuth = () => useContext(AuthContext);\n\nimport React, { createContext, useContext, useState, useEffect } from \"react\";\nimport { loginJobSeeker, loginEmployer } from \"../services/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(() => {\n    const storedUser = localStorage.getItem(\"user\");\n    return storedUser ? JSON.parse(storedUser) : null;\n  });\n  const login = async (credentials, role) => {\n    try {\n      const response = role === \"job_seeker\" ? await loginJobSeeker(credentials) : await loginEmployer(credentials);\n      if (response.access_token) {\n        const userData = {\n          token: response.access_token,\n          role: response.role,\n          user_id: response.user_id\n        };\n        localStorage.setItem(\"user\", JSON.stringify(userData));\n        setUser(userData);\n      } else {\n        throw new Error(\"Invalid response from server\");\n      }\n    } catch (error) {\n      console.error(\"Login error:\", error.message);\n      throw error;\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem(\"user\");\n    setUser(null);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"KFew+xa1vmJwTYBTOPqkaz+3RSU=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","loginJobSeeker","loginEmployer","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","storedUser","localStorage","getItem","JSON","parse","login","credentials","role","response","access_token","userData","token","user_id","setItem","stringify","Error","error","console","message","logout","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["C:/final_year_project/app/frontend/src/context/AuthContext.js"],"sourcesContent":["// import React, { createContext, useContext, useState, useEffect } from \"react\";\r\n// import { loginJobSeeker, loginEmployer } from \"../services/api\";\r\n\r\n// const AuthContext = createContext();\r\n\r\n// export const AuthProvider = ({ children }) => {\r\n//     const [user, setUser] = useState(() => {\r\n//         const storedUser = localStorage.getItem(\"user\");\r\n//         return storedUser ? JSON.parse(storedUser) : null;\r\n//     });\r\n\r\n//     const login = async (email, password, role) => {\r\n//         try {\r\n//             const data = role === \"job_seeker\"\r\n//                 ? await loginJobSeeker(email, password)\r\n//                 : await loginEmployer(email, password);\r\n            \r\n//             const newUser = {\r\n//                 email,\r\n//                 role: data.role,\r\n//                 user_id: data.user_id,  // Ensure this is correctly retrieved\r\n//                 token: data.access_token\r\n//             };\r\n\r\n//             setUser(newUser);\r\n//             localStorage.setItem(\"user\", JSON.stringify(newUser));\r\n//             localStorage.setItem(\"token\", data.access_token);\r\n//         } catch (error) {\r\n//             throw new Error(\"Invalid credentials.\");\r\n//         }\r\n//     };\r\n\r\n//     const logout = () => {\r\n//         setUser(null);\r\n//         localStorage.removeItem(\"user\");\r\n//         localStorage.removeItem(\"token\");\r\n//     };\r\n\r\n//     useEffect(() => {\r\n//       console.log(\"Logged in user data:\", user); // Debugging line\r\n//     }, [user]);\r\n\r\n//     return (\r\n//         <AuthContext.Provider value={{ user, login, logout }}>\r\n//             {children}\r\n//         </AuthContext.Provider>\r\n//     );\r\n// };\r\n\r\n// export const useAuth = () => useContext(AuthContext);\r\n\r\n\r\nimport React, { createContext, useContext, useState, useEffect } from \"react\";\r\nimport { loginJobSeeker, loginEmployer } from \"../services/api\";\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(() => {\r\n    const storedUser = localStorage.getItem(\"user\");\r\n    return storedUser ? JSON.parse(storedUser) : null;\r\n  });\r\n\r\n  const login = async (credentials, role) => {\r\n    try {\r\n      const response = role === \"job_seeker\"\r\n        ? await loginJobSeeker(credentials)\r\n        : await loginEmployer(credentials);\r\n\r\n      if (response.access_token) {\r\n        const userData = {\r\n          token: response.access_token,\r\n          role: response.role,\r\n          user_id: response.user_id,\r\n        };\r\n\r\n        localStorage.setItem(\"user\", JSON.stringify(userData));\r\n        setUser(userData);\r\n      } else {\r\n        throw new Error(\"Invalid response from server\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Login error:\", error.message);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem(\"user\");\r\n    setUser(null);\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, login, logout }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAuth = () => useContext(AuthContext);\r\n\r\n"],"mappings":";;;AAAA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC7E,SAASC,cAAc,EAAEC,aAAa,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhE,MAAMC,WAAW,gBAAGR,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMS,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,MAAM;IACrC,MAAMY,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IAC/C,OAAOF,UAAU,GAAGG,IAAI,CAACC,KAAK,CAACJ,UAAU,CAAC,GAAG,IAAI;EACnD,CAAC,CAAC;EAEF,MAAMK,KAAK,GAAG,MAAAA,CAAOC,WAAW,EAAEC,IAAI,KAAK;IACzC,IAAI;MACF,MAAMC,QAAQ,GAAGD,IAAI,KAAK,YAAY,GAClC,MAAMjB,cAAc,CAACgB,WAAW,CAAC,GACjC,MAAMf,aAAa,CAACe,WAAW,CAAC;MAEpC,IAAIE,QAAQ,CAACC,YAAY,EAAE;QACzB,MAAMC,QAAQ,GAAG;UACfC,KAAK,EAAEH,QAAQ,CAACC,YAAY;UAC5BF,IAAI,EAAEC,QAAQ,CAACD,IAAI;UACnBK,OAAO,EAAEJ,QAAQ,CAACI;QACpB,CAAC;QAEDX,YAAY,CAACY,OAAO,CAAC,MAAM,EAAEV,IAAI,CAACW,SAAS,CAACJ,QAAQ,CAAC,CAAC;QACtDX,OAAO,CAACW,QAAQ,CAAC;MACnB,CAAC,MAAM;QACL,MAAM,IAAIK,KAAK,CAAC,8BAA8B,CAAC;MACjD;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,cAAc,EAAEA,KAAK,CAACE,OAAO,CAAC;MAC5C,MAAMF,KAAK;IACb;EACF,CAAC;EAED,MAAMG,MAAM,GAAGA,CAAA,KAAM;IACnBlB,YAAY,CAACmB,UAAU,CAAC,MAAM,CAAC;IAC/BrB,OAAO,CAAC,IAAI,CAAC;EACf,CAAC;EAED,oBACEN,OAAA,CAACC,WAAW,CAAC2B,QAAQ;IAACC,KAAK,EAAE;MAAExB,IAAI;MAAEO,KAAK;MAAEc;IAAO,CAAE;IAAAvB,QAAA,EAClDA;EAAQ;IAAA2B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAAC7B,EAAA,CAxCWF,YAAY;AAAAgC,EAAA,GAAZhC,YAAY;AA0CzB,OAAO,MAAMiC,OAAO,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAM1C,UAAU,CAACO,WAAW,CAAC;AAAA;AAACmC,GAAA,CAAxCD,OAAO;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}