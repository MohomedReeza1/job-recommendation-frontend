{"ast":null,"code":"// import React, { useEffect, useState } from \"react\";\n// import { useParams, useNavigate } from \"react-router-dom\";\n// import { jwtDecode } from \"jwt-decode\";\n// import axios from \"axios\"; \n// import '../styles/ApplyJobPage.css';\n// const ApplyJobPage = () => {\n//   const { jobId } = useParams();\n//   const navigate = useNavigate();\n//   const [jobDetails, setJobDetails] = useState(null);\n//   const [cvFile, setCvFile] = useState(null);\n//   const [coverLetterFile, setCoverLetterFile] = useState(null);\n//   const [loading, setLoading] = useState(false);\n//   const [error, setError] = useState(null);\n//   useEffect(() => {\n//     // Fetch job details when component mounts\n//     const fetchJobDetails = async () => {\n//       try {\n//         const response = await axios.get(`http://127.0.0.1:8000/api/jobs/${jobId}`, {\n//           headers: {\n//             Authorization: `Bearer ${localStorage.getItem('token')}`\n//           }\n//         });\n//         setJobDetails(response.data);\n//       } catch (err) {\n//         setError(\"Failed to load job details. Please try again later.\");\n//       }\n//     };\n//     fetchJobDetails();\n//   }, [jobId]);\n//   // Handle file selection for CV\n//   const handleCvChange = (e) => {\n//     if (e.target.files && e.target.files[0]) {\n//       setCvFile(e.target.files[0]);\n//     }\n//   };\n//   // Handle file selection for Cover Letter\n//   const handleCoverLetterChange = (e) => {\n//     if (e.target.files && e.target.files[0]) {\n//       setCoverLetterFile(e.target.files[0]);\n//     }\n//   };\n//   // Handle form submission\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     if (!cvFile) {\n//       alert(\"Please upload your CV before applying.\");\n//       return;\n//     }\n//     setLoading(true);\n//     setError(null);\n//     try {\n//       // Get token and decode user info\n//       const token = localStorage.getItem('token');\n//       if (!token) {\n//         throw new Error(\"You must be logged in to apply for jobs\");\n//       }\n//       const decoded = jwtDecode(token);\n//       const userId = decoded.user_id;\n//       // Create a FormData object\n//       const formData = new FormData();\n//       formData.append(\"user_id\", userId);\n//       formData.append(\"job_id\", jobId);\n//       formData.append(\"cv\", cvFile);\n//       if (coverLetterFile) {\n//         formData.append(\"cover_letter\", coverLetterFile);\n//       }\n//       // Make the API request\n//       await axios.post(\n//         \"http://127.0.0.1:8000/api/apply-job/\", \n//         formData,\n//         {\n//           headers: {\n//             Authorization: `Bearer ${token}`\n//           }\n//         }\n//       );\n//       alert(\"Application submitted successfully!\");\n//       navigate(\"/applied-jobs\");\n//     } catch (err) {\n//       const errorMessage = err.response?.data?.detail || \n//                           err.message || \n//                           \"Failed to submit application. Please try again.\";\n//       setError(errorMessage);\n//       alert(`Error: ${errorMessage}`);\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n//   if (error) {\n//     return (\n//       <div className=\"apply-job-page error\">\n//         <h2>Error</h2>\n//         <p>{error}</p>\n//         <button onClick={() => navigate(\"/jobs\")}>Back to Jobs</button>\n//       </div>\n//     );\n//   }\n//   if (!jobDetails) {\n//     return <div className=\"apply-job-page loading\">Loading job details...</div>;\n//   }\n//   return (\n//     <div className=\"apply-job-page\">\n//       <h2>{jobDetails.job_title}</h2>\n//       <div className=\"job-details\">\n//         <p><strong>Description:</strong> {jobDetails.job_description}</p>\n//         <p><strong>Country:</strong> {jobDetails.country}</p>\n//         <p><strong>Skills Required:</strong> {jobDetails.skills_required}</p>\n//         {jobDetails.salary && <p><strong>Salary:</strong> {jobDetails.salary}</p>}\n//         {jobDetails.working_hours && <p><strong>Working Hours:</strong> {jobDetails.working_hours}</p>}\n//         {jobDetails.facilities && <p><strong>Facilities:</strong> {jobDetails.facilities}</p>}\n//       </div>\n//       <form onSubmit={handleSubmit}>\n//         <div className=\"file-upload\">\n//           <label htmlFor=\"cv-upload\">Upload CV (Required):</label>\n//           <input \n//             id=\"cv-upload\"\n//             type=\"file\" \n//             accept=\".pdf,.docx,.doc\" \n//             onChange={handleCvChange}\n//             required\n//           />\n//           {cvFile && <p className=\"file-name\">Selected: {cvFile.name}</p>}\n//         </div>\n//         <div className=\"file-upload\">\n//           <label htmlFor=\"cover-letter-upload\">Upload Cover Letter (Optional):</label>\n//           <input \n//             id=\"cover-letter-upload\"\n//             type=\"file\" \n//             accept=\".pdf,.docx,.doc\" \n//             onChange={handleCoverLetterChange}\n//           />\n//           {coverLetterFile && <p className=\"file-name\">Selected: {coverLetterFile.name}</p>}\n//         </div>\n//         <button \n//           type=\"submit\" \n//           disabled={loading}\n//           className={loading ? \"loading\" : \"\"}\n//         >\n//           {loading ? \"Submitting...\" : \"Apply Now\"}\n//         </button>\n//       </form>\n//     </div>\n//   );\n// };\n// export default ApplyJobPage;\nimport React,{useEffect,useState}from\"react\";import{useParams,useNavigate}from\"react-router-dom\";import{fetchJobDetails}from\"../services/api\";import{useAuth}from\"../context/AuthContext\";import axios from\"axios\";import'../styles/ApplyJobPage.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ApplyJobPage=()=>{const{jobId}=useParams();const navigate=useNavigate();const{user}=useAuth();const[jobDetails,setJobDetails]=useState(null);const[cvFile,setCvFile]=useState(null);const[coverLetterFile,setCoverLetterFile]=useState(null);const[loading,setLoading]=useState(false);const[error,setError]=useState(null);useEffect(()=>{// Check if user is logged in and is a job seeker\nif(!user||user.role!==\"job_seeker\"){alert(\"You must be logged in as a job seeker to apply for jobs.\");navigate(\"/login\");return;}// Fetch job details when component mounts\nconst fetchJobData=async()=>{try{const response=await fetchJobDetails(jobId);setJobDetails(response);}catch(err){setError(\"Failed to load job details. Please try again later.\");}};fetchJobData();},[jobId,navigate,user]);// Handle file selection for CV\nconst handleCvChange=e=>{if(e.target.files&&e.target.files[0]){setCvFile(e.target.files[0]);}};// Handle file selection for Cover Letter\nconst handleCoverLetterChange=e=>{if(e.target.files&&e.target.files[0]){setCoverLetterFile(e.target.files[0]);}};// Handle form submission\nconst handleSubmit=async e=>{e.preventDefault();if(!cvFile){alert(\"Please upload your CV before applying.\");return;}setLoading(true);setError(null);try{// Get token\nconst token=localStorage.getItem('token');if(!token){throw new Error(\"You must be logged in to apply for jobs\");}// Create a FormData object\nconst formData=new FormData();formData.append(\"job_id\",jobId);formData.append(\"cv\",cvFile);if(coverLetterFile){formData.append(\"cover_letter\",coverLetterFile);}// Make the API request\nawait axios.post(\"http://127.0.0.1:8000/api/apply-job/\",formData,{headers:{Authorization:\"Bearer \".concat(token)}});alert(\"Application submitted successfully!\");navigate(\"/applied-jobs\");}catch(err){var _err$response,_err$response$data;const errorMessage=((_err$response=err.response)===null||_err$response===void 0?void 0:(_err$response$data=_err$response.data)===null||_err$response$data===void 0?void 0:_err$response$data.detail)||err.message||\"Failed to submit application. Please try again.\";setError(errorMessage);alert(\"Error: \".concat(errorMessage));}finally{setLoading(false);}};if(error){return/*#__PURE__*/_jsxs(\"div\",{className:\"apply-job-page error\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Error\"}),/*#__PURE__*/_jsx(\"p\",{children:error}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>navigate(\"/jobs\"),children:\"Back to Jobs\"})]});}if(!jobDetails){return/*#__PURE__*/_jsx(\"div\",{className:\"apply-job-page loading\",children:\"Loading job details...\"});}return/*#__PURE__*/_jsxs(\"div\",{className:\"apply-job-page\",children:[/*#__PURE__*/_jsx(\"h2\",{children:jobDetails.job_title}),/*#__PURE__*/_jsxs(\"div\",{className:\"job-details\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Description:\"}),\" \",jobDetails.job_description]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Country:\"}),\" \",jobDetails.country]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Skills Required:\"}),\" \",jobDetails.skills_required]}),jobDetails.salary&&/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Salary:\"}),\" \",jobDetails.salary]}),jobDetails.working_hours&&/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Working Hours:\"}),\" \",jobDetails.working_hours]}),jobDetails.facilities&&/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Facilities:\"}),\" \",jobDetails.facilities]})]}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"file-upload\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"cv-upload\",children:\"Upload CV (Required):\"}),/*#__PURE__*/_jsx(\"input\",{id:\"cv-upload\",type:\"file\",accept:\".pdf,.docx,.doc\",onChange:handleCvChange,required:true}),cvFile&&/*#__PURE__*/_jsxs(\"p\",{className:\"file-name\",children:[\"Selected: \",cvFile.name]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"file-upload\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"cover-letter-upload\",children:\"Upload Cover Letter (Optional):\"}),/*#__PURE__*/_jsx(\"input\",{id:\"cover-letter-upload\",type:\"file\",accept:\".pdf,.docx,.doc\",onChange:handleCoverLetterChange}),coverLetterFile&&/*#__PURE__*/_jsxs(\"p\",{className:\"file-name\",children:[\"Selected: \",coverLetterFile.name]})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",disabled:loading,className:loading?\"loading\":\"\",children:loading?\"Submitting...\":\"Apply Now\"})]})]});};export default ApplyJobPage;","map":{"version":3,"names":["React","useEffect","useState","useParams","useNavigate","fetchJobDetails","useAuth","axios","jsx","_jsx","jsxs","_jsxs","ApplyJobPage","jobId","navigate","user","jobDetails","setJobDetails","cvFile","setCvFile","coverLetterFile","setCoverLetterFile","loading","setLoading","error","setError","role","alert","fetchJobData","response","err","handleCvChange","e","target","files","handleCoverLetterChange","handleSubmit","preventDefault","token","localStorage","getItem","Error","formData","FormData","append","post","headers","Authorization","concat","_err$response","_err$response$data","errorMessage","data","detail","message","className","children","onClick","job_title","job_description","country","skills_required","salary","working_hours","facilities","onSubmit","htmlFor","id","type","accept","onChange","required","name","disabled"],"sources":["C:/final_year_project/app/frontend/src/pages/ApplyJobPage.js"],"sourcesContent":["// import React, { useEffect, useState } from \"react\";\r\n// import { useParams, useNavigate } from \"react-router-dom\";\r\n// import { jwtDecode } from \"jwt-decode\";\r\n// import axios from \"axios\"; \r\n// import '../styles/ApplyJobPage.css';\r\n\r\n// const ApplyJobPage = () => {\r\n//   const { jobId } = useParams();\r\n//   const navigate = useNavigate();\r\n//   const [jobDetails, setJobDetails] = useState(null);\r\n//   const [cvFile, setCvFile] = useState(null);\r\n//   const [coverLetterFile, setCoverLetterFile] = useState(null);\r\n//   const [loading, setLoading] = useState(false);\r\n//   const [error, setError] = useState(null);\r\n\r\n//   useEffect(() => {\r\n//     // Fetch job details when component mounts\r\n//     const fetchJobDetails = async () => {\r\n//       try {\r\n//         const response = await axios.get(`http://127.0.0.1:8000/api/jobs/${jobId}`, {\r\n//           headers: {\r\n//             Authorization: `Bearer ${localStorage.getItem('token')}`\r\n//           }\r\n//         });\r\n//         setJobDetails(response.data);\r\n//       } catch (err) {\r\n//         setError(\"Failed to load job details. Please try again later.\");\r\n//       }\r\n//     };\r\n\r\n//     fetchJobDetails();\r\n//   }, [jobId]);\r\n\r\n//   // Handle file selection for CV\r\n//   const handleCvChange = (e) => {\r\n//     if (e.target.files && e.target.files[0]) {\r\n//       setCvFile(e.target.files[0]);\r\n//     }\r\n//   };\r\n\r\n//   // Handle file selection for Cover Letter\r\n//   const handleCoverLetterChange = (e) => {\r\n//     if (e.target.files && e.target.files[0]) {\r\n//       setCoverLetterFile(e.target.files[0]);\r\n//     }\r\n//   };\r\n\r\n//   // Handle form submission\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n    \r\n//     if (!cvFile) {\r\n//       alert(\"Please upload your CV before applying.\");\r\n//       return;\r\n//     }\r\n\r\n//     setLoading(true);\r\n//     setError(null);\r\n\r\n//     try {\r\n//       // Get token and decode user info\r\n//       const token = localStorage.getItem('token');\r\n//       if (!token) {\r\n//         throw new Error(\"You must be logged in to apply for jobs\");\r\n//       }\r\n      \r\n//       const decoded = jwtDecode(token);\r\n//       const userId = decoded.user_id;\r\n      \r\n//       // Create a FormData object\r\n//       const formData = new FormData();\r\n//       formData.append(\"user_id\", userId);\r\n//       formData.append(\"job_id\", jobId);\r\n//       formData.append(\"cv\", cvFile);\r\n      \r\n//       if (coverLetterFile) {\r\n//         formData.append(\"cover_letter\", coverLetterFile);\r\n//       }\r\n      \r\n//       // Make the API request\r\n//       await axios.post(\r\n//         \"http://127.0.0.1:8000/api/apply-job/\", \r\n//         formData,\r\n//         {\r\n//           headers: {\r\n//             Authorization: `Bearer ${token}`\r\n//           }\r\n//         }\r\n//       );\r\n      \r\n//       alert(\"Application submitted successfully!\");\r\n//       navigate(\"/applied-jobs\");\r\n      \r\n//     } catch (err) {\r\n//       const errorMessage = err.response?.data?.detail || \r\n//                           err.message || \r\n//                           \"Failed to submit application. Please try again.\";\r\n      \r\n//       setError(errorMessage);\r\n//       alert(`Error: ${errorMessage}`);\r\n//     } finally {\r\n//       setLoading(false);\r\n//     }\r\n//   };\r\n\r\n//   if (error) {\r\n//     return (\r\n//       <div className=\"apply-job-page error\">\r\n//         <h2>Error</h2>\r\n//         <p>{error}</p>\r\n//         <button onClick={() => navigate(\"/jobs\")}>Back to Jobs</button>\r\n//       </div>\r\n//     );\r\n//   }\r\n\r\n//   if (!jobDetails) {\r\n//     return <div className=\"apply-job-page loading\">Loading job details...</div>;\r\n//   }\r\n\r\n//   return (\r\n//     <div className=\"apply-job-page\">\r\n//       <h2>{jobDetails.job_title}</h2>\r\n      \r\n//       <div className=\"job-details\">\r\n//         <p><strong>Description:</strong> {jobDetails.job_description}</p>\r\n//         <p><strong>Country:</strong> {jobDetails.country}</p>\r\n//         <p><strong>Skills Required:</strong> {jobDetails.skills_required}</p>\r\n//         {jobDetails.salary && <p><strong>Salary:</strong> {jobDetails.salary}</p>}\r\n//         {jobDetails.working_hours && <p><strong>Working Hours:</strong> {jobDetails.working_hours}</p>}\r\n//         {jobDetails.facilities && <p><strong>Facilities:</strong> {jobDetails.facilities}</p>}\r\n//       </div>\r\n\r\n//       <form onSubmit={handleSubmit}>\r\n//         <div className=\"file-upload\">\r\n//           <label htmlFor=\"cv-upload\">Upload CV (Required):</label>\r\n//           <input \r\n//             id=\"cv-upload\"\r\n//             type=\"file\" \r\n//             accept=\".pdf,.docx,.doc\" \r\n//             onChange={handleCvChange}\r\n//             required\r\n//           />\r\n//           {cvFile && <p className=\"file-name\">Selected: {cvFile.name}</p>}\r\n//         </div>\r\n\r\n//         <div className=\"file-upload\">\r\n//           <label htmlFor=\"cover-letter-upload\">Upload Cover Letter (Optional):</label>\r\n//           <input \r\n//             id=\"cover-letter-upload\"\r\n//             type=\"file\" \r\n//             accept=\".pdf,.docx,.doc\" \r\n//             onChange={handleCoverLetterChange}\r\n//           />\r\n//           {coverLetterFile && <p className=\"file-name\">Selected: {coverLetterFile.name}</p>}\r\n//         </div>\r\n\r\n//         <button \r\n//           type=\"submit\" \r\n//           disabled={loading}\r\n//           className={loading ? \"loading\" : \"\"}\r\n//         >\r\n//           {loading ? \"Submitting...\" : \"Apply Now\"}\r\n//         </button>\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default ApplyJobPage;\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport { fetchJobDetails } from \"../services/api\";\r\nimport { useAuth } from \"../context/AuthContext\";\r\nimport axios from \"axios\"; \r\nimport '../styles/ApplyJobPage.css';\r\n\r\nconst ApplyJobPage = () => {\r\n  const { jobId } = useParams();\r\n  const navigate = useNavigate();\r\n  const { user } = useAuth();\r\n  const [jobDetails, setJobDetails] = useState(null);\r\n  const [cvFile, setCvFile] = useState(null);\r\n  const [coverLetterFile, setCoverLetterFile] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Check if user is logged in and is a job seeker\r\n    if (!user || user.role !== \"job_seeker\") {\r\n      alert(\"You must be logged in as a job seeker to apply for jobs.\");\r\n      navigate(\"/login\");\r\n      return;\r\n    }\r\n\r\n    // Fetch job details when component mounts\r\n    const fetchJobData = async () => {\r\n      try {\r\n        const response = await fetchJobDetails(jobId);\r\n        setJobDetails(response);\r\n      } catch (err) {\r\n        setError(\"Failed to load job details. Please try again later.\");\r\n      }\r\n    };\r\n\r\n    fetchJobData();\r\n  }, [jobId, navigate, user]);\r\n\r\n  // Handle file selection for CV\r\n  const handleCvChange = (e) => {\r\n    if (e.target.files && e.target.files[0]) {\r\n      setCvFile(e.target.files[0]);\r\n    }\r\n  };\r\n\r\n  // Handle file selection for Cover Letter\r\n  const handleCoverLetterChange = (e) => {\r\n    if (e.target.files && e.target.files[0]) {\r\n      setCoverLetterFile(e.target.files[0]);\r\n    }\r\n  };\r\n\r\n  // Handle form submission\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    if (!cvFile) {\r\n      alert(\"Please upload your CV before applying.\");\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    setError(null);\r\n\r\n    try {\r\n      // Get token\r\n      const token = localStorage.getItem('token');\r\n      if (!token) {\r\n        throw new Error(\"You must be logged in to apply for jobs\");\r\n      }\r\n      \r\n      // Create a FormData object\r\n      const formData = new FormData();\r\n      formData.append(\"job_id\", jobId);\r\n      formData.append(\"cv\", cvFile);\r\n      \r\n      if (coverLetterFile) {\r\n        formData.append(\"cover_letter\", coverLetterFile);\r\n      }\r\n      \r\n      // Make the API request\r\n      await axios.post(\r\n        \"http://127.0.0.1:8000/api/apply-job/\", \r\n        formData,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`\r\n          }\r\n        }\r\n      );\r\n      \r\n      alert(\"Application submitted successfully!\");\r\n      navigate(\"/applied-jobs\");\r\n      \r\n    } catch (err) {\r\n      const errorMessage = err.response?.data?.detail || \r\n                          err.message || \r\n                          \"Failed to submit application. Please try again.\";\r\n      \r\n      setError(errorMessage);\r\n      alert(`Error: ${errorMessage}`);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"apply-job-page error\">\r\n        <h2>Error</h2>\r\n        <p>{error}</p>\r\n        <button onClick={() => navigate(\"/jobs\")}>Back to Jobs</button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!jobDetails) {\r\n    return <div className=\"apply-job-page loading\">Loading job details...</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"apply-job-page\">\r\n      <h2>{jobDetails.job_title}</h2>\r\n      \r\n      <div className=\"job-details\">\r\n        <p><strong>Description:</strong> {jobDetails.job_description}</p>\r\n        <p><strong>Country:</strong> {jobDetails.country}</p>\r\n        <p><strong>Skills Required:</strong> {jobDetails.skills_required}</p>\r\n        {jobDetails.salary && <p><strong>Salary:</strong> {jobDetails.salary}</p>}\r\n        {jobDetails.working_hours && <p><strong>Working Hours:</strong> {jobDetails.working_hours}</p>}\r\n        {jobDetails.facilities && <p><strong>Facilities:</strong> {jobDetails.facilities}</p>}\r\n      </div>\r\n\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"file-upload\">\r\n          <label htmlFor=\"cv-upload\">Upload CV (Required):</label>\r\n          <input \r\n            id=\"cv-upload\"\r\n            type=\"file\" \r\n            accept=\".pdf,.docx,.doc\" \r\n            onChange={handleCvChange}\r\n            required\r\n          />\r\n          {cvFile && <p className=\"file-name\">Selected: {cvFile.name}</p>}\r\n        </div>\r\n\r\n        <div className=\"file-upload\">\r\n          <label htmlFor=\"cover-letter-upload\">Upload Cover Letter (Optional):</label>\r\n          <input \r\n            id=\"cover-letter-upload\"\r\n            type=\"file\" \r\n            accept=\".pdf,.docx,.doc\" \r\n            onChange={handleCoverLetterChange}\r\n          />\r\n          {coverLetterFile && <p className=\"file-name\">Selected: {coverLetterFile.name}</p>}\r\n        </div>\r\n\r\n        <button \r\n          type=\"submit\" \r\n          disabled={loading}\r\n          className={loading ? \"loading\" : \"\"}\r\n        >\r\n          {loading ? \"Submitting...\" : \"Apply Now\"}\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ApplyJobPage;"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}