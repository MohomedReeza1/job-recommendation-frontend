{"ast":null,"code":"var _jsxFileName = \"C:\\\\final_year_project\\\\app\\\\frontend\\\\src\\\\pages\\\\AppliedJobsPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { api } from \"../services/api\";\nimport { useAuth } from \"../context/AuthContext\";\nimport '../styles/ApplyJobPages.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AppliedJobsPage = () => {\n  _s();\n  const auth = useAuth();\n  const [appliedJobs, setAppliedJobs] = useState([]);\n  const {\n    user\n  } = auth || {};\n  const seekerId = user === null || user === void 0 ? void 0 : user.seeker_id;\n  useEffect(() => {\n    const fetchAppliedJobs = async () => {\n      if (!seekerId) return;\n      try {\n        const response = await api.get(`/applied-jobs/${seekerId}`);\n        setAppliedJobs(response.data);\n      } catch (error) {\n        console.error(\"Error fetching applied jobs:\", error);\n      }\n    };\n    fetchAppliedJobs();\n  }, [seekerId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"applied-jobs-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Applied Jobs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: appliedJobs.map(job => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: job.job_title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: job.country\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Applied on: \", new Date(job.applied_at).toLocaleDateString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this), job.cv_filename && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: `/uploads/${job.cv_filename}`,\n            download: true,\n            children: \"Download CV\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 33\n        }, this), job.cover_letter_filename && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: `/uploads/${job.cover_letter_filename}`,\n            download: true,\n            children: \"Download Cover Letter\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 46\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 43\n        }, this)]\n      }, job.job_id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(AppliedJobsPage, \"0omB+dp2JX2UZjI4Vypx9R/K5SM=\", false, function () {\n  return [useAuth];\n});\n_c = AppliedJobsPage;\nexport default AppliedJobsPage;\nvar _c;\n$RefreshReg$(_c, \"AppliedJobsPage\");","map":{"version":3,"names":["React","useEffect","useState","api","useAuth","jsxDEV","_jsxDEV","AppliedJobsPage","_s","auth","appliedJobs","setAppliedJobs","user","seekerId","seeker_id","fetchAppliedJobs","response","get","data","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","job","job_title","country","Date","applied_at","toLocaleDateString","cv_filename","href","download","cover_letter_filename","job_id","_c","$RefreshReg$"],"sources":["C:/final_year_project/app/frontend/src/pages/AppliedJobsPage.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { api } from \"../services/api\";\r\nimport { useAuth } from \"../context/AuthContext\";\r\nimport '../styles/ApplyJobPages.css';\r\n\r\nconst AppliedJobsPage = () => {\r\n  const auth = useAuth();\r\n  const [appliedJobs, setAppliedJobs] = useState([]);\r\n  const { user } = auth || {};\r\n  const seekerId = user?.seeker_id;\r\n\r\n  useEffect(() => {\r\n    const fetchAppliedJobs = async () => {\r\n      if (!seekerId) return;\r\n      try {\r\n        const response = await api.get(`/applied-jobs/${seekerId}`);\r\n        setAppliedJobs(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching applied jobs:\", error);\r\n      }\r\n    };\r\n    fetchAppliedJobs();\r\n  }, [seekerId]);\r\n\r\n  return (\r\n    <div className=\"applied-jobs-page\">\r\n      <h2>Applied Jobs</h2>\r\n      <ul>\r\n        {appliedJobs.map((job) => (\r\n          <li key={job.job_id}>\r\n            <h3>{job.job_title}</h3>\r\n            <p>{job.country}</p>\r\n            <p>Applied on: {new Date(job.applied_at).toLocaleDateString()}</p>\r\n            {job.cv_filename && <p><a href={`/uploads/${job.cv_filename}`} download>Download CV</a></p>}\r\n            {job.cover_letter_filename && <p><a href={`/uploads/${job.cover_letter_filename}`} download>Download Cover Letter</a></p>}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AppliedJobsPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}