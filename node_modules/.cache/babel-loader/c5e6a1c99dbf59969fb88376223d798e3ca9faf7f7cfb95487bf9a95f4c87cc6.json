{"ast":null,"code":"var _jsxFileName = \"C:\\\\final_year_project\\\\app\\\\frontend\\\\src\\\\pages\\\\JobSeekerLogin.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from \"react\";\n// import { api } from \"../services/api\";\n// import { useNavigate } from \"react-router-dom\";\n// import \"../styles/JobSeekerLogin.css\";\n// import { useAuth } from \"../context/AuthContext\"; \n\n// const JobSeekerLogin = () => {\n//   const { login } = useAuth();\n//   const navigate = useNavigate();\n//   const [formData, setFormData] = useState({\n//     email: \"\",\n//     password: \"\",\n//   });\n\n//   const handleChange = (e) => {\n//     const { name, value } = e.target;\n//     setFormData({ ...formData, [name]: value });\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     try {\n//       const response = await api.post(\"/auth/login\", new URLSearchParams({\n//         username: formData.email,\n//         password: formData.password,\n//       }),\n//       {\n//         headers: {\n//           \"Content-Type\": \"application/x-www-form-urlencoded\"\n//         }\n//       }\n//     );\n//       const userData = {\n//         email: formData.email,\n//         role: response.data.role,\n//         token: response.data.access_token\n//       };\n\n//       if (userData.role !== \"job_seeker\") {\n//         alert(\"You are trying to log in as a job seeker with an employer account.\");\n//         return;\n//       }\n\n//       login(userData);\n\n//       alert(\"Login successful!\");\n//       navigate(\"/jobs\");\n//     } catch (error) {\n//       console.error(\"Login error:\", error);\n//       alert(error.response?.data?.detail || \"Invalid email or password.\");\n//     }\n//   };\n\n//   return (\n//     <div className=\"login-container\">\n//       <h2>Job Seeker Login</h2>\n//       <form onSubmit={handleSubmit}>\n//         <input\n//           type=\"email\"\n//           name=\"email\"\n//           placeholder=\"Email\"\n//           value={formData.email}\n//           onChange={handleChange}\n//           required\n//         />\n//         <input\n//           type=\"password\"\n//           name=\"password\"\n//           placeholder=\"Password\"\n//           value={formData.password}\n//           onChange={handleChange}\n//           required\n//         />\n//         <button type=\"submit\">Login</button>\n//       </form>\n//       <p>Don't have an account? <a href=\"/signup\">Sign up here</a></p>\n//     </div>\n//   );\n// };\n\n// export default JobSeekerLogin;\n\nimport { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { loginJobSeeker } from \"../api\";\nimport { useAuth } from \"../context/AuthContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst JobSeekerLogin = () => {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const {\n    login\n  } = useAuth();\n  const navigate = useNavigate();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await loginJobSeeker(email, password);\n      login(response.access_token, response.role);\n      navigate(\"/jobs\"); // ✅ Redirect Job Seekers to /jobs\n    } catch (error) {\n      var _error$response, _error$response$data;\n      alert(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.detail) || \"Login failed!\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Job Seeker Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      value: email,\n      onChange: e => setEmail(e.target.value),\n      placeholder: \"Email\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      value: password,\n      onChange: e => setPassword(e.target.value),\n      placeholder: \"Password\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n};\n_s(JobSeekerLogin, \"Mjp6Rmv4zAXxv4vXWAD/Uaro3sA=\", false, function () {\n  return [useAuth, useNavigate];\n});\n_c = JobSeekerLogin;\nexport default JobSeekerLogin;\nvar _c;\n$RefreshReg$(_c, \"JobSeekerLogin\");","map":{"version":3,"names":["useState","useNavigate","loginJobSeeker","useAuth","jsxDEV","_jsxDEV","JobSeekerLogin","_s","email","setEmail","password","setPassword","login","navigate","handleSubmit","e","preventDefault","response","access_token","role","error","_error$response","_error$response$data","alert","data","detail","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","target","placeholder","required","_c","$RefreshReg$"],"sources":["C:/final_year_project/app/frontend/src/pages/JobSeekerLogin.js"],"sourcesContent":["// import React, { useState } from \"react\";\r\n// import { api } from \"../services/api\";\r\n// import { useNavigate } from \"react-router-dom\";\r\n// import \"../styles/JobSeekerLogin.css\";\r\n// import { useAuth } from \"../context/AuthContext\"; \r\n\r\n// const JobSeekerLogin = () => {\r\n//   const { login } = useAuth();\r\n//   const navigate = useNavigate();\r\n//   const [formData, setFormData] = useState({\r\n//     email: \"\",\r\n//     password: \"\",\r\n//   });\r\n\r\n//   const handleChange = (e) => {\r\n//     const { name, value } = e.target;\r\n//     setFormData({ ...formData, [name]: value });\r\n//   };\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     try {\r\n//       const response = await api.post(\"/auth/login\", new URLSearchParams({\r\n//         username: formData.email,\r\n//         password: formData.password,\r\n//       }),\r\n//       {\r\n//         headers: {\r\n//           \"Content-Type\": \"application/x-www-form-urlencoded\"\r\n//         }\r\n//       }\r\n//     );\r\n//       const userData = {\r\n//         email: formData.email,\r\n//         role: response.data.role,\r\n//         token: response.data.access_token\r\n//       };\r\n\r\n//       if (userData.role !== \"job_seeker\") {\r\n//         alert(\"You are trying to log in as a job seeker with an employer account.\");\r\n//         return;\r\n//       }\r\n\r\n//       login(userData);\r\n\r\n//       alert(\"Login successful!\");\r\n//       navigate(\"/jobs\");\r\n//     } catch (error) {\r\n//       console.error(\"Login error:\", error);\r\n//       alert(error.response?.data?.detail || \"Invalid email or password.\");\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"login-container\">\r\n//       <h2>Job Seeker Login</h2>\r\n//       <form onSubmit={handleSubmit}>\r\n//         <input\r\n//           type=\"email\"\r\n//           name=\"email\"\r\n//           placeholder=\"Email\"\r\n//           value={formData.email}\r\n//           onChange={handleChange}\r\n//           required\r\n//         />\r\n//         <input\r\n//           type=\"password\"\r\n//           name=\"password\"\r\n//           placeholder=\"Password\"\r\n//           value={formData.password}\r\n//           onChange={handleChange}\r\n//           required\r\n//         />\r\n//         <button type=\"submit\">Login</button>\r\n//       </form>\r\n//       <p>Don't have an account? <a href=\"/signup\">Sign up here</a></p>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default JobSeekerLogin;\r\n\r\n\r\nimport { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { loginJobSeeker } from \"../api\";\r\nimport { useAuth } from \"../context/AuthContext\";\r\n\r\nconst JobSeekerLogin = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const { login } = useAuth();\r\n  const navigate = useNavigate();\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await loginJobSeeker(email, password);\r\n      login(response.access_token, response.role);\r\n      navigate(\"/jobs\"); // ✅ Redirect Job Seekers to /jobs\r\n    } catch (error) {\r\n      alert(error.response?.data?.detail || \"Login failed!\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <h2>Job Seeker Login</h2>\r\n      <input type=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} placeholder=\"Email\" required />\r\n      <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} placeholder=\"Password\" required />\r\n      <button type=\"submit\">Login</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default JobSeekerLogin;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}