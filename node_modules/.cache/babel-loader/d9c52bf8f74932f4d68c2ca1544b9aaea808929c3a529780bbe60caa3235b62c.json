{"ast":null,"code":"var _jsxFileName = \"C:\\\\final_year_project\\\\app\\\\frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { fetchJobSeekerProfile, fetchRecruiterProfile } from \"../services/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [userProfile, setUserProfile] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const navigate = useNavigate();\n\n  // Load user data from localStorage on initial load\n  useEffect(() => {\n    const loadUser = async () => {\n      setLoading(true);\n      const token = localStorage.getItem(\"token\");\n      const role = localStorage.getItem(\"role\");\n      const user_id = localStorage.getItem(\"user_id\");\n      const specific_id = localStorage.getItem(\"specific_id\");\n      if (token && role && user_id && specific_id) {\n        const userData = {\n          token,\n          role,\n          user_id,\n          specific_id\n        };\n        setUser(userData);\n\n        // Try to load the user profile\n        try {\n          if (role === \"job_seeker\") {\n            const profileData = await fetchJobSeekerProfile();\n            setUserProfile(profileData);\n          } else if (role === \"recruiter\") {\n            const profileData = await fetchRecruiterProfile();\n            setUserProfile(profileData);\n          }\n        } catch (error) {\n          console.error(\"Error loading profile:\", error);\n        }\n      }\n      setLoading(false);\n    };\n    loadUser();\n  }, []);\n  const login = async userData => {\n    try {\n      if (!userData || !userData.token) {\n        throw new Error(\"Invalid login data received\");\n      }\n\n      // Store user details in localStorage\n      localStorage.setItem(\"token\", userData.token);\n      localStorage.setItem(\"role\", userData.role);\n      localStorage.setItem(\"user_id\", userData.user_id);\n      localStorage.setItem(\"specific_id\", userData.specific_id);\n      setUser(userData);\n\n      // Try to load the user profile\n      try {\n        if (userData.role === \"job_seeker\") {\n          const profileData = await fetchJobSeekerProfile();\n          setUserProfile(profileData);\n        } else if (userData.role === \"recruiter\") {\n          const profileData = await fetchRecruiterProfile();\n          setUserProfile(profileData);\n        }\n      } catch (error) {\n        console.error(\"Error loading profile after login:\", error);\n      }\n\n      // Redirect after login based on role\n      if (userData.role === \"job_seeker\") {\n        navigate(\"/jobs\");\n      } else if (userData.role === \"recruiter\") {\n        navigate(\"/my-posted-jobs\");\n      }\n    } catch (error) {\n      console.error(\"Login failed:\", error);\n      alert(\"Login failed. Please try again.\");\n    }\n  };\n  const logout = () => {\n    localStorage.clear();\n    setUser(null);\n    setUserProfile(null);\n    navigate(\"/login\");\n  };\n  const updateProfile = newProfileData => {\n    setUserProfile(newProfileData);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      userProfile,\n      login,\n      logout,\n      updateProfile,\n      loading\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthProvider, \"DO/VNXK7kZ3M5d1rBq0tV3nwlKM=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useContext","useState","useEffect","useNavigate","fetchJobSeekerProfile","fetchRecruiterProfile","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","userProfile","setUserProfile","loading","setLoading","navigate","loadUser","token","localStorage","getItem","role","user_id","specific_id","userData","profileData","error","console","login","Error","setItem","alert","logout","clear","updateProfile","newProfileData","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["C:/final_year_project/app/frontend/src/context/AuthContext.js"],"sourcesContent":["import { createContext, useContext, useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { fetchJobSeekerProfile, fetchRecruiterProfile } from \"../services/api\";\r\n\r\nexport const AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n    const [user, setUser] = useState(null);\r\n    const [userProfile, setUserProfile] = useState(null);\r\n    const [loading, setLoading] = useState(true);\r\n    const navigate = useNavigate();\r\n\r\n    // Load user data from localStorage on initial load\r\n    useEffect(() => {\r\n        const loadUser = async () => {\r\n            setLoading(true);\r\n            const token = localStorage.getItem(\"token\");\r\n            const role = localStorage.getItem(\"role\");\r\n            const user_id = localStorage.getItem(\"user_id\");\r\n            const specific_id = localStorage.getItem(\"specific_id\");\r\n\r\n            if (token && role && user_id && specific_id) {\r\n                const userData = { token, role, user_id, specific_id };\r\n                setUser(userData);\r\n                \r\n                // Try to load the user profile\r\n                try {\r\n                    if (role === \"job_seeker\") {\r\n                        const profileData = await fetchJobSeekerProfile();\r\n                        setUserProfile(profileData);\r\n                    } else if (role === \"recruiter\") {\r\n                        const profileData = await fetchRecruiterProfile();\r\n                        setUserProfile(profileData);\r\n                    }\r\n                } catch (error) {\r\n                    console.error(\"Error loading profile:\", error);\r\n                }\r\n            }\r\n            setLoading(false);\r\n        };\r\n\r\n        loadUser();\r\n    }, []);\r\n\r\n    const login = async (userData) => {\r\n        try {\r\n            if (!userData || !userData.token) {\r\n                throw new Error(\"Invalid login data received\");\r\n            }\r\n\r\n            // Store user details in localStorage\r\n            localStorage.setItem(\"token\", userData.token);\r\n            localStorage.setItem(\"role\", userData.role);\r\n            localStorage.setItem(\"user_id\", userData.user_id);\r\n            localStorage.setItem(\"specific_id\", userData.specific_id);\r\n\r\n            setUser(userData);\r\n\r\n            // Try to load the user profile\r\n            try {\r\n                if (userData.role === \"job_seeker\") {\r\n                    const profileData = await fetchJobSeekerProfile();\r\n                    setUserProfile(profileData);\r\n                } else if (userData.role === \"recruiter\") {\r\n                    const profileData = await fetchRecruiterProfile();\r\n                    setUserProfile(profileData);\r\n                }\r\n            } catch (error) {\r\n                console.error(\"Error loading profile after login:\", error);\r\n            }\r\n\r\n            // Redirect after login based on role\r\n            if (userData.role === \"job_seeker\") {\r\n                navigate(\"/jobs\");\r\n            } else if (userData.role === \"recruiter\") {\r\n                navigate(\"/my-posted-jobs\");\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Login failed:\", error);\r\n            alert(\"Login failed. Please try again.\");\r\n        }\r\n    };\r\n  \r\n    const logout = () => {\r\n        localStorage.clear();\r\n        setUser(null);\r\n        setUserProfile(null);\r\n        navigate(\"/login\");\r\n    };\r\n\r\n    const updateProfile = (newProfileData) => {\r\n        setUserProfile(newProfileData);\r\n    };\r\n\r\n    return (\r\n        <AuthContext.Provider value={{ \r\n            user, \r\n            userProfile, \r\n            login, \r\n            logout, \r\n            updateProfile, \r\n            loading \r\n        }}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    );\r\n};\r\n\r\nexport const useAuth = () => useContext(AuthContext);"],"mappings":";;;AAAA,SAASA,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AACtE,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,qBAAqB,EAAEC,qBAAqB,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/E,OAAO,MAAMC,WAAW,gBAAGT,aAAa,CAAC,CAAC;AAE1C,OAAO,MAAMU,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC1C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACa,WAAW,EAAEC,cAAc,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACe,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAMiB,QAAQ,GAAGf,WAAW,CAAC,CAAC;;EAE9B;EACAD,SAAS,CAAC,MAAM;IACZ,MAAMiB,QAAQ,GAAG,MAAAA,CAAA,KAAY;MACzBF,UAAU,CAAC,IAAI,CAAC;MAChB,MAAMG,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC3C,MAAMC,IAAI,GAAGF,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;MACzC,MAAME,OAAO,GAAGH,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC;MAC/C,MAAMG,WAAW,GAAGJ,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC;MAEvD,IAAIF,KAAK,IAAIG,IAAI,IAAIC,OAAO,IAAIC,WAAW,EAAE;QACzC,MAAMC,QAAQ,GAAG;UAAEN,KAAK;UAAEG,IAAI;UAAEC,OAAO;UAAEC;QAAY,CAAC;QACtDZ,OAAO,CAACa,QAAQ,CAAC;;QAEjB;QACA,IAAI;UACA,IAAIH,IAAI,KAAK,YAAY,EAAE;YACvB,MAAMI,WAAW,GAAG,MAAMvB,qBAAqB,CAAC,CAAC;YACjDW,cAAc,CAACY,WAAW,CAAC;UAC/B,CAAC,MAAM,IAAIJ,IAAI,KAAK,WAAW,EAAE;YAC7B,MAAMI,WAAW,GAAG,MAAMtB,qBAAqB,CAAC,CAAC;YACjDU,cAAc,CAACY,WAAW,CAAC;UAC/B;QACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;UACZC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;QAClD;MACJ;MACAX,UAAU,CAAC,KAAK,CAAC;IACrB,CAAC;IAEDE,QAAQ,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMW,KAAK,GAAG,MAAOJ,QAAQ,IAAK;IAC9B,IAAI;MACA,IAAI,CAACA,QAAQ,IAAI,CAACA,QAAQ,CAACN,KAAK,EAAE;QAC9B,MAAM,IAAIW,KAAK,CAAC,6BAA6B,CAAC;MAClD;;MAEA;MACAV,YAAY,CAACW,OAAO,CAAC,OAAO,EAAEN,QAAQ,CAACN,KAAK,CAAC;MAC7CC,YAAY,CAACW,OAAO,CAAC,MAAM,EAAEN,QAAQ,CAACH,IAAI,CAAC;MAC3CF,YAAY,CAACW,OAAO,CAAC,SAAS,EAAEN,QAAQ,CAACF,OAAO,CAAC;MACjDH,YAAY,CAACW,OAAO,CAAC,aAAa,EAAEN,QAAQ,CAACD,WAAW,CAAC;MAEzDZ,OAAO,CAACa,QAAQ,CAAC;;MAEjB;MACA,IAAI;QACA,IAAIA,QAAQ,CAACH,IAAI,KAAK,YAAY,EAAE;UAChC,MAAMI,WAAW,GAAG,MAAMvB,qBAAqB,CAAC,CAAC;UACjDW,cAAc,CAACY,WAAW,CAAC;QAC/B,CAAC,MAAM,IAAID,QAAQ,CAACH,IAAI,KAAK,WAAW,EAAE;UACtC,MAAMI,WAAW,GAAG,MAAMtB,qBAAqB,CAAC,CAAC;UACjDU,cAAc,CAACY,WAAW,CAAC;QAC/B;MACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,oCAAoC,EAAEA,KAAK,CAAC;MAC9D;;MAEA;MACA,IAAIF,QAAQ,CAACH,IAAI,KAAK,YAAY,EAAE;QAChCL,QAAQ,CAAC,OAAO,CAAC;MACrB,CAAC,MAAM,IAAIQ,QAAQ,CAACH,IAAI,KAAK,WAAW,EAAE;QACtCL,QAAQ,CAAC,iBAAiB,CAAC;MAC/B;IACJ,CAAC,CAAC,OAAOU,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC;MACrCK,KAAK,CAAC,iCAAiC,CAAC;IAC5C;EACJ,CAAC;EAED,MAAMC,MAAM,GAAGA,CAAA,KAAM;IACjBb,YAAY,CAACc,KAAK,CAAC,CAAC;IACpBtB,OAAO,CAAC,IAAI,CAAC;IACbE,cAAc,CAAC,IAAI,CAAC;IACpBG,QAAQ,CAAC,QAAQ,CAAC;EACtB,CAAC;EAED,MAAMkB,aAAa,GAAIC,cAAc,IAAK;IACtCtB,cAAc,CAACsB,cAAc,CAAC;EAClC,CAAC;EAED,oBACI9B,OAAA,CAACC,WAAW,CAAC8B,QAAQ;IAACC,KAAK,EAAE;MACzB3B,IAAI;MACJE,WAAW;MACXgB,KAAK;MACLI,MAAM;MACNE,aAAa;MACbpB;IACJ,CAAE;IAAAN,QAAA,EACGA;EAAQ;IAAA8B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAE/B,CAAC;AAAChC,EAAA,CApGWF,YAAY;EAAA,QAIJN,WAAW;AAAA;AAAAyC,EAAA,GAJnBnC,YAAY;AAsGzB,OAAO,MAAMoC,OAAO,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAM9C,UAAU,CAACQ,WAAW,CAAC;AAAA;AAACsC,GAAA,CAAxCD,OAAO;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}