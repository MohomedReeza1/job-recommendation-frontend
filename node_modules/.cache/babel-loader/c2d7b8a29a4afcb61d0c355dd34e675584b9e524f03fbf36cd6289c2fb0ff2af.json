{"ast":null,"code":"var _jsxFileName = \"C:\\\\final_year_project\\\\app\\\\frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// import { createContext, useContext, useState, useEffect } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n\n// export const AuthContext = createContext();\n\n// export const AuthProvider = ({ children }) => {\n//     const [user, setUser] = useState(null);\n//     const navigate = useNavigate(); // ✅ Use navigate inside the function\n\n//     useEffect(() => {\n//         const token = localStorage.getItem(\"token\");\n//         const role = localStorage.getItem(\"role\");\n//         const user_id = localStorage.getItem(\"user_id\");\n\n//         if (token && role) {\n//             setUser({ token, role, user_id });\n//         }\n//     }, []);\n\n//     const login = async (userData) => {\n//       try {\n//           if (!userData || !userData.token) {\n//               throw new Error(\"Invalid login data received\");\n//           }\n\n//           // Store user details in localStorage\n//           localStorage.setItem(\"token\", userData.token);\n//           localStorage.setItem(\"role\", userData.role);\n//           localStorage.setItem(\"user_id\", userData.user_id);\n\n//           setUser(userData);\n\n//           console.log(\"User logged in:\", userData); // Debugging log\n\n//           // Redirect after login based on role\n//           if (userData.role === \"job_seeker\") {\n//               navigate(\"/dashboard\");\n//           } else if (userData.role === \"recruiter\") {\n//               navigate(\"/my-posted-jobs\");\n//           }\n//       } catch (error) {\n//           console.error(\"Login failed:\", error);\n//           alert(\"Login failed. Please try again.\");\n//       }\n//     };\n\n//     const logout = () => {\n//         localStorage.clear();\n//         setUser(null);\n//         navigate(\"/login\");\n//     };\n\n//     useEffect(() => {\n//       console.log(\"Logged in user data:\", user); // Debugging line\n//     }, [user]);\n\n//     return (\n//         <AuthContext.Provider value={{ user, login, logout }}>\n//             {children}\n//         </AuthContext.Provider>\n//     );\n// };\n\n// export const useAuth = () => useContext(AuthContext);\n\nimport { createContext, useContext, useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const storedUser = JSON.parse(localStorage.getItem(\"user\"));\n    if (storedUser) {\n      setUser(storedUser);\n    }\n  }, []);\n  const login = async userData => {\n    if (!userData || !userData.token) {\n      throw new Error(\"Invalid login data\");\n    }\n    localStorage.setItem(\"user\", JSON.stringify(userData));\n    setUser(userData);\n\n    // ✅ Redirect user to the correct dashboard based on role\n    if (userData.role === \"job_seeker\") {\n      navigate(\"/dashboard\");\n    } else if (userData.role === \"recruiter\") {\n      navigate(\"/dashboard\");\n    } else {\n      navigate(\"/\");\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem(\"user\");\n    setUser(null);\n    navigate(\"/\");\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthProvider, \"/48TlfV0adSMEvsbW2gk5sMeopI=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useContext","useState","useEffect","useNavigate","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","navigate","storedUser","JSON","parse","localStorage","getItem","login","userData","token","Error","setItem","stringify","role","logout","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["C:/final_year_project/app/frontend/src/context/AuthContext.js"],"sourcesContent":["// import { createContext, useContext, useState, useEffect } from \"react\";\r\n// import { useNavigate } from \"react-router-dom\";\r\n\r\n// export const AuthContext = createContext();\r\n\r\n// export const AuthProvider = ({ children }) => {\r\n//     const [user, setUser] = useState(null);\r\n//     const navigate = useNavigate(); // ✅ Use navigate inside the function\r\n\r\n//     useEffect(() => {\r\n//         const token = localStorage.getItem(\"token\");\r\n//         const role = localStorage.getItem(\"role\");\r\n//         const user_id = localStorage.getItem(\"user_id\");\r\n\r\n//         if (token && role) {\r\n//             setUser({ token, role, user_id });\r\n//         }\r\n//     }, []);\r\n\r\n//     const login = async (userData) => {\r\n//       try {\r\n//           if (!userData || !userData.token) {\r\n//               throw new Error(\"Invalid login data received\");\r\n//           }\r\n\r\n//           // Store user details in localStorage\r\n//           localStorage.setItem(\"token\", userData.token);\r\n//           localStorage.setItem(\"role\", userData.role);\r\n//           localStorage.setItem(\"user_id\", userData.user_id);\r\n\r\n//           setUser(userData);\r\n\r\n//           console.log(\"User logged in:\", userData); // Debugging log\r\n\r\n//           // Redirect after login based on role\r\n//           if (userData.role === \"job_seeker\") {\r\n//               navigate(\"/dashboard\");\r\n//           } else if (userData.role === \"recruiter\") {\r\n//               navigate(\"/my-posted-jobs\");\r\n//           }\r\n//       } catch (error) {\r\n//           console.error(\"Login failed:\", error);\r\n//           alert(\"Login failed. Please try again.\");\r\n//       }\r\n//     };\r\n  \r\n//     const logout = () => {\r\n//         localStorage.clear();\r\n//         setUser(null);\r\n//         navigate(\"/login\");\r\n//     };\r\n\r\n//     useEffect(() => {\r\n//       console.log(\"Logged in user data:\", user); // Debugging line\r\n//     }, [user]);\r\n\r\n//     return (\r\n//         <AuthContext.Provider value={{ user, login, logout }}>\r\n//             {children}\r\n//         </AuthContext.Provider>\r\n//     );\r\n// };\r\n\r\n// export const useAuth = () => useContext(AuthContext);\r\n\r\nimport { createContext, useContext, useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nexport const AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n    const [user, setUser] = useState(null);\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        const storedUser = JSON.parse(localStorage.getItem(\"user\"));\r\n        if (storedUser) {\r\n            setUser(storedUser);\r\n        }\r\n    }, []);\r\n\r\n    const login = async (userData) => {\r\n        if (!userData || !userData.token) {\r\n            throw new Error(\"Invalid login data\");\r\n        }\r\n\r\n        localStorage.setItem(\"user\", JSON.stringify(userData));\r\n        setUser(userData);\r\n\r\n        // ✅ Redirect user to the correct dashboard based on role\r\n        if (userData.role === \"job_seeker\") {\r\n            navigate(\"/dashboard\");\r\n        } else if (userData.role === \"recruiter\") {\r\n            navigate(\"/dashboard\");\r\n        } else {\r\n            navigate(\"/\");\r\n        }\r\n    };\r\n\r\n    const logout = () => {\r\n        localStorage.removeItem(\"user\");\r\n        setUser(null);\r\n        navigate(\"/\");\r\n    };\r\n\r\n    return (\r\n        <AuthContext.Provider value={{ user, login, logout }}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    );\r\n};\r\n\r\nexport const useAuth = () => useContext(AuthContext);\r\n"],"mappings":";;;AAAA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,SAASA,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AACtE,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,OAAO,MAAMC,WAAW,gBAAGP,aAAa,CAAC,CAAC;AAE1C,OAAO,MAAMQ,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC1C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAMW,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAE9BD,SAAS,CAAC,MAAM;IACZ,MAAMW,UAAU,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC;IAC3D,IAAIJ,UAAU,EAAE;MACZF,OAAO,CAACE,UAAU,CAAC;IACvB;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMK,KAAK,GAAG,MAAOC,QAAQ,IAAK;IAC9B,IAAI,CAACA,QAAQ,IAAI,CAACA,QAAQ,CAACC,KAAK,EAAE;MAC9B,MAAM,IAAIC,KAAK,CAAC,oBAAoB,CAAC;IACzC;IAEAL,YAAY,CAACM,OAAO,CAAC,MAAM,EAAER,IAAI,CAACS,SAAS,CAACJ,QAAQ,CAAC,CAAC;IACtDR,OAAO,CAACQ,QAAQ,CAAC;;IAEjB;IACA,IAAIA,QAAQ,CAACK,IAAI,KAAK,YAAY,EAAE;MAChCZ,QAAQ,CAAC,YAAY,CAAC;IAC1B,CAAC,MAAM,IAAIO,QAAQ,CAACK,IAAI,KAAK,WAAW,EAAE;MACtCZ,QAAQ,CAAC,YAAY,CAAC;IAC1B,CAAC,MAAM;MACHA,QAAQ,CAAC,GAAG,CAAC;IACjB;EACJ,CAAC;EAED,MAAMa,MAAM,GAAGA,CAAA,KAAM;IACjBT,YAAY,CAACU,UAAU,CAAC,MAAM,CAAC;IAC/Bf,OAAO,CAAC,IAAI,CAAC;IACbC,QAAQ,CAAC,GAAG,CAAC;EACjB,CAAC;EAED,oBACIP,OAAA,CAACC,WAAW,CAACqB,QAAQ;IAACC,KAAK,EAAE;MAAElB,IAAI;MAAEQ,KAAK;MAAEO;IAAO,CAAE;IAAAjB,QAAA,EAChDA;EAAQ;IAAAqB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAE/B,CAAC;AAACvB,EAAA,CAxCWF,YAAY;EAAA,QAEJJ,WAAW;AAAA;AAAA8B,EAAA,GAFnB1B,YAAY;AA0CzB,OAAO,MAAM2B,OAAO,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAMnC,UAAU,CAACM,WAAW,CAAC;AAAA;AAAC6B,GAAA,CAAxCD,OAAO;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}