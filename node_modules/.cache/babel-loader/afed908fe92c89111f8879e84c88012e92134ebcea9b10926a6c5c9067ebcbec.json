{"ast":null,"code":"var _jsxFileName = \"C:\\\\final_year_project\\\\app\\\\frontend\\\\src\\\\pages\\\\JobSeekerLogin.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from \"react\";\n// import { api } from \"../services/api\";\n// import { useNavigate } from \"react-router-dom\";\n// import \"../styles/JobSeekerLogin.css\";\n// import { useAuth } from \"../context/AuthContext\"; \n\n// const JobSeekerLogin = () => {\n//   const { login } = useAuth();\n//   const navigate = useNavigate();\n//   const [formData, setFormData] = useState({\n//     email: \"\",\n//     password: \"\",\n//   });\n\n//   const handleChange = (e) => {\n//     const { name, value } = e.target;\n//     setFormData({ ...formData, [name]: value });\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     try {\n//       const response = await api.post(\"/auth/login\", new URLSearchParams({\n//         username: formData.email,\n//         password: formData.password,\n//       }),\n//       {\n//         headers: {\n//           \"Content-Type\": \"application/x-www-form-urlencoded\"\n//         }\n//       }\n//     );\n//       const userData = {\n//         email: formData.email,\n//         role: response.data.role,\n//         token: response.data.access_token\n//       };\n\n//       if (userData.role !== \"job_seeker\") {\n//         alert(\"You are trying to log in as a job seeker with an employer account.\");\n//         return;\n//       }\n\n//       login(userData);\n\n//       alert(\"Login successful!\");\n//       navigate(\"/jobs\");\n//     } catch (error) {\n//       console.error(\"Login error:\", error);\n//       alert(error.response?.data?.detail || \"Invalid email or password.\");\n//     }\n//   };\n\n//   return (\n//     <div className=\"login-container\">\n//       <h2>Job Seeker Login</h2>\n//       <form onSubmit={handleSubmit}>\n//         <input\n//           type=\"email\"\n//           name=\"email\"\n//           placeholder=\"Email\"\n//           value={formData.email}\n//           onChange={handleChange}\n//           required\n//         />\n//         <input\n//           type=\"password\"\n//           name=\"password\"\n//           placeholder=\"Password\"\n//           value={formData.password}\n//           onChange={handleChange}\n//           required\n//         />\n//         <button type=\"submit\">Login</button>\n//       </form>\n//       <p>Don't have an account? <a href=\"/signup\">Sign up here</a></p>\n//     </div>\n//   );\n// };\n\n// export default JobSeekerLogin;\n\nimport React, { useState } from \"react\";\nimport { loginJobSeeker } from \"../services/api\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useAuth } from \"../context/AuthContext\";\nimport \"../styles/JobSeekerLogin.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst JobSeekerLogin = () => {\n  _s();\n  const {\n    login\n  } = useAuth();\n  const navigate = useNavigate();\n  const [formData, setFormData] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await loginJobSeeker(formData.email, formData.password);\n      const userData = {\n        email: formData.email,\n        role: response.role,\n        token: response.access_token\n      };\n      if (userData.role !== \"job_seeker\") {\n        alert(\"You are trying to log in as a job seeker with an employer account.\");\n        return;\n      }\n      login(userData);\n      alert(\"Login successful!\");\n      navigate(\"/jobs\");\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error(\"Login error:\", error);\n      alert(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.detail) || \"Invalid email or password.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Employer Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        name: \"email\",\n        placeholder: \"Work Email\",\n        value: formData.email,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        placeholder: \"Password\",\n        value: formData.password,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Don't have an account? \", /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"/employer-signup\",\n        children: \"Sign up here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 5\n  }, this);\n};\n_s(JobSeekerLogin, \"7b79Cc4VZCpZNDfIjxtO767fDdU=\", false, function () {\n  return [useAuth, useNavigate];\n});\n_c = JobSeekerLogin;\nexport default EmployerLogin;\nvar _c;\n$RefreshReg$(_c, \"JobSeekerLogin\");","map":{"version":3,"names":["React","useState","loginJobSeeker","useNavigate","useAuth","jsxDEV","_jsxDEV","JobSeekerLogin","_s","login","navigate","formData","setFormData","email","password","handleChange","e","name","value","target","handleSubmit","preventDefault","response","userData","role","token","access_token","alert","error","_error$response","_error$response$data","console","data","detail","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","onChange","required","href","_c","EmployerLogin","$RefreshReg$"],"sources":["C:/final_year_project/app/frontend/src/pages/JobSeekerLogin.js"],"sourcesContent":["// import React, { useState } from \"react\";\r\n// import { api } from \"../services/api\";\r\n// import { useNavigate } from \"react-router-dom\";\r\n// import \"../styles/JobSeekerLogin.css\";\r\n// import { useAuth } from \"../context/AuthContext\"; \r\n\r\n// const JobSeekerLogin = () => {\r\n//   const { login } = useAuth();\r\n//   const navigate = useNavigate();\r\n//   const [formData, setFormData] = useState({\r\n//     email: \"\",\r\n//     password: \"\",\r\n//   });\r\n\r\n//   const handleChange = (e) => {\r\n//     const { name, value } = e.target;\r\n//     setFormData({ ...formData, [name]: value });\r\n//   };\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     try {\r\n//       const response = await api.post(\"/auth/login\", new URLSearchParams({\r\n//         username: formData.email,\r\n//         password: formData.password,\r\n//       }),\r\n//       {\r\n//         headers: {\r\n//           \"Content-Type\": \"application/x-www-form-urlencoded\"\r\n//         }\r\n//       }\r\n//     );\r\n//       const userData = {\r\n//         email: formData.email,\r\n//         role: response.data.role,\r\n//         token: response.data.access_token\r\n//       };\r\n\r\n//       if (userData.role !== \"job_seeker\") {\r\n//         alert(\"You are trying to log in as a job seeker with an employer account.\");\r\n//         return;\r\n//       }\r\n\r\n//       login(userData);\r\n\r\n//       alert(\"Login successful!\");\r\n//       navigate(\"/jobs\");\r\n//     } catch (error) {\r\n//       console.error(\"Login error:\", error);\r\n//       alert(error.response?.data?.detail || \"Invalid email or password.\");\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"login-container\">\r\n//       <h2>Job Seeker Login</h2>\r\n//       <form onSubmit={handleSubmit}>\r\n//         <input\r\n//           type=\"email\"\r\n//           name=\"email\"\r\n//           placeholder=\"Email\"\r\n//           value={formData.email}\r\n//           onChange={handleChange}\r\n//           required\r\n//         />\r\n//         <input\r\n//           type=\"password\"\r\n//           name=\"password\"\r\n//           placeholder=\"Password\"\r\n//           value={formData.password}\r\n//           onChange={handleChange}\r\n//           required\r\n//         />\r\n//         <button type=\"submit\">Login</button>\r\n//       </form>\r\n//       <p>Don't have an account? <a href=\"/signup\">Sign up here</a></p>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default JobSeekerLogin;\r\n\r\n\r\nimport React, { useState } from \"react\";\r\nimport { loginJobSeeker } from \"../services/api\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useAuth } from \"../context/AuthContext\";\r\nimport \"../styles/JobSeekerLogin.css\";\r\n\r\nconst JobSeekerLogin = () => {\r\n  const { login } = useAuth();\r\n  const navigate = useNavigate();\r\n  const [formData, setFormData] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({ ...formData, [name]: value });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await loginJobSeeker(formData.email, formData.password);\r\n      const userData = {\r\n        email: formData.email,\r\n        role: response.role,\r\n        token: response.access_token,\r\n      };\r\n\r\n      if (userData.role !== \"job_seeker\") {\r\n        alert(\"You are trying to log in as a job seeker with an employer account.\");\r\n        return;\r\n      }\r\n\r\n      login(userData);\r\n      alert(\"Login successful!\");\r\n      navigate(\"/jobs\");\r\n    } catch (error) {\r\n      console.error(\"Login error:\", error);\r\n      alert(error.response?.data?.detail || \"Invalid email or password.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <h2>Employer Login</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"email\"\r\n          name=\"email\"\r\n          placeholder=\"Work Email\"\r\n          value={formData.email}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          name=\"password\"\r\n          placeholder=\"Password\"\r\n          value={formData.password}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n        <button type=\"submit\">Login</button>\r\n      </form>\r\n      <p>Don't have an account? <a href=\"/employer-signup\">Sign up here</a></p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EmployerLogin;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}