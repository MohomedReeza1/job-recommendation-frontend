{"ast":null,"code":"var _jsxFileName = \"C:\\\\final_year_project\\\\app\\\\frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from \"react\";\nimport { loginJobSeeker, loginEmployer } from \"../services/api\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const navigate = useNavigate();\n  const [user, setUser] = useState(() => {\n    const storedUser = localStorage.getItem(\"user\");\n    return storedUser ? JSON.parse(storedUser) : null;\n  });\n\n  // const login = async (email, password, role) => {\n  //     try {\n  //         const data = role === \"job_seeker\"\n  //             ? await loginJobSeeker(email, password)\n  //             : await loginEmployer(email, password);\n\n  //         const newUser = {\n  //             email,\n  //             role: data.role,\n  //             user_id: data.user_id,  // Ensure this is correctly retrieved\n  //             token: data.access_token\n  //         };\n\n  //         setUser(newUser);\n  //         localStorage.setItem(\"user\", JSON.stringify(newUser));\n  //         localStorage.setItem(\"token\", data.access_token);\n  //     } catch (error) {\n  //         throw new Error(\"Invalid credentials.\");\n  //     }\n  // };\n\n  const login = async (email, password, role) => {\n    try {\n      let response;\n      if (role === \"job_seeker\") {\n        response = await loginJobSeeker(email, password);\n      } else if (role === \"recruiter\") {\n        response = await loginEmployer(email, password);\n      }\n      const {\n        access_token,\n        role: userRole,\n        user_id\n      } = response.data;\n      localStorage.setItem(\"token\", access_token);\n      localStorage.setItem(\"role\", userRole);\n      localStorage.setItem(\"user_id\", user_id);\n      setUser({\n        email,\n        role: userRole,\n        token: access_token,\n        user_id\n      });\n      if (userRole === \"job_seeker\") {\n        navigate(\"/jobs\");\n      } else {\n        navigate(\"/my-posted-jobs\");\n      }\n    } catch (error) {\n      console.error(\"Login failed:\", error);\n      alert(\"Invalid credentials.\");\n    }\n  };\n  const logout = () => {\n    setUser(null);\n    localStorage.removeItem(\"user\");\n    localStorage.removeItem(\"token\");\n  };\n  useEffect(() => {\n    console.log(\"Logged in user data:\", user); // Debugging line\n  }, [user]);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthProvider, \"w+xxq0T83JGFIcVInsyFh+lQev8=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","loginJobSeeker","loginEmployer","useNavigate","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","navigate","user","setUser","storedUser","localStorage","getItem","JSON","parse","login","email","password","role","response","access_token","userRole","user_id","data","setItem","token","error","console","alert","logout","removeItem","log","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["C:/final_year_project/app/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from \"react\";\r\nimport { loginJobSeeker, loginEmployer } from \"../services/api\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n    const navigate = useNavigate();\r\n    const [user, setUser] = useState(() => {\r\n        const storedUser = localStorage.getItem(\"user\");\r\n        return storedUser ? JSON.parse(storedUser) : null;\r\n    });\r\n\r\n    // const login = async (email, password, role) => {\r\n    //     try {\r\n    //         const data = role === \"job_seeker\"\r\n    //             ? await loginJobSeeker(email, password)\r\n    //             : await loginEmployer(email, password);\r\n            \r\n    //         const newUser = {\r\n    //             email,\r\n    //             role: data.role,\r\n    //             user_id: data.user_id,  // Ensure this is correctly retrieved\r\n    //             token: data.access_token\r\n    //         };\r\n\r\n    //         setUser(newUser);\r\n    //         localStorage.setItem(\"user\", JSON.stringify(newUser));\r\n    //         localStorage.setItem(\"token\", data.access_token);\r\n    //     } catch (error) {\r\n    //         throw new Error(\"Invalid credentials.\");\r\n    //     }\r\n    // };\r\n\r\n    const login = async (email, password, role) => {\r\n      try {\r\n          let response;\r\n          if (role === \"job_seeker\") {\r\n              response = await loginJobSeeker(email, password);\r\n          } else if (role === \"recruiter\") {\r\n              response = await loginEmployer(email, password);\r\n          }\r\n  \r\n          const { access_token, role: userRole, user_id } = response.data;\r\n  \r\n          localStorage.setItem(\"token\", access_token);\r\n          localStorage.setItem(\"role\", userRole);\r\n          localStorage.setItem(\"user_id\", user_id);\r\n  \r\n          setUser({ email, role: userRole, token: access_token, user_id });\r\n  \r\n          if (userRole === \"job_seeker\") {\r\n              navigate(\"/jobs\");\r\n          } else {\r\n              navigate(\"/my-posted-jobs\");\r\n          }\r\n      } catch (error) {\r\n          console.error(\"Login failed:\", error);\r\n          alert(\"Invalid credentials.\");\r\n      }\r\n    };\r\n\r\n    const logout = () => {\r\n        setUser(null);\r\n        localStorage.removeItem(\"user\");\r\n        localStorage.removeItem(\"token\");\r\n    };\r\n\r\n    useEffect(() => {\r\n      console.log(\"Logged in user data:\", user); // Debugging line\r\n    }, [user]);\r\n\r\n    return (\r\n        <AuthContext.Provider value={{ user, login, logout }}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    );\r\n};\r\n\r\nexport const useAuth = () => useContext(AuthContext);\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}