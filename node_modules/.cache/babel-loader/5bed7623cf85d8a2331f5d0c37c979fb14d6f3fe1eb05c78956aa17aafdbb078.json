{"ast":null,"code":"var _jsxFileName = \"C:\\\\final_year_project\\\\app\\\\frontend\\\\src\\\\pages\\\\ApplyJobPage.js\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from \"react\";\n// import { useParams, useNavigate } from \"react-router-dom\";\n// import { api } from \"../services/api\";\n// import '../styles/ApplyJobPages.css';\n\n// const ApplyJobPage = ({ isFromRecommendations }) => {\n//   const { jobId } = useParams();\n//   const [jobDetails, setJobDetails] = useState(null);\n//   const [formData, setFormData] = useState({});\n//   const navigate = useNavigate();\n\n//   useEffect(() => {\n//     const fetchJobDetails = async () => {\n//       try {\n//         const response = await api.get(`/jobs/${jobId}`);\n//         setJobDetails(response.data);\n//       } catch (error) {\n//         console.error(\"Error fetching job details:\", error);\n//       }\n//     };\n\n//     fetchJobDetails();\n//   }, [jobId]);\n\n//   const handleChange = (e) => {\n//     const { name, value } = e.target;\n//     setFormData({ ...formData, name: value });\n//   };\n\n//   const handleApply = async () => {\n//     try {\n//       await api.post(\"/apply-job/\", {\n//         seeker_id: 1, // Use the actual user ID\n//         job_id: jobId,\n//       });\n//       alert(\"Applied successfully!\");\n//       navigate(\"/applied-jobs\");\n//     } catch (error) {\n//       console.error(\"Error applying for job:\", error);\n//       alert(\"Failed to apply.\");\n//     }\n//   };\n\n//   return (\n//     <div className=\"apply-job-page\">\n//       {jobDetails && (\n//         <>\n//           <h2>{jobDetails.job_title}</h2>\n//           <p>{jobDetails.job_description}</p>\n//           <p>Country: {jobDetails.country}</p>\n//           <p>Skills Required: {jobDetails.skills_required}</p>\n//           <p>Salary: {jobDetails.salary}</p>\n//           {!isFromRecommendations && (\n//             <div>\n//               <h3>Enter Your Details</h3>\n//               <input\n//                 type=\"text\"\n//                 placeholder=\"Name\"\n//                 name=\"name\"\n//                 onChange={handleChange}\n//               />\n//               {/* Add other fields as required */}\n//             </div>\n//           )}\n//           <button onClick={handleApply}>Confirm Apply</button>\n//         </>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default ApplyJobPage;\n\nimport React, { useEffect, useState } from \"react\";\nimport { useParams, useNavigate, useLocation } from \"react-router-dom\";\nimport { api } from \"../services/api\";\nimport '../styles/ApplyJobPages.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ApplyJobPage = () => {\n  _s();\n  var _location$state;\n  const {\n    jobId\n  } = useParams();\n  const location = useLocation();\n  const isFromRecommendations = (_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.isFromRecommendations;\n  const [jobDetails, setJobDetails] = useState(null);\n  const [formData, setFormData] = useState({});\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchJobDetails = async () => {\n      try {\n        const response = await api.get(`/jobs/${jobId}`);\n        setJobDetails(response.data);\n      } catch (error) {\n        console.error(\"Error fetching job details:\", error);\n      }\n    };\n    fetchJobDetails();\n    if (isFromRecommendations) {\n      const savedUserData = JSON.parse(localStorage.getItem(\"userData\"));\n      if (savedUserData) setFormData(savedUserData);\n    }\n  }, [jobId, isFromRecommendations]);\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n  const handleApply = async () => {\n    try {\n      let seekerId = localStorage.getItem(\"seekerId\");\n      if (!seekerId) {\n        const response = await api.post(\"/seekers/\", formData);\n        seekerId = response.data.seeker_id;\n        localStorage.setItem(\"seekerId\", seekerId);\n        localStorage.setItem(\"userData\", JSON.stringify(formData));\n      }\n      await api.post(\"/apply-job/\", {\n        seeker_id: seekerId,\n        job_id: jobId\n      });\n      alert(\"Applied successfully!\");\n      navigate(\"/applied-jobs\");\n    } catch (error) {\n      console.error(\"Error applying for job:\", error);\n      alert(\"Failed to apply.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"apply-job-page\",\n    children: jobDetails && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: jobDetails.job_title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: jobDetails.job_description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Country: \", jobDetails.country]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Skills Required: \", jobDetails.skills_required]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Salary: \", jobDetails.salary]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }, this), !isFromRecommendations && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Enter Your Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Name\",\n          name: \"name\",\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          placeholder: \"Age\",\n          name: \"age\",\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Gender\",\n          name: \"gender\",\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Skills\",\n          name: \"skills\",\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleApply,\n        children: \"Confirm Apply\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 5\n  }, this);\n};\n_s(ApplyJobPage, \"E0tNJh+CjlyCWpTd3V/l4+rGFg4=\", false, function () {\n  return [useParams, useLocation, useNavigate];\n});\n_c = ApplyJobPage;\nexport default ApplyJobPage;\nvar _c;\n$RefreshReg$(_c, \"ApplyJobPage\");","map":{"version":3,"names":["React","useEffect","useState","useParams","useNavigate","useLocation","api","jsxDEV","_jsxDEV","Fragment","_Fragment","ApplyJobPage","_s","_location$state","jobId","location","isFromRecommendations","state","jobDetails","setJobDetails","formData","setFormData","navigate","fetchJobDetails","response","get","data","error","console","savedUserData","JSON","parse","localStorage","getItem","handleChange","e","name","value","target","handleApply","seekerId","post","seeker_id","setItem","stringify","job_id","alert","className","children","job_title","fileName","_jsxFileName","lineNumber","columnNumber","job_description","country","skills_required","salary","type","placeholder","onChange","onClick","_c","$RefreshReg$"],"sources":["C:/final_year_project/app/frontend/src/pages/ApplyJobPage.js"],"sourcesContent":["// import React, { useEffect, useState } from \"react\";\r\n// import { useParams, useNavigate } from \"react-router-dom\";\r\n// import { api } from \"../services/api\";\r\n// import '../styles/ApplyJobPages.css';\r\n\r\n// const ApplyJobPage = ({ isFromRecommendations }) => {\r\n//   const { jobId } = useParams();\r\n//   const [jobDetails, setJobDetails] = useState(null);\r\n//   const [formData, setFormData] = useState({});\r\n//   const navigate = useNavigate();\r\n\r\n//   useEffect(() => {\r\n//     const fetchJobDetails = async () => {\r\n//       try {\r\n//         const response = await api.get(`/jobs/${jobId}`);\r\n//         setJobDetails(response.data);\r\n//       } catch (error) {\r\n//         console.error(\"Error fetching job details:\", error);\r\n//       }\r\n//     };\r\n\r\n//     fetchJobDetails();\r\n//   }, [jobId]);\r\n\r\n//   const handleChange = (e) => {\r\n//     const { name, value } = e.target;\r\n//     setFormData({ ...formData, name: value });\r\n//   };\r\n\r\n//   const handleApply = async () => {\r\n//     try {\r\n//       await api.post(\"/apply-job/\", {\r\n//         seeker_id: 1, // Use the actual user ID\r\n//         job_id: jobId,\r\n//       });\r\n//       alert(\"Applied successfully!\");\r\n//       navigate(\"/applied-jobs\");\r\n//     } catch (error) {\r\n//       console.error(\"Error applying for job:\", error);\r\n//       alert(\"Failed to apply.\");\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"apply-job-page\">\r\n//       {jobDetails && (\r\n//         <>\r\n//           <h2>{jobDetails.job_title}</h2>\r\n//           <p>{jobDetails.job_description}</p>\r\n//           <p>Country: {jobDetails.country}</p>\r\n//           <p>Skills Required: {jobDetails.skills_required}</p>\r\n//           <p>Salary: {jobDetails.salary}</p>\r\n//           {!isFromRecommendations && (\r\n//             <div>\r\n//               <h3>Enter Your Details</h3>\r\n//               <input\r\n//                 type=\"text\"\r\n//                 placeholder=\"Name\"\r\n//                 name=\"name\"\r\n//                 onChange={handleChange}\r\n//               />\r\n//               {/* Add other fields as required */}\r\n//             </div>\r\n//           )}\r\n//           <button onClick={handleApply}>Confirm Apply</button>\r\n//         </>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default ApplyJobPage;\r\n\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useParams, useNavigate, useLocation } from \"react-router-dom\";\r\nimport { api } from \"../services/api\";\r\nimport '../styles/ApplyJobPages.css';\r\n\r\nconst ApplyJobPage = () => {\r\n  const { jobId } = useParams();\r\n  const location = useLocation();\r\n  const isFromRecommendations = location.state?.isFromRecommendations;\r\n  const [jobDetails, setJobDetails] = useState(null);\r\n  const [formData, setFormData] = useState({});\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const fetchJobDetails = async () => {\r\n      try {\r\n        const response = await api.get(`/jobs/${jobId}`);\r\n        setJobDetails(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching job details:\", error);\r\n      }\r\n    };\r\n\r\n    fetchJobDetails();\r\n\r\n    if (isFromRecommendations) {\r\n      const savedUserData = JSON.parse(localStorage.getItem(\"userData\"));\r\n      if (savedUserData) setFormData(savedUserData);\r\n    }\r\n  }, [jobId, isFromRecommendations]);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({ ...formData, [name]: value });\r\n  };\r\n\r\n  const handleApply = async () => {\r\n    try {\r\n      let seekerId = localStorage.getItem(\"seekerId\");\r\n\r\n      if (!seekerId) {\r\n        const response = await api.post(\"/seekers/\", formData);\r\n        seekerId = response.data.seeker_id;\r\n        localStorage.setItem(\"seekerId\", seekerId);\r\n        localStorage.setItem(\"userData\", JSON.stringify(formData));\r\n      }\r\n\r\n      await api.post(\"/apply-job/\", { seeker_id: seekerId, job_id: jobId });\r\n\r\n      alert(\"Applied successfully!\");\r\n      navigate(\"/applied-jobs\");\r\n    } catch (error) {\r\n      console.error(\"Error applying for job:\", error);\r\n      alert(\"Failed to apply.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"apply-job-page\">\r\n      {jobDetails && (\r\n        <>\r\n          <h2>{jobDetails.job_title}</h2>\r\n          <p>{jobDetails.job_description}</p>\r\n          <p>Country: {jobDetails.country}</p>\r\n          <p>Skills Required: {jobDetails.skills_required}</p>\r\n          <p>Salary: {jobDetails.salary}</p>\r\n          {!isFromRecommendations && (\r\n            <div>\r\n              <h3>Enter Your Details</h3>\r\n              <input type=\"text\" placeholder=\"Name\" name=\"name\" onChange={handleChange} />\r\n              <input type=\"number\" placeholder=\"Age\" name=\"age\" onChange={handleChange} />\r\n              <input type=\"text\" placeholder=\"Gender\" name=\"gender\" onChange={handleChange} />\r\n              <input type=\"text\" placeholder=\"Skills\" name=\"skills\" onChange={handleChange} />\r\n            </div>\r\n          )}\r\n          <button onClick={handleApply}>Confirm Apply</button>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ApplyJobPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}