{"ast":null,"code":"import axios from \"axios\";\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL;\nexport const api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    \"Content-Type\": \"application/json\"\n  }\n});\n\n// Example: Fetch jobs\nexport const fetchJobs = async () => {\n  try {\n    const response = await api.get(\"/jobs/\");\n    return response.data;\n  } catch (error) {\n    console.error(\"Error fetching jobs:\", error);\n    throw error;\n  }\n};\n\n// Example: Get recommendations\nexport const fetchRecommendations = async userId => {\n  try {\n    const response = await api.get(`/recommendations/${userId}`);\n    return response.data;\n  } catch (error) {\n    console.error(\"Error fetching recommendations:\", error);\n    throw error;\n  }\n};\nexport const fetchRecommendationsWithForm = async formData => {\n  try {\n    const response = await api.post(\"/recommendations/\", formData);\n    return response.data;\n  } catch (error) {\n    console.error(\"Error fetching recommendations:\", error);\n    throw error;\n  }\n};\nexport const fetchAppliedJobs = async seekerId => {\n  try {\n    const response = await api.get(`/applied-jobs/${seekerId}`);\n    return response.data;\n  } catch (error) {\n    console.error(\"Error fetching applied jobs:\", error);\n    throw error;\n  }\n};\nexport const loginJobSeeker = async (email, password) => {\n  try {\n    const response = await axios.post(\"/auth/login\", new URLSearchParams({\n      username: email,\n      password,\n      scope: \"job_seeker\"\n    }), {\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded\"\n      }\n    });\n    return response.data;\n  } catch (error) {\n    var _error$response;\n    console.error(\"Login error:\", ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n    throw error;\n  }\n};\nexport const loginEmployer = async (email, password) => {\n  try {\n    const response = await axios.post(\"/auth/login\", new URLSearchParams({\n      username: email,\n      password,\n      scope: \"recruiter\"\n    }), {\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded\"\n      }\n    });\n    return response.data;\n  } catch (error) {\n    var _error$response2;\n    console.error(\"Login error:\", ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || error.message);\n    throw error;\n  }\n};\n\n/////////////\n\n// ✅ Fetch Job Seeker Profile\nexport const fetchJobSeekerProfile = async userId => {\n  const token = localStorage.getItem(\"token\");\n  const response = await api.get(`/seekers/${userId}`, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n  return response.data;\n};\nexport const createJobSeekerProfile = async (userId, profileData) => {\n  const token = localStorage.getItem(\"token\");\n  const response = await axios.post(`/seekers/${userId}`, profileData, {\n    headers: {\n      Authorization: `Bearer ${token}`,\n      \"Content-Type\": \"application/json\"\n    }\n  });\n  return response.data;\n};\nexport const updateJobSeekerProfile = async (userId, profileData) => {\n  const token = localStorage.getItem(\"token\");\n  const response = await api.put(`/seekers/${userId}`, profileData, {\n    headers: {\n      Authorization: `Bearer ${token}`,\n      \"Content-Type\": \"application/json\"\n    }\n  });\n  return response.data;\n};","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_BASE_URL","api","create","baseURL","headers","fetchJobs","response","get","data","error","console","fetchRecommendations","userId","fetchRecommendationsWithForm","formData","post","fetchAppliedJobs","seekerId","loginJobSeeker","email","password","URLSearchParams","username","scope","_error$response","message","loginEmployer","_error$response2","fetchJobSeekerProfile","token","localStorage","getItem","Authorization","createJobSeekerProfile","profileData","updateJobSeekerProfile","put"],"sources":["C:/final_year_project/app/frontend/src/services/api.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL;\r\n\r\nexport const api = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  headers: {\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n});\r\n\r\n// Example: Fetch jobs\r\nexport const fetchJobs = async () => {\r\n  try {\r\n    const response = await api.get(\"/jobs/\");\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Error fetching jobs:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Example: Get recommendations\r\nexport const fetchRecommendations = async (userId) => {\r\n  try {\r\n    const response = await api.get(`/recommendations/${userId}`);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Error fetching recommendations:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const fetchRecommendationsWithForm = async (formData) => {\r\n  try {\r\n    const response = await api.post(\"/recommendations/\", formData);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Error fetching recommendations:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const fetchAppliedJobs = async (seekerId) => {\r\n  try {\r\n    const response = await api.get(`/applied-jobs/${seekerId}`);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Error fetching applied jobs:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const loginJobSeeker = async (email, password) => {\r\n  try {\r\n    const response = await axios.post(\"/auth/login\", new URLSearchParams({ \r\n      username: email, password, scope: \"job_seeker\" }),\r\n      { headers: { \"Content-Type\": \"application/x-www-form-urlencoded\" } }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Login error:\", error.response?.data || error.message);\r\n    throw error;\r\n  }\r\n};\r\n\r\n\r\nexport const loginEmployer = async (email, password) => {\r\n  try {\r\n    const response = await axios.post(\"/auth/login\", new URLSearchParams({\r\n      username: email, password, scope: \"recruiter\" }),\r\n      { headers: { \"Content-Type\": \"application/x-www-form-urlencoded\" } }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Login error:\", error.response?.data || error.message);\r\n    throw error;\r\n  }\r\n};\r\n\r\n/////////////\r\n\r\n// ✅ Fetch Job Seeker Profile\r\nexport const fetchJobSeekerProfile = async (userId) => {\r\n  const token = localStorage.getItem(\"token\");\r\n  const response = await api.get(`/seekers/${userId}`, {\r\n      headers: { Authorization: `Bearer ${token}` },\r\n  });\r\n  return response.data;\r\n};\r\n\r\n\r\nexport const createJobSeekerProfile = async (userId, profileData) => {\r\n  const token = localStorage.getItem(\"token\");\r\n  const response = await axios.post(`/seekers/${userId}`, profileData, {\r\n      headers: { Authorization: `Bearer ${token}`, \"Content-Type\": \"application/json\" },\r\n  });\r\n  return response.data;\r\n};\r\n\r\nexport const updateJobSeekerProfile = async (userId, profileData) => {\r\n  const token = localStorage.getItem(\"token\");\r\n  const response = await api.put(`/seekers/${userId}`, profileData, {\r\n      headers: { Authorization: `Bearer ${token}`, \"Content-Type\": \"application/json\" },\r\n  });\r\n  return response.data;\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}