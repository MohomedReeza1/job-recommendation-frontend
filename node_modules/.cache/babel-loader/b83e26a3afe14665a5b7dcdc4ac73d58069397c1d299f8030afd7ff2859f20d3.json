{"ast":null,"code":"var _jsxFileName = \"C:\\\\final_year_project\\\\app\\\\frontend\\\\src\\\\pages\\\\AppliedJobsPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { api } from \"../services/api\";\nimport { useAuth } from \"../context/AuthContext\"; // Ensure you have authentication context\nimport '../styles/ApplyJobPages.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AppliedJobsPage = () => {\n  _s();\n  const {\n    user\n  } = useAuth(); // Get logged-in user details\n  const seekerId = user === null || user === void 0 ? void 0 : user.seeker_id; // Extract job seeker ID\n  const [appliedJobs, setAppliedJobs] = useState([]);\n\n  // useEffect(() => {\n  //   const fetchAppliedJobs = async () => {\n  //     if (!seekerId) return; // Prevent API call if user not logged in\n  //     try {\n  //       const response = await api.get(`/applied-jobs/${seekerId}`);\n  //       setAppliedJobs(response.data);\n  //     } catch (error) {\n  //       console.error(\"Error fetching applied jobs:\", error);\n  //     }\n  //   };\n\n  //   fetchAppliedJobs();\n  // }, [seekerId]); // Dependency array includes seekerId\n\n  useEffect(() => {\n    const fetchAppliedJobs = async () => {\n      try {\n        const response = await api.get(`/applied-jobs/1`); // Replace with dynamic ID later\n        console.log(\"Applied Jobs API Response:\", response.data); // ✅ Debug log\n        setAppliedJobs(response.data);\n      } catch (error) {\n        console.error(\"Error fetching applied jobs:\", error);\n      }\n    };\n    fetchAppliedJobs();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"applied-jobs-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Applied Jobs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), appliedJobs.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: appliedJobs.map(job => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: job.job_title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: job.country\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Applied on: \", new Date(job.applied_at).toLocaleDateString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 15\n        }, this)]\n      }, job.job_id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No jobs applied yet.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(AppliedJobsPage, \"v7gJtahJqBYRwrRNXrjMtvu0H7U=\", false, function () {\n  return [useAuth];\n});\n_c = AppliedJobsPage;\nexport default AppliedJobsPage;\nvar _c;\n$RefreshReg$(_c, \"AppliedJobsPage\");","map":{"version":3,"names":["React","useEffect","useState","api","useAuth","jsxDEV","_jsxDEV","AppliedJobsPage","_s","user","seekerId","seeker_id","appliedJobs","setAppliedJobs","fetchAppliedJobs","response","get","console","log","data","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","job","job_title","country","Date","applied_at","toLocaleDateString","job_id","_c","$RefreshReg$"],"sources":["C:/final_year_project/app/frontend/src/pages/AppliedJobsPage.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { api } from \"../services/api\";\r\nimport { useAuth } from \"../context/AuthContext\"; // Ensure you have authentication context\r\nimport '../styles/ApplyJobPages.css';\r\n\r\nconst AppliedJobsPage = () => {\r\n  const { user } = useAuth(); // Get logged-in user details\r\n  const seekerId = user?.seeker_id; // Extract job seeker ID\r\n  const [appliedJobs, setAppliedJobs] = useState([]);\r\n\r\n  // useEffect(() => {\r\n  //   const fetchAppliedJobs = async () => {\r\n  //     if (!seekerId) return; // Prevent API call if user not logged in\r\n  //     try {\r\n  //       const response = await api.get(`/applied-jobs/${seekerId}`);\r\n  //       setAppliedJobs(response.data);\r\n  //     } catch (error) {\r\n  //       console.error(\"Error fetching applied jobs:\", error);\r\n  //     }\r\n  //   };\r\n\r\n  //   fetchAppliedJobs();\r\n  // }, [seekerId]); // Dependency array includes seekerId\r\n\r\n  useEffect(() => {\r\n    const fetchAppliedJobs = async () => {\r\n      try {\r\n        const response = await api.get(`/applied-jobs/1`); // Replace with dynamic ID later\r\n        console.log(\"Applied Jobs API Response:\", response.data); // ✅ Debug log\r\n        setAppliedJobs(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching applied jobs:\", error);\r\n      }\r\n    };\r\n  \r\n    fetchAppliedJobs();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"applied-jobs-page\">\r\n      <h2>Applied Jobs</h2>\r\n      {appliedJobs.length > 0 ? (\r\n        <ul>\r\n          {appliedJobs.map((job) => (\r\n            <li key={job.job_id}>\r\n              <h3>{job.job_title}</h3>\r\n              <p>{job.country}</p>\r\n              <p>Applied on: {new Date(job.applied_at).toLocaleDateString()}</p>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      ) : (\r\n        <p>No jobs applied yet.</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AppliedJobsPage;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,GAAG,QAAQ,iBAAiB;AACrC,SAASC,OAAO,QAAQ,wBAAwB,CAAC,CAAC;AAClD,OAAO,6BAA6B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErC,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM;IAAEC;EAAK,CAAC,GAAGL,OAAO,CAAC,CAAC,CAAC,CAAC;EAC5B,MAAMM,QAAQ,GAAGD,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEE,SAAS,CAAC,CAAC;EAClC,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;;EAElD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;;EAEAD,SAAS,CAAC,MAAM;IACd,MAAMa,gBAAgB,GAAG,MAAAA,CAAA,KAAY;MACnC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMZ,GAAG,CAACa,GAAG,CAAC,iBAAiB,CAAC,CAAC,CAAC;QACnDC,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEH,QAAQ,CAACI,IAAI,CAAC,CAAC,CAAC;QAC1DN,cAAc,CAACE,QAAQ,CAACI,IAAI,CAAC;MAC/B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdH,OAAO,CAACG,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACtD;IACF,CAAC;IAEDN,gBAAgB,CAAC,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACER,OAAA;IAAKe,SAAS,EAAC,mBAAmB;IAAAC,QAAA,gBAChChB,OAAA;MAAAgB,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACpBd,WAAW,CAACe,MAAM,GAAG,CAAC,gBACrBrB,OAAA;MAAAgB,QAAA,EACGV,WAAW,CAACgB,GAAG,CAAEC,GAAG,iBACnBvB,OAAA;QAAAgB,QAAA,gBACEhB,OAAA;UAAAgB,QAAA,EAAKO,GAAG,CAACC;QAAS;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACxBpB,OAAA;UAAAgB,QAAA,EAAIO,GAAG,CAACE;QAAO;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACpBpB,OAAA;UAAAgB,QAAA,GAAG,cAAY,EAAC,IAAIU,IAAI,CAACH,GAAG,CAACI,UAAU,CAAC,CAACC,kBAAkB,CAAC,CAAC;QAAA;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA,GAH3DG,GAAG,CAACM,MAAM;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIf,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,gBAELpB,OAAA;MAAAgB,QAAA,EAAG;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAC3B;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAClB,EAAA,CAnDID,eAAe;EAAA,QACFH,OAAO;AAAA;AAAAgC,EAAA,GADpB7B,eAAe;AAqDrB,eAAeA,eAAe;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}