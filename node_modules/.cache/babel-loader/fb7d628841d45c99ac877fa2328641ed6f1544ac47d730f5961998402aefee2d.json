{"ast":null,"code":"import axios from \"axios\";\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL || \"http://127.0.0.1:8000/api\";\nexport const api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    \"Content-Type\": \"application/json\"\n  }\n});\nexport const fetchJobs = async () => {\n  try {\n    const response = await api.get(\"/jobs/\");\n    return response.data;\n  } catch (error) {\n    console.error(\"Error fetching jobs:\", error);\n    throw error;\n  }\n};\nexport const fetchRecommendations = async userId => {\n  try {\n    const response = await api.get(`/recommendations/${userId}`);\n    return response.data;\n  } catch (error) {\n    console.error(\"Error fetching recommendations:\", error);\n    throw error;\n  }\n};\nexport const fetchRecommendationsWithForm = async formData => {\n  try {\n    const response = await api.post(\"/recommendations/\", formData);\n    return response.data;\n  } catch (error) {\n    console.error(\"Error fetching recommendations:\", error);\n    throw error;\n  }\n};\nexport const fetchAppliedJobs = async userId => {\n  if (!userId) {\n    console.error(\"fetchAppliedJobs: No user ID provided\");\n    return [];\n  }\n  try {\n    const token = localStorage.getItem(\"token\");\n    if (!token) {\n      console.error(\"fetchAppliedJobs: No auth token found\");\n      throw new Error(\"Authentication required\");\n    }\n    console.log(`Sending request to fetch applied jobs for user ID: ${userId}`);\n    const response = await api.get(`/applied-jobs/${userId}`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return response.data;\n  } catch (error) {\n    var _error$response;\n    console.error(\"Error fetching applied jobs:\", ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n    // Return empty array instead of throwing to prevent UI errors\n    return [];\n  }\n};\nexport const loginJobSeeker = async (email, password) => {\n  try {\n    const response = await api.post(\"/auth/login\", new URLSearchParams({\n      username: email,\n      password,\n      scope: \"job_seeker\"\n    }), {\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded\"\n      }\n    });\n    return response.data;\n  } catch (error) {\n    var _error$response2;\n    console.error(\"Login error:\", ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || error.message);\n    throw error;\n  }\n};\nexport const loginEmployer = async (email, password) => {\n  try {\n    const response = await api.post(\"/auth/login\", new URLSearchParams({\n      username: email,\n      password,\n      scope: \"recruiter\"\n    }), {\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded\"\n      }\n    });\n    return response.data;\n  } catch (error) {\n    var _error$response3;\n    console.error(\"Login error:\", ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data) || error.message);\n    throw error;\n  }\n};\n\n// ✅ Fetch Job Seeker Profile\nexport const fetchJobSeekerProfile = async userId => {\n  const token = localStorage.getItem(\"token\");\n  if (!token) {\n    console.error(\"fetchJobSeekerProfile: No auth token found!\");\n    throw new Error(\"Unauthorized: No token available.\");\n  }\n  try {\n    const response = await api.get(`/seekers/${userId}`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return response.data;\n  } catch (error) {\n    var _error$response4;\n    console.error(\"Error fetching job seeker profile:\", ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.data) || error.message);\n    throw error;\n  }\n};\nexport const createJobSeekerProfile = async profileData => {\n  const token = localStorage.getItem(\"token\");\n  const response = await api.post(\"/seekers/\", profileData, {\n    headers: {\n      Authorization: `Bearer ${token}`,\n      \"Content-Type\": \"application/json\"\n    }\n  });\n  return response.data;\n};\nexport const updateJobSeekerProfile = async (userId, profileData) => {\n  const token = localStorage.getItem(\"token\");\n  const response = await api.put(`/seekers/${userId}`, profileData, {\n    headers: {\n      Authorization: `Bearer ${token}`,\n      \"Content-Type\": \"application/json\"\n    }\n  });\n  return response.data;\n};\nexport const fetchRecruiterProfile = async userId => {\n  const token = localStorage.getItem(\"token\");\n  return api.get(`/recruiters/${userId}`, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  }).then(res => res.data);\n};\nexport const createRecruiterProfile = async profileData => {\n  const token = localStorage.getItem(\"token\");\n  return api.post(\"/recruiters/\", JSON.stringify(profileData), {\n    headers: {\n      Authorization: `Bearer ${token}`,\n      \"Content-Type\": \"application/json\"\n    }\n  }).then(res => res.data);\n};\nexport const updateRecruiterProfile = async (userId, profileData) => {\n  const token = localStorage.getItem(\"token\");\n  return api.put(`/recruiters/${userId}`, profileData, {\n    headers: {\n      Authorization: `Bearer ${token}`,\n      \"Content-Type\": \"application/json\"\n    }\n  }).then(res => res.data);\n};","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_BASE_URL","api","create","baseURL","headers","fetchJobs","response","get","data","error","console","fetchRecommendations","userId","fetchRecommendationsWithForm","formData","post","fetchAppliedJobs","token","localStorage","getItem","Error","log","Authorization","_error$response","message","loginJobSeeker","email","password","URLSearchParams","username","scope","_error$response2","loginEmployer","_error$response3","fetchJobSeekerProfile","_error$response4","createJobSeekerProfile","profileData","updateJobSeekerProfile","put","fetchRecruiterProfile","then","res","createRecruiterProfile","JSON","stringify","updateRecruiterProfile"],"sources":["C:/final_year_project/app/frontend/src/services/api.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL || \"http://127.0.0.1:8000/api\";\r\n\r\nexport const api = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  headers: {\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n});\r\n\r\nexport const fetchJobs = async () => {\r\n  try {\r\n    const response = await api.get(\"/jobs/\");\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Error fetching jobs:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const fetchRecommendations = async (userId) => {\r\n  try {\r\n    const response = await api.get(`/recommendations/${userId}`);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Error fetching recommendations:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const fetchRecommendationsWithForm = async (formData) => {\r\n  try {\r\n    const response = await api.post(\"/recommendations/\", formData);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Error fetching recommendations:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const fetchAppliedJobs = async (userId) => {\r\n  if (!userId) {\r\n    console.error(\"fetchAppliedJobs: No user ID provided\");\r\n    return [];\r\n  }\r\n  \r\n  try {\r\n    const token = localStorage.getItem(\"token\");\r\n    if (!token) {\r\n      console.error(\"fetchAppliedJobs: No auth token found\");\r\n      throw new Error(\"Authentication required\");\r\n    }\r\n    \r\n    console.log(`Sending request to fetch applied jobs for user ID: ${userId}`);\r\n    const response = await api.get(`/applied-jobs/${userId}`, {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`\r\n      }\r\n    });\r\n    \r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Error fetching applied jobs:\", error.response?.data || error.message);\r\n    // Return empty array instead of throwing to prevent UI errors\r\n    return [];\r\n  }\r\n};\r\n\r\nexport const loginJobSeeker = async (email, password) => {\r\n  try {\r\n    const response = await api.post(\"/auth/login\", new URLSearchParams({ \r\n      username: email, password, scope: \"job_seeker\" }),\r\n      { headers: { \"Content-Type\": \"application/x-www-form-urlencoded\" } }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Login error:\", error.response?.data || error.message);\r\n    throw error;\r\n  }\r\n};\r\n\r\n\r\nexport const loginEmployer = async (email, password) => {\r\n  try {\r\n    const response = await api.post(\"/auth/login\", new URLSearchParams({\r\n      username: email, password, scope: \"recruiter\" }),\r\n      { headers: { \"Content-Type\": \"application/x-www-form-urlencoded\" } }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Login error:\", error.response?.data || error.message);\r\n    throw error;\r\n  }\r\n};\r\n\r\n\r\n// ✅ Fetch Job Seeker Profile\r\nexport const fetchJobSeekerProfile = async (userId) => {\r\n  const token = localStorage.getItem(\"token\");\r\n  if (!token) {\r\n      console.error(\"fetchJobSeekerProfile: No auth token found!\");\r\n      throw new Error(\"Unauthorized: No token available.\");\r\n  }\r\n\r\n  try {\r\n      const response = await api.get(`/seekers/${userId}`, {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n      });\r\n      return response.data;\r\n  } catch (error) {\r\n      console.error(\"Error fetching job seeker profile:\", error.response?.data || error.message);\r\n      throw error;\r\n  }\r\n};\r\n\r\n\r\nexport const createJobSeekerProfile = async (profileData) => {\r\n  const token = localStorage.getItem(\"token\");\r\n  const response = await api.post(\"/seekers/\", profileData, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  });\r\n  return response.data;\r\n};\r\n\r\n\r\nexport const updateJobSeekerProfile = async (userId, profileData) => {\r\n  const token = localStorage.getItem(\"token\");\r\n  const response = await api.put(`/seekers/${userId}`, profileData, {\r\n      headers: { Authorization: `Bearer ${token}`, \"Content-Type\": \"application/json\" },\r\n  });\r\n  return response.data;\r\n};\r\n\r\nexport const fetchRecruiterProfile = async (userId) => {\r\n  const token = localStorage.getItem(\"token\");\r\n  return api.get(`/recruiters/${userId}`, {\r\n    headers: { Authorization: `Bearer ${token}` },\r\n  }).then(res => res.data);\r\n};\r\n\r\nexport const createRecruiterProfile = async (profileData) => {\r\n  const token = localStorage.getItem(\"token\");\r\n  return api.post(\"/recruiters/\", JSON.stringify(profileData), {\r\n    headers: { Authorization: `Bearer ${token}`, \"Content-Type\": \"application/json\" },\r\n  }).then(res => res.data);\r\n};\r\n\r\nexport const updateRecruiterProfile = async (userId, profileData) => {\r\n  const token = localStorage.getItem(\"token\");\r\n  return api.put(`/recruiters/${userId}`, profileData, {\r\n    headers: { Authorization: `Bearer ${token}`, \"Content-Type\": \"application/json\" },\r\n  }).then(res => res.data);\r\n};\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}