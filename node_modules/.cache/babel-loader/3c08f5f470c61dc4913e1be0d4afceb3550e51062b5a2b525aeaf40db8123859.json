{"ast":null,"code":"var _jsxFileName = \"C:\\\\final_year_project\\\\app\\\\frontend\\\\src\\\\pages\\\\JobSeekerLogin.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from \"react\";\n// import { api } from \"../services/api\";\n// import { useNavigate } from \"react-router-dom\";\n// import \"../styles/JobSeekerLogin.css\";\n// import { useAuth } from \"../context/AuthContext\"; \n\n// const JobSeekerLogin = () => {\n//   const { login } = useAuth();\n//   const navigate = useNavigate();\n//   const [formData, setFormData] = useState({\n//     email: \"\",\n//     password: \"\",\n//   });\n\n//   const handleChange = (e) => {\n//     const { name, value } = e.target;\n//     setFormData({ ...formData, [name]: value });\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     try {\n//       const response = await api.post(\"/auth/login\", new URLSearchParams({\n//         username: formData.email,\n//         password: formData.password,\n//       }),\n//       {\n//         headers: {\n//           \"Content-Type\": \"application/x-www-form-urlencoded\"\n//         }\n//       }\n\n//     );\n//       const userData = {\n//         email: formData.email,\n//         role: response.data.role,\n//         user_id: response.data.user_id,\n//         token: response.data.access_token\n//       };\n\n//       if (userData.role !== \"job_seeker\") {\n//         alert(\"You are trying to log in as a job seeker with an employer account.\");\n//         return;\n//       }\n\n//       login(userData);\n\n//       alert(\"Login successful!\");\n//       navigate(\"/jobs\");\n//     } catch (error) {\n//       console.error(\"Login error:\", error);\n//       alert(error.response?.data?.detail || \"Invalid email or password.\");\n//     }\n//   };\n\n//   return (\n//     <div className=\"login-container\">\n//       <h2>Job Seeker Login</h2>\n//       <form onSubmit={handleSubmit}>\n//         <input\n//           type=\"email\"\n//           name=\"email\"\n//           placeholder=\"Email\"\n//           value={formData.email}\n//           onChange={handleChange}\n//           required\n//         />\n//         <input\n//           type=\"password\"\n//           name=\"password\"\n//           placeholder=\"Password\"\n//           value={formData.password}\n//           onChange={handleChange}\n//           required\n//         />\n//         <button type=\"submit\">Login</button>\n//       </form>\n//       <p>Don't have an account? <a href=\"/signup\">Sign up here</a></p>\n//     </div>\n//   );\n// };\n\n// export default JobSeekerLogin;\n\nimport React, { useState } from \"react\";\nimport { useAuth } from \"../context/AuthContext\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"../styles/JobSeekerLogin.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst JobSeekerLogin = () => {\n  _s();\n  const {\n    login\n  } = useAuth();\n  const navigate = useNavigate();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(null);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError(null);\n    try {\n      await login({\n        email,\n        password\n      }, \"job_seeker\");\n      navigate(\"/jobs\"); // Redirect after successful login\n    } catch (err) {\n      setError(\"Invalid email or password.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Job Seeker Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Email\",\n        value: email,\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Don't have an account? \", /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"/signup\",\n        children: \"Sign up here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this);\n};\n_s(JobSeekerLogin, \"TLBIg5nkyHlbBr2gzQ3/e0Be+QE=\", false, function () {\n  return [useAuth, useNavigate];\n});\n_c = JobSeekerLogin;\nexport default JobSeekerLogin;\nvar _c;\n$RefreshReg$(_c, \"JobSeekerLogin\");","map":{"version":3,"names":["React","useState","useAuth","useNavigate","jsxDEV","_jsxDEV","JobSeekerLogin","_s","login","navigate","email","setEmail","password","setPassword","error","setError","handleSubmit","e","preventDefault","err","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","onSubmit","type","placeholder","value","onChange","target","href","_c","$RefreshReg$"],"sources":["C:/final_year_project/app/frontend/src/pages/JobSeekerLogin.js"],"sourcesContent":["// import React, { useState } from \"react\";\r\n// import { api } from \"../services/api\";\r\n// import { useNavigate } from \"react-router-dom\";\r\n// import \"../styles/JobSeekerLogin.css\";\r\n// import { useAuth } from \"../context/AuthContext\"; \r\n\r\n// const JobSeekerLogin = () => {\r\n//   const { login } = useAuth();\r\n//   const navigate = useNavigate();\r\n//   const [formData, setFormData] = useState({\r\n//     email: \"\",\r\n//     password: \"\",\r\n//   });\r\n\r\n//   const handleChange = (e) => {\r\n//     const { name, value } = e.target;\r\n//     setFormData({ ...formData, [name]: value });\r\n//   };\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     try {\r\n//       const response = await api.post(\"/auth/login\", new URLSearchParams({\r\n//         username: formData.email,\r\n//         password: formData.password,\r\n//       }),\r\n//       {\r\n//         headers: {\r\n//           \"Content-Type\": \"application/x-www-form-urlencoded\"\r\n//         }\r\n//       }\r\n\r\n//     );\r\n//       const userData = {\r\n//         email: formData.email,\r\n//         role: response.data.role,\r\n//         user_id: response.data.user_id,\r\n//         token: response.data.access_token\r\n//       };\r\n\r\n//       if (userData.role !== \"job_seeker\") {\r\n//         alert(\"You are trying to log in as a job seeker with an employer account.\");\r\n//         return;\r\n//       }\r\n\r\n//       login(userData);\r\n\r\n//       alert(\"Login successful!\");\r\n//       navigate(\"/jobs\");\r\n//     } catch (error) {\r\n//       console.error(\"Login error:\", error);\r\n//       alert(error.response?.data?.detail || \"Invalid email or password.\");\r\n//     }\r\n//   };\r\n\r\n\r\n//   return (\r\n//     <div className=\"login-container\">\r\n//       <h2>Job Seeker Login</h2>\r\n//       <form onSubmit={handleSubmit}>\r\n//         <input\r\n//           type=\"email\"\r\n//           name=\"email\"\r\n//           placeholder=\"Email\"\r\n//           value={formData.email}\r\n//           onChange={handleChange}\r\n//           required\r\n//         />\r\n//         <input\r\n//           type=\"password\"\r\n//           name=\"password\"\r\n//           placeholder=\"Password\"\r\n//           value={formData.password}\r\n//           onChange={handleChange}\r\n//           required\r\n//         />\r\n//         <button type=\"submit\">Login</button>\r\n//       </form>\r\n//       <p>Don't have an account? <a href=\"/signup\">Sign up here</a></p>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default JobSeekerLogin;\r\n\r\n\r\nimport React, { useState } from \"react\";\r\nimport { useAuth } from \"../context/AuthContext\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"../styles/JobSeekerLogin.css\";\r\n\r\nconst JobSeekerLogin = () => {\r\n  const { login } = useAuth();\r\n  const navigate = useNavigate();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setError] = useState(null);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setError(null);\r\n\r\n    try {\r\n      await login({ email, password }, \"job_seeker\");\r\n      navigate(\"/jobs\"); // Redirect after successful login\r\n    } catch (err) {\r\n      setError(\"Invalid email or password.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Job Seeker Login</h2>\r\n      {error && <p style={{ color: \"red\" }}>{error}</p>}\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"email\"\r\n          placeholder=\"Email\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n        />\r\n        <button type=\"submit\">Login</button>\r\n      </form>\r\n      <p>Don't have an account? <a href=\"/signup\">Sign up here</a></p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default JobSeekerLogin;\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,OAAO,QAAQ,wBAAwB;AAChD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAO,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM;IAAEC;EAAM,CAAC,GAAGN,OAAO,CAAC,CAAC;EAC3B,MAAMO,QAAQ,GAAGN,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMe,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBH,QAAQ,CAAC,IAAI,CAAC;IAEd,IAAI;MACF,MAAMP,KAAK,CAAC;QAAEE,KAAK;QAAEE;MAAS,CAAC,EAAE,YAAY,CAAC;MAC9CH,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC;IACrB,CAAC,CAAC,OAAOU,GAAG,EAAE;MACZJ,QAAQ,CAAC,4BAA4B,CAAC;IACxC;EACF,CAAC;EAED,oBACEV,OAAA;IAAAe,QAAA,gBACEf,OAAA;MAAAe,QAAA,EAAI;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACxBV,KAAK,iBAAIT,OAAA;MAAGoB,KAAK,EAAE;QAAEC,KAAK,EAAE;MAAM,CAAE;MAAAN,QAAA,EAAEN;IAAK;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjDnB,OAAA;MAAMsB,QAAQ,EAAEX,YAAa;MAAAI,QAAA,gBAC3Bf,OAAA;QACEuB,IAAI,EAAC,OAAO;QACZC,WAAW,EAAC,OAAO;QACnBC,KAAK,EAAEpB,KAAM;QACbqB,QAAQ,EAAGd,CAAC,IAAKN,QAAQ,CAACM,CAAC,CAACe,MAAM,CAACF,KAAK;MAAE;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3C,CAAC,eACFnB,OAAA;QACEuB,IAAI,EAAC,UAAU;QACfC,WAAW,EAAC,UAAU;QACtBC,KAAK,EAAElB,QAAS;QAChBmB,QAAQ,EAAGd,CAAC,IAAKJ,WAAW,CAACI,CAAC,CAACe,MAAM,CAACF,KAAK;MAAE;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9C,CAAC,eACFnB,OAAA;QAAQuB,IAAI,EAAC,QAAQ;QAAAR,QAAA,EAAC;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC,CAAC,eACPnB,OAAA;MAAAe,QAAA,GAAG,yBAAuB,eAAAf,OAAA;QAAG4B,IAAI,EAAC,SAAS;QAAAb,QAAA,EAAC;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7D,CAAC;AAEV,CAAC;AAACjB,EAAA,CAzCID,cAAc;EAAA,QACAJ,OAAO,EACRC,WAAW;AAAA;AAAA+B,EAAA,GAFxB5B,cAAc;AA2CpB,eAAeA,cAAc;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}